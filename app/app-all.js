/*
Copyright(c) 2012 GaiaEHR
*/
Ext.define("Ext.ux.LiveSearchGridPanel",{extend:"Ext.grid.Panel",requires:["Ext.toolbar.TextItem","Ext.form.field.Checkbox","Ext.form.field.Text","Ext.ux.statusbar.StatusBar"],searchValue:null,indexes:[],currentIndex:null,searchRegExp:null,caseSensitive:false,regExpMode:false,matchCls:"x-livesearch-match",defaultStatusText:i18n.nothing_found,initComponent:function(){var a=this;a.tbar=[i18n.search,{xtype:"textfield",name:"searchField",hideLabel:true,width:200,listeners:{change:{fn:a.onTextFieldChange,scope:this,buffer:100}}},{xtype:"button",text:"<",tooltip:i18n.find_previous_row,handler:a.onPreviousClick,scope:a},{xtype:"button",text:">",tooltip:i18n.find_next_row,handler:a.onNextClick,scope:a},"-",{xtype:"checkbox",hideLabel:true,margin:"0 0 0 4px",handler:a.regExpToggle,scope:a},i18n.regular_expression,{xtype:"checkbox",hideLabel:true,margin:"0 0 0 4px",handler:a.caseSensitiveToggle,scope:a},i18n.case_sensitive];a.bbar=Ext.create("Ext.ux.StatusBar",{defaultText:a.defaultStatusText,name:"searchStatusBar"});a.callParent(arguments)},afterRender:function(){var a=this;a.callParent(arguments);a.textField=a.down("textfield[name=searchField]");a.statusBar=a.down("statusbar[name=searchStatusBar]")},tagsRe:/<[^>]*>/gm,tagsProtect:"\x0f",regExpProtect:/\\|\/|\+|\\|\.|\[|\]|\{|\}|\?|\$|\*|\^|\|/gm,getSearchValue:function(){var b=this,c=b.textField.getValue();if(c===""){return null}if(!b.regExpMode){c=c.replace(b.regExpProtect,function(d){return"\\"+d})}else{try{new RegExp(c)}catch(a){b.statusBar.setStatus({text:a.message,iconCls:"x-status-error"});return null}if(c==="^"||c==="$"){return null}}return c},onTextFieldChange:function(){var b=this,a=0;b.view.refresh();b.statusBar.setStatus({text:b.defaultStatusText,iconCls:""});b.searchValue=b.getSearchValue();b.indexes=[];b.currentIndex=null;if(b.searchValue!==null){b.searchRegExp=new RegExp(b.searchValue,"g"+(b.caseSensitive?"":"i"));b.store.each(function(e,d){var h=Ext.fly(b.view.getNode(d)).down("td"),c,g,f;while(h){c=h.down(".x-grid-cell-inner");g=c.dom.innerHTML.match(b.tagsRe);f=c.dom.innerHTML.replace(b.tagsRe,b.tagsProtect);f=f.replace(b.searchRegExp,function(i){a+=1;if(Ext.Array.indexOf(b.indexes,d)===-1){b.indexes.push(d)}if(b.currentIndex===null){b.currentIndex=d}return'<span class="'+b.matchCls+'">'+i+"</span>"});Ext.each(g,function(i){f=f.replace(b.tagsProtect,i)});c.dom.innerHTML=f;h=h.next()}},b);if(b.currentIndex!==null){b.getSelectionModel().select(b.currentIndex);b.statusBar.setStatus({text:a+" "+i18n.matches_found,iconCls:"x-status-valid"})}}if(b.currentIndex===null){b.getSelectionModel().deselectAll()}b.textField.focus()},onPreviousClick:function(){var b=this,a;if((a=Ext.Array.indexOf(b.indexes,b.currentIndex))!==-1){b.currentIndex=b.indexes[a-1]||b.indexes[b.indexes.length-1];b.getSelectionModel().select(b.currentIndex)}},onNextClick:function(){var b=this,a;if((a=Ext.Array.indexOf(b.indexes,b.currentIndex))!==-1){b.currentIndex=b.indexes[a+1]||b.indexes[0];b.getSelectionModel().select(b.currentIndex)}},caseSensitiveToggle:function(b,a){this.caseSensitive=a;this.onTextFieldChange()},regExpToggle:function(b,a){this.regExpMode=a;this.onTextFieldChange()}});Ext.define("Ext.ux.SlidingPager",{extend:"Object",requires:["Ext.slider.Single","Ext.slider.Tip"],constructor:function(a){if(a){Ext.apply(this,a)}},init:function(b){var a=b.items.indexOf(b.child("#inputItem")),c;Ext.each(b.items.getRange(a-2,a+2),function(d){d.hide()});c=Ext.create("Ext.slider.Single",{width:114,minValue:1,maxValue:1,hideLabel:true,tipText:function(d){return Ext.String.format(i18n.page+" <b>{0}</b> "+i18n.of+" <b>{1}</b>",d.value,d.slider.maxValue)},listeners:{changecomplete:function(e,d){b.store.loadPage(d)}}});b.insert(a+1,c);b.on({change:function(d,e){if(e){c.setMaxValue(e.pageCount);c.setValue(e.currentPage)}}})}});Ext.define("Ext.ux.PreviewPlugin",{extend:"Ext.AbstractPlugin",alias:"plugin.preview",requires:["Ext.grid.feature.RowBody","Ext.grid.feature.RowWrap"],hideBodyCls:"x-grid-row-body-hidden",bodyField:"",previewExpanded:true,constructor:function(b){this.callParent(arguments);var a=this.bodyField,e=this.hideBodyCls,d=this.getCmp(),c=[{ftype:"rowbody",getAdditionalData:function(i,f,h,k,g){var j=Ext.grid.feature.RowBody.prototype.getAdditionalData.apply(this,arguments);Ext.apply(j,{rowBody:i[a],rowBodyCls:d.previewExpanded?"":e},null);return j}},{ftype:"rowwrap"}];d.previewExpanded=this.previewExpanded;if(!d.features){d.features=[]}d.features=c.concat(d.features)},toggleExpanded:function(b){var a=this.getCmp();this.previewExpanded=a.previewExpanded=b;a.refresh()},toggleRowExpanded:function(){var d=this.hideBodyCls,a=this.getCmp(),e=a.getStore().indexOf(a.getSelectionModel().getLastSelected()),b=a.getNodes(),c=a.getNode(e);if(!a.previewExpanded){Ext.each(b,function(f){Ext.get(Ext.get(f).query(".x-grid-rowbody-tr")).addCls(d)});Ext.get(Ext.get(c).query(".x-grid-rowbody-tr")).removeCls(d);a.up("grid").doLayout()}}});Ext.define("App.classes.RenderPanel",{extend:"Ext.container.Container",alias:"widget.renderpanel",cls:"RenderPanel",layout:"border",frame:false,border:false,pageLayout:"fit",pageBody:[],pageTitle:"",initComponent:function(){var a=this;Ext.apply(a,{items:[{cls:"RenderPanel-header",itemId:"RenderPanel-header",xtype:"container",region:"north",layout:"fit",height:33,html:'<div class="panel_title">'+a.pageTitle+"</div>"},{cls:"RenderPanel-body-container",itemId:"RenderPanel-body-container",xtype:"container",region:"center",layout:"fit",padding:5,items:[{cls:"RenderPanel-body",xtype:"panel",frame:true,layout:this.pageLayout,border:false,itemId:"pageLayout",defaults:{frame:false,border:false,autoScroll:true},items:a.pageBody}]}]},this);a.callParent(arguments)},updateTitle:function(b,e,d){var a='<div class="readOnly">'+i18n.read_only+"</div>",c='<span class="timer">'+d+"</span>";this.getComponent("RenderPanel-header").update('<div class="panel_title">'+b+"</div>"+(e?a:"")+(d?c:""))},setReadOnly:function(f){var c=this.query("form");for(var d=0;d<c.length;d++){var e=c[d],b;if(e.readOnly!=f){e.readOnly=f;b=e.getForm().getFields().items;for(var a=0;a<b.length;a++){b[a].setReadOnly(f)}}}return f},setButtonsDisabled:function(e,d){var a=d||app.patient.readOnly;for(var c=0;c<e.length;c++){var b=e[c];if(b.disabled!=a){b.disabled=a;b.setDisabled(a)}}},goBack:function(){app.goBack()},checkIfCurrPatient:function(){return app.getCurrPatient()},patientInfoAlert:function(){var a=app.getCurrPatient();Ext.Msg.alert(i18n.status,i18n.patient+": "+a.name+" ("+a.pid+")")},currPatientError:function(){Ext.Msg.show({title:"Oops! "+i18n.no_patient_selected,msg:i18n.select_patient_patient_live_search,scope:this,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(){this.goBack()}})},getFormItems:function(formPanel,formToRender,callback){if(formPanel){formPanel.removeAll();FormLayoutEngine.getFields({formToRender:formToRender},function(provider,response){var items=eval(response.result);formPanel.add(items);if(typeof callback=="function"){callback(formPanel,items,true)}})}},boolRenderer:function(a){if(a=="1"||a==true||a=="true"){return'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />'}else{if(a=="0"||a==false||a=="false"){return'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />'}}return a},alertRenderer:function(a){if(a=="1"||a==true||a=="true"){return'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />'}else{if(a=="0"||a==false||a=="false"){return'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />'}}return a},warnRenderer:function(d,b,a){var c=a.data.warningMsg?a.data.warningMsg:"";if(d=="1"||d==true||d=="true"){return'<img src="resources/images/icons/icoImportant.png" '+c+" />"}return""},onExpandRemoveMask:function(a){a.picker.loadMask.destroy()},strToLowerUnderscores:function(a){return a.toLowerCase().replace(/ /gi,"_")},getCurrPatient:function(){return app.getCurrPatient()},getApp:function(){return app.getApp()},msg:function(b,a){app.msg(b,a)},alert:function(b,a){app.alert(b,a)},passwordVerificationWin:function(c){var b=Ext.Msg.prompt(i18n.password_verification,i18n.please_enter_your_password+":",function(e,d){c(e,d)});var a=b.textField.getInputId();document.getElementById(a).type="password";return b},getPageHeader:function(){return this.getComponent("RenderPanel-header")},getPageBodyContainer:function(){return this.getComponent("RenderPanel-body-container")},getPageBody:function(){return this.getPageBodyContainer().down("panel")}});Ext.define("App.model.administration.ActiveProblems",{extend:"Ext.data.Model",fields:[{name:"code_text"},{name:"code"}]});Ext.define("App.model.administration.DefaultDocuments",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"body",type:"string"},{name:"template_type",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]});Ext.define("App.model.administration.DocumentsTemplates",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"body",type:"string"},{name:"template_type",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]});Ext.define("App.model.administration.ExternalDataLoads",{extend:"Ext.data.Model",fields:[{name:"date"},{name:"version"},{name:"path"},{name:"basename"},{name:"codeType"}]});Ext.define("App.model.administration.FloorPlans",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"}]});Ext.define("App.model.administration.FloorPlanZones",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"floor_plan_id",type:"int"},{name:"title",type:"string"},{name:"type",type:"string"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"active",type:"bool"}]});Ext.define("App.model.administration.HeadersAndFooters",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"template_type",type:"string"},{name:"body",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]});Ext.define("App.model.administration.ImmunizationRelations",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"immunization_id",type:"int"},{name:"foreign_id",type:"int"},{name:"code"},{name:"code_text",type:"string"},{name:"code_type"}],proxy:{type:"direct",api:{read:PreventiveCare.getRelations,create:PreventiveCare.addRelations,destroy:PreventiveCare.removeRelations}}});Ext.define("App.model.administration.LabObservations",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"code_text_short"},{name:"parent_id"},{name:"parent_loinc"},{name:"parent_name"},{name:"sequence"},{name:"loinc_number"},{name:"loinc_name"},{name:"default_unit"},{name:"range_start"},{name:"range_end"},{name:"required_in_panel"},{name:"description"},{name:"active",type:"bool"}]});Ext.define("App.model.administration.Medications",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"PRODUCTNDC"},{name:"PROPRIETARYNAME"},{name:"NONPROPRIETARYNAME"},{name:"DOSAGEFORMNAME"},{name:"ROUTENAME"},{name:"ACTIVE_NUMERATOR_STRENGTH"},{name:"ACTIVE_INGRED_UNIT"}],proxy:{type:"direct",api:{read:Medications.getMedications,create:Medications.addMedications,destroy:Medications.removeMedications,update:Medications.updateMedications},reader:{totalProperty:"totals",root:"rows"}}});Ext.define("App.model.administration.PreventiveCare",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"preventive_care_id",type:"int"},{name:"uid",type:"int"},{name:"description",type:"string"},{name:"age_start",type:"string"},{name:"age_end",type:"string"},{name:"sex",type:"string"},{name:"pregnant",type:"bool"},{name:"frequency",type:"string"},{name:"category_id",type:"string"},{name:"code",type:"string"},{name:"coding_system",type:"string"},{name:"dismiss",type:"bool"},{name:"frequency_type",type:"string"},{name:"reason",type:"string"},{name:"times_to_perform",type:"string"},{name:"doc_url1",type:"string"},{name:"doc_url2",type:"string"},{name:"doc_url3",type:"string"},{name:"active",type:"bool"}]});Ext.define("App.model.administration.PreventiveCareActiveProblems",{extend:"Ext.data.Model",fields:[{name:"guideline_id",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"}]});Ext.define("App.model.administration.PreventiveCareMedications",{extend:"Ext.data.Model",fields:[{name:"guideline_id",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"}]});Ext.define("App.model.administration.PreventiveCareLabs",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"value_name",type:"string"},{name:"greater_than",type:"string"},{name:"less_than",type:"string"},{name:"equal_to",type:"string"},{name:"code",type:"string"},{name:"preventive_care_id",type:"string"}]});Ext.define("App.model.administration.Services",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"code_text",type:"string"},{name:"sg_code",type:"string"},{name:"long_desc",type:"string"},{name:"code_text_short",type:"string"},{name:"code",type:"string"},{name:"code_type",type:"string"},{name:"modifier",type:"string"},{name:"units",type:"string"},{name:"fee",type:"int"},{name:"superbill",type:"string"},{name:"related_code",type:"string"},{name:"taxrates",type:"string"},{name:"active",type:"bool"},{name:"reportable",type:"string"},{name:"sex",type:"string"},{name:"age_start",type:"int"},{name:"age_end",type:"int"},{name:"times_to_perform",type:"int"},{name:"frequency_number",type:"int"},{name:"frequency_time",type:"string"},{name:"pregnant",type:"bool"},{name:"only_once",type:"bool"},{name:"active_problems",type:"string"},{name:"medications",type:"string"},{name:"labs",type:"string"}]});Ext.define("App.model.miscellaneous.OfficeNotes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"date",type:"date",dateFormat:"c"},{name:"body",type:"string"},{name:"user",type:"string"},{name:"facility_id",type:"string"},{name:"activity",type:"string"}],proxy:{type:"direct",api:{read:OfficeNotes.getOfficeNotes,create:OfficeNotes.addOfficeNotes,update:OfficeNotes.updateOfficeNotes}}});Ext.define("App.model.fees.Billing",{extend:"Ext.data.Model",fields:[{name:"eid",type:"int "},{name:"pid",type:"int"},{name:"patientName",type:"string"},{name:"primaryProvider",type:"string"},{name:"encounterProvider",type:"string"},{name:"supervisorProvider",type:"string"},{name:"facility",type:"string"},{name:"billing_facility",type:"string"},{name:"start_date",type:"string"},{name:"close_date",type:"string"},{name:"billing_stage",type:"int"},{name:"icdxCodes",type:"auto"}],proxy:{type:"direct",api:{read:Fees.getFilterEncountersBillingData},reader:{root:"encounters",totalProperty:"totals"}}});Ext.define("App.model.fees.Checkout",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"time",type:"string"},{name:"follow_up_facility",type:"string"},{name:"note",type:"string"},{name:"reminder",type:"string"},{name:"patient_name",type:"string"},{name:"encounter_number",type:"int"},{name:"transaction_facility",type:"string"},{name:"transaction_number",type:"int"},{name:"transaction_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"payment_amount",type:"string"},{name:"paying_entity",type:"string"},{name:"post_to_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"check_number",type:"int"}],proxy:{type:"direct",api:{read:Fees.getPaymentsBySearch},reader:{root:"rows",totalProperty:"totals"}}});Ext.define("App.model.fees.EncountersPayments",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"paying_entity",type:"string"},{name:"payment_from",type:"string"},{name:"no",type:"int"},{name:"payment_method",type:"string"},{name:"pay_to",type:"string"},{name:"amount",type:"string"},{name:"date_from",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"date_to",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"note",type:"string"}],proxy:{type:"direct",api:{read:Fees.getPaymentsBySearch},reader:{root:"rows",totalProperty:"totals"}}});Ext.define("App.model.fees.PaymentTransactions",{extend:"Ext.data.Model",fields:[],proxy:{type:"direct",api:{read:Fees.getPaymentsBySearch},reader:{root:"rows",totalProperty:"totals"}}});Ext.define("App.model.navigation.Navigation",{extend:"Ext.data.Model",fields:[{name:"text",type:"string"},{name:"disabled",type:"bool",defaultValue:false}],proxy:{type:"direct",api:{read:Navigation.getNavigation}}});Ext.define("App.model.patient.Allergies",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"c"},{name:"allergy_type",type:"string"},{name:"allergy",type:"string"},{name:"allergy_id",type:"int"},{name:"begin_date",type:"date",dateFormat:"c"},{name:"end_date",type:"date",dateFormat:"c"},{name:"reaction",type:"string"},{name:"location",type:"string"},{name:"severity",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getPatientAllergies,create:Medical.addPatientAllergies,update:Medical.updatePatientAllergies}}});Ext.define("App.model.patient.CheckoutAlertArea",{extend:"Ext.data.Model",fields:[{name:"alert",type:"string"},{name:"alertType",type:"int"}],proxy:{type:"direct",api:{read:Encounter.checkoutAlerts}}});Ext.define("App.model.patient.CptCodes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"},{name:"code_text_medium",type:"string"},{name:"place_of_service",type:"string"},{name:"emergency",type:"bool"},{name:"charge",type:"string"},{name:"days_of_units",type:"string"},{name:"essdt_plan",type:"string"},{name:"modifiers",type:"string"},{name:"status",type:"int",defaultValue:0}],proxy:{type:"direct",api:{read:Services.getCptCodes,create:Services.addCptCode,update:Services.updateCptCode,destroy:Services.deleteCptCode},reader:{root:"rows",totalProperty:"totals"}}});Ext.define("App.model.patient.Dental",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"c"},{name:"title",type:"string"},{name:"diagnosis_code",type:"string"},{name:"begin_date",type:"date",dateFormat:"c"},{name:"end_date",type:"date",dateFormat:"c"},{name:"ocurrence",type:"string"},{name:"referred_by",type:"string"},{name:"outcome",type:"string"},{name:"destination",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getPatientDental,create:Medical.addPatientDental,update:Medical.updatePatientDental}}});Ext.define("App.model.patient.Disclosures",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"type",type:"string"},{name:"recipient",type:"string"},{name:"description",type:"string"},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:Patient.getPatientDisclosures,create:Patient.createPatientDisclosure,update:Patient.updatePatientDisclosure}}});Ext.define("App.model.patient.Encounter",{extend:"Ext.data.Model",fields:[{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"open_uid",type:"string"},{name:"close_uid",type:"string"},{name:"brief_description",type:"string"},{name:"visit_category",type:"string"},{name:"facility",type:"string"},{name:"billing_facility",type:"string"},{name:"priority",type:"string"},{name:"start_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"close_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"onset_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:Encounter.getEncounter,create:Encounter.createEncounter,update:Encounter.updateEncounter},reader:{type:"json",root:"encounter"}},hasMany:[{model:"App.model.patient.Vitals",name:"vitals",primaryKey:"eid"},{model:"App.model.patient.ReviewOfSystems",name:"reviewofsystems",primaryKey:"eid"},{model:"App.model.patient.ReviewOfSystemsCheck",name:"reviewofsystemschecks",primaryKey:"eid"},{model:"App.model.patient.SOAP",name:"soap",primaryKey:"eid"},{model:"App.model.patient.SpeechDictation",name:"speechdictation",primaryKey:"eid"}]});Ext.define("App.model.patient.EncounterCPTsICDs",{extend:"Ext.data.Model",fields:[{name:"code"},{name:"code_text"},{name:"type"},{name:"code_text_short"}],proxy:{type:"direct",api:{read:Encounter.getEncounterCodes},reader:{type:"json",root:"encounter"}}});Ext.define("App.model.patient.Encounters",{extend:"Ext.data.Model",fields:[{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"open_uid",type:"string"},{name:"close_uid",type:"string"},{name:"brief_description",type:"string"},{name:"visit_category",type:"string"},{name:"facility",type:"string"},{name:"billing_facility",type:"string"},{name:"sensitivity",type:"string"},{name:"start_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"close_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"onset_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:Encounter.getEncounters},reader:{type:"json",root:"encounter"}}});Ext.define("App.model.patient.EventHistory",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"user",type:"string"},{name:"event",type:"string"}]});Ext.define("App.model.patient.Immunization",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"code",type:"int"},{name:"code_text",type:"string"}],proxy:{type:"direct",api:{read:Medical.getImmunizationsList}}});Ext.define("App.model.patient.ImmunizationCheck",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"immunization_id",type:"int"},{name:"immunization_name",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getPatientImmunizations}}});Ext.define("App.model.patient.LaboratoryTypes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"label",type:"string"},{name:"fields"}],proxy:{type:"direct",api:{read:Laboratories.getActiveLaboratoryTypes}}});Ext.define("App.model.patient.MeaningfulUseAlert",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"val",type:"bool"}],proxy:{type:"direct",api:{read:Patient.getMeaningfulUserAlertByPid}}});Ext.define("App.model.patient.MedicalIssues",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"c"},{name:"code",type:"string"},{name:"code_text",type:"string"},{name:"begin_date",type:"date",dateFormat:"c"},{name:"end_date",type:"date",dateFormat:"c"},{name:"ocurrence",type:"string"},{name:"referred_by",type:"string"},{name:"outcome",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getMedicalIssues,create:Medical.addMedicalIssues,update:Medical.updateMedicalIssues}}});Ext.define("App.model.patient.Medications",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"c"},{name:"medication",type:"string"},{name:"medication_id",type:"string"},{name:"begin_date",type:"date",dateFormat:"c"},{name:"end_date",type:"date",dateFormat:"c"},{name:"ocurrence",type:"string"},{name:"referred_by",type:"string"},{name:"outcome",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getPatientMedications,create:Medical.addPatientMedications,update:Medical.updatePatientMedications}}});Ext.define("App.model.patient.Notes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"body",type:"string"},{name:"type",type:"string"},{name:"user_name",type:"string"}],proxy:{type:"direct",api:{read:Patient.getPatientNotes,create:Patient.addPatientNotes,update:Patient.updatePatientNotes}}});Ext.define("App.model.patient.PatientArrivalLog",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"area_id",type:"int"},{name:"pid",type:"int"},{name:"time",type:"string"},{name:"name",type:"string"},{name:"status",type:"string"},{name:"area",type:"string"},{name:"warning",type:"bool"},{name:"warningMsg",type:"string"},{name:"isNew",type:"bool"}],proxy:{type:"direct",api:{read:PoolArea.getPatientsArrivalLog,create:PoolArea.addPatientArrivalLog,update:PoolArea.updatePatientArrivalLog,destroy:PoolArea.removePatientArrivalLog}}});Ext.define("App.model.patient.PatientCalendarEvents",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"user_id",type:"int"},{name:"category",type:"int"},{name:"facility",type:"int"},{name:"billing_facillity",type:"int"},{name:"patient_id",type:"int"},{name:"title",type:"string"},{name:"status",type:"string"},{name:"start",type:"date",dateFormat:"Y-m-d H:s:i"},{name:"end",type:"date",dateFormat:"Y-m-d H:s:i"},{name:"data",type:"string"},{name:"rrule",type:"string"},{name:"loc",type:"string"},{name:"notes",type:"string"},{name:"url",type:"string"},{name:"ad",type:"string"}],proxy:{type:"direct",api:{read:Calendar.getPatientFutureEvents},reader:{type:"json"}}});Ext.define("App.model.patient.PatientDocuments",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"docType",type:"string"},{name:"name",type:"string"},{name:"date",type:"date",dateFormat:"c"},{name:"url",type:"string"},{name:"note",type:"string"},{name:"title",type:"string"}],proxy:{type:"direct",api:{read:Patient.getPatientDocuments,update:Documents.updateDocumentsTitle}}});Ext.define("App.model.patient.PatientImmunization",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"immunization_name",type:"string"},{name:"immunization_id",type:"int"},{name:"administered_date",type:"date",dateFormat:"c"},{name:"manufacturer",type:"string"},{name:"lot_number",type:"string"},{name:"administered_by",type:"string"},{name:"education_date",type:"date",dateFormat:"c"},{name:"dosis"},{name:"create_date",type:"date",dateFormat:"c"},{name:"note",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getPatientImmunizations,create:Medical.addPatientImmunization,update:Medical.updatePatientImmunization}}});Ext.define("App.model.patient.PatientLabsResults",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"uid",type:"int"},{name:"auth_uid",type:"int"},{name:"eid",type:"int"},{name:"document_id",type:"int"},{name:"document_url"},{name:"date",type:"date",dateFormat:"Y-m-d H:s:i"},{name:"data"},{name:"columns"},{name:"parent_id"}],proxy:{type:"direct",api:{read:Medical.getPatientLabsResults,create:Medical.addPatientLabsResult,update:Medical.updatePatientLabsResult,destroy:Medical.deletePatientLabsResult},reader:{type:"json"}}});Ext.define("App.model.patient.PatientsLabsOrders",{extend:"Ext.data.Model",fields:[{name:"laboratories",type:"string"}],proxy:{type:"direct",api:{}}});Ext.define("App.model.patient.PatientsPrescription",{extend:"Ext.data.Model",fields:[{name:"medication",type:"string"},{name:"medication_id",type:"string"},{name:"dose",type:"int"},{name:"dose_mg",type:"string"},{name:"take_pills",type:"int"},{name:"type",type:"string"},{name:"route",type:"string"},{name:"prescription_often",type:"string"},{name:"prescription_when",type:"string"},{name:"dispense",type:"string"},{name:"refill",type:"string"},{name:"begin_date"},{name:"end_date"}],proxy:{type:"direct",api:{}}});Ext.define("App.model.patient.PreventiveCare",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"description"},{name:"date",dateFormat:"Y-m-d"},{name:"observation"},{name:"type"},{name:"dismiss"},{name:"reason"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{update:PreventiveCare.addPreventivePatientDismiss,read:PreventiveCare.getPreventiveCareCheck}}});Ext.define("App.model.patient.QRCptCodes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"},{name:"code_text_medium",type:"string"},{name:"place_of_service",type:"string"},{name:"emergency",type:"bool"},{name:"charge",type:"string"},{name:"days_of_units",type:"string"},{name:"essdt_plan",type:"string"},{name:"modifiers",type:"string"},{name:"status",type:"int",defaultValue:0}],proxy:{type:"direct",api:{read:Services.getCptCodes},reader:{root:"rows",totalProperty:"totals"}}});Ext.define("App.model.patient.DismissedAlerts",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"date",type:"date",dateFormat:"c"},{name:"preventive_care_id",type:"int"},{name:"reason",type:"string"},{name:"observation",type:"string"},{name:"dismiss",type:"bool"},{name:"description",type:"string"}],proxy:{type:"direct",api:{read:PreventiveCare.getPreventiveCareDismissedAlertsByPid,update:PreventiveCare.updatePreventiveCareDismissedAlertsByPid}}});Ext.define("App.model.patient.Reminders",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"body",type:"string"},{name:"type",type:"string"},{name:"user_name",type:"string"}],proxy:{type:"direct",api:{read:Patient.getPatientReminders,create:Patient.addPatientReminders,update:Patient.updatePatientReminders}}});Ext.define("App.model.patient.Surgery",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"c"},{name:"surgery",type:"string"},{name:"surgery_id",type:"string"},{name:"date",type:"date",dateFormat:"c"},{name:"referred_by",type:"string"},{name:"outcome",type:"string"},{name:"notes",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:Medical.getPatientSurgery,create:Medical.addPatientSurgery,update:Medical.updatePatientSurgery}}});Ext.define("App.model.patient.VectorGraph",{extend:"Ext.data.Model",fields:[{name:"age_mos",type:"float"},{name:"height",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P85",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"}}});Ext.define("App.model.patient.VisitPayment",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"no",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"facility",type:"string"},{name:"received_from",type:"string"},{name:"amount",type:"string"},{name:"for_payment_of",type:"string"},{name:"paid_by",type:"string"},{name:"description",type:"string"},{name:"next_appointment",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"accounted_amount",type:"string"},{name:"payment_amount",type:"string"},{name:"balance_due",type:"string"}],proxy:{type:"direct",api:{read:Encounter.Checkout},reader:{type:"json"}}});Ext.define("App.model.patient.Vitals",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"auth_uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"weight_lbs",type:"float",useNull:true},{name:"weight_kg",type:"float",useNull:true},{name:"height_in",type:"float",useNull:true},{name:"height_cm",type:"float",useNull:true},{name:"bp_systolic",type:"float",useNull:true},{name:"bp_diastolic",type:"float",useNull:true},{name:"pulse",type:"int",useNull:true},{name:"respiration",type:"int",useNull:true},{name:"temp_f",type:"float",useNull:true},{name:"temp_c",type:"float",useNull:true},{name:"temp_location",type:"string"},{name:"oxygen_saturation",type:"float",useNull:true},{name:"head_circumference_in",type:"float",useNull:true},{name:"head_circumference_cm",type:"float",useNull:true},{name:"waist_circumference_in",type:"float",useNull:true},{name:"waist_circumference_cm",type:"float",useNull:true},{name:"bmi",type:"int",useNull:true},{name:"bmi_status",type:"string",useNull:true},{name:"other_notes",type:"string"},{name:"administer_by",type:"string"},{name:"authorized_by",type:"string"},{name:"bp_systolic_normal",type:"int",defaultValue:120},{name:"bp_diastolic_normal",type:"int",defaultValue:80}],proxy:{type:"direct",api:{read:Encounter.getVitals,create:Encounter.addVitals,update:Encounter.updateVitals},reader:{type:"json"}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}});Ext.define("App.model.patient.charts.BMIForAge",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:8}}});Ext.define("App.model.patient.charts.HeadCircumferenceInf",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:4}}});Ext.define("App.model.patient.charts.LengthForAgeInf",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:2}}});Ext.define("App.model.patient.charts.StatureForAge",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:7}}});Ext.define("App.model.patient.charts.WeightForAge",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:6}}});Ext.define("App.model.patient.charts.WeightForAgeInf",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:1}}});Ext.define("App.model.patient.charts.WeightForRecumbentInf",{extend:"Ext.data.Model",fields:[{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:3}}});Ext.define("App.model.patient.charts.WeightForStature",{extend:"Ext.data.Model",fields:[{name:"height",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P85",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:VectorGraph.getGraphData},reader:{type:"json"},extraParams:{type:5}}});Ext.define("App.model.areas.PoolArea",{extend:"Ext.data.Model",fields:[{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"name",type:"string"},{name:"shortName",type:"string"},{name:"photoSrc",type:"string"},{name:"poolArea",type:"string"},{name:"floorPlanId",type:"int"},{name:"floorPlanRequireZone",type:"bool"},{name:"zoneId",type:"int"},{name:"patientZoneId",type:"int"},{name:"priority",type:"string"}],proxy:{type:"direct",api:{read:PoolArea.getPatientsByPoolAreaAccess}}});Ext.define("App.model.areas.PoolDropAreas",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"pid",type:"int"},{name:"pic",type:"string"}]});Ext.define("App.store.administration.ActiveProblems",{model:"App.model.administration.ActiveProblems",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:Services.getActiveProblems,create:Services.addActiveProblems,destroy:Services.removeActiveProblems},reader:{totalProperty:"totals",root:"rows"}},autoLoad:false});Ext.define("App.store.administration.DefaultDocuments",{model:"App.model.administration.DefaultDocuments",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:DocumentHandler.getDefaultDocumentsTemplates,create:DocumentHandler.addDocumentsTemplates,update:DocumentHandler.updateDocumentsTemplates}},autoSync:true,autoLoad:false});Ext.define("App.store.administration.DocumentsTemplates",{model:"App.model.administration.DocumentsTemplates",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:DocumentHandler.getDocumentsTemplates,create:DocumentHandler.addDocumentsTemplates,update:DocumentHandler.updateDocumentsTemplates}},autoSync:true,autoLoad:false});Ext.define("App.store.administration.ExternalDataLoads",{model:"App.model.administration.ExternalDataLoads",extend:"Ext.data.Store",constructor:function(a){var b=this;b.proxy={type:"direct",api:{read:ExternalDataUpdate.getCodeFiles},extraParams:{codeType:a.codeType}};b.callParent(arguments)},remoteSort:false,autoLoad:false});Ext.define("App.store.administration.FloorPlans",{model:"App.model.administration.FloorPlans",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:FloorPlans.getFloorPlans,create:FloorPlans.createFloorPlan,update:FloorPlans.updateFloorPlan}},autoSync:true,autoLoad:false});Ext.define("App.store.administration.FloorPlanZones",{model:"App.model.administration.FloorPlanZones",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:FloorPlans.getFloorPlanZones,create:FloorPlans.createFloorPlanZone,update:FloorPlans.updateFloorPlanZone}},autoSync:true,autoLoad:false});Ext.define("App.store.administration.HeadersAndFooters",{model:"App.model.administration.HeadersAndFooters",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:DocumentHandler.getHeadersAndFootersTemplates,create:DocumentHandler.addDocumentsTemplates,update:DocumentHandler.updateDocumentsTemplates}},autoSync:true,autoLoad:false});Ext.define("App.store.administration.ImmunizationRelations",{model:"App.model.administration.ImmunizationRelations",extend:"Ext.data.Store",autoLoad:false,autoSync:true,remoteSort:false});Ext.define("App.store.administration.LabObservations",{model:"App.model.administration.LabObservations",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:Laboratories.getLabObservations,create:Laboratories.addLabObservation,update:Laboratories.updateLabObservation,destroy:Laboratories.removeLabObservation}},autoSync:true,autoLoad:false});Ext.define("App.store.administration.Medications",{model:"App.model.administration.Medications",extend:"Ext.data.Store",autoLoad:false,autoSync:true,remoteSort:true});Ext.define("App.store.administration.PreventiveCare",{model:"App.model.administration.PreventiveCare",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:PreventiveCare.getGuideLinesByCategory,create:PreventiveCare.addGuideLine,update:PreventiveCare.updateGuideLine},reader:{totalProperty:"totals",root:"rows"},extraParams:{code_type:this.code_type,query:this.query,active:this.active}},autoSync:true,remoteSort:false,autoLoad:false});Ext.define("App.store.administration.PreventiveCareActiveProblems",{model:"App.model.administration.PreventiveCareActiveProblems",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:PreventiveCare.getGuideLineActiveProblems,create:PreventiveCare.addGuideLineActiveProblems,destroy:PreventiveCare.removeGuideLineActiveProblems}},remoteSort:false,autoLoad:false});Ext.define("App.store.administration.PreventiveCareMedications",{model:"App.model.administration.PreventiveCareMedications",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:PreventiveCare.getGuideLineMedications,create:PreventiveCare.addGuideLineMedications,destroy:PreventiveCare.removeGuideLineMedications}},remoteSort:false,autoLoad:false});Ext.define("App.store.administration.PreventiveCareLabs",{model:"App.model.administration.PreventiveCareLabs",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:PreventiveCare.getGuideLineLabs,create:PreventiveCare.addGuideLineLabs,destroy:PreventiveCare.removeGuideLineLabs,update:PreventiveCare.updateGuideLineLabs}},remoteSort:false,autoLoad:false});Ext.define("App.store.administration.Services",{model:"App.model.administration.Services",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:DataManager.getServices,create:DataManager.addService,update:DataManager.updateService},reader:{totalProperty:"totals",root:"rows"},extraParams:{code_type:this.code_type,query:this.query,active:this.active}},autoSync:true,remoteSort:true,autoLoad:false});Ext.define("App.store.administration.ActiveProblems",{model:"App.model.administration.ActiveProblems",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:Services.getActiveProblems,create:Services.addActiveProblems,destroy:Services.removeActiveProblems},reader:{totalProperty:"totals",root:"rows"}},autoLoad:false});Ext.define("App.store.miscellaneous.OfficeNotes",{extend:"Ext.data.Store",model:"App.model.miscellaneous.OfficeNotes",autoLoad:false});Ext.define("App.store.fees.Billing",{extend:"Ext.data.Store",model:"App.model.fees.Billing",autoLoad:false});Ext.define("App.store.fees.Checkout",{extend:"Ext.data.Store",model:"App.model.fees.Checkout",autoLoad:false});Ext.define("App.store.fees.EncountersPayments",{extend:"Ext.data.Store",model:"App.model.fees.EncountersPayments",autoLoad:false});Ext.define("App.store.fees.PaymentTransactions",{extend:"Ext.data.Store",model:"App.model.fees.PaymentTransactions",autoLoad:false});Ext.define("App.store.navigation.Navigation",{extend:"Ext.data.TreeStore",requires:["App.model.navigation.Navigation"],model:"App.model.navigation.Navigation"});Ext.define("App.store.patient.Allergies",{extend:"Ext.data.Store",model:"App.model.patient.Allergies",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.CheckoutAlertArea",{extend:"Ext.data.Store",model:"App.model.patient.CheckoutAlertArea",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Dental",{extend:"Ext.data.Store",model:"App.model.patient.Dental",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Disclosures",{extend:"Ext.data.Store",model:"App.model.patient.Disclosures",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Encounter",{extend:"Ext.data.Store",requires:["App.model.patient.Encounter"],pageSize:10,model:"App.model.patient.Encounter"});Ext.define("App.store.patient.EncounterCPTsICDs",{extend:"Ext.data.Store",model:"App.model.patient.EncounterCPTsICDs",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.EncounterEventHistory",{extend:"Ext.data.Store",model:"App.model.patient.EventHistory",proxy:{type:"direct",api:{read:Encounter.getEncounterEventHistory}},autoLoad:false});Ext.define("App.store.patient.Encounters",{extend:"Ext.data.Store",requires:["App.model.patient.Encounters"],pageSize:25,model:"App.model.patient.Encounters",remoteSort:true});Ext.define("App.store.patient.Immunization",{extend:"Ext.data.Store",model:"App.model.patient.Immunization",remoteSort:false,autoLoad:true});Ext.define("App.store.patient.ImmunizationCheck",{extend:"Ext.data.Store",model:"App.model.patient.ImmunizationCheck",remoteSort:true,autoLoad:false});Ext.define("App.store.patient.LaboratoryTypes",{extend:"Ext.data.Store",model:"App.model.patient.LaboratoryTypes",remoteSort:false});Ext.define("App.store.patient.MeaningfulUseAlert",{extend:"Ext.data.Store",model:"App.model.patient.MeaningfulUseAlert",remoteSort:true,autoLoad:false});Ext.define("App.store.patient.MedicalIssues",{extend:"Ext.data.Store",model:"App.model.patient.MedicalIssues",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Medications",{extend:"Ext.data.Store",model:"App.model.patient.Medications",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Notes",{extend:"Ext.data.Store",model:"App.model.patient.Notes",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.PatientArrivalLog",{extend:"Ext.data.Store",model:"App.model.patient.PatientArrivalLog",remoteSort:true,autoLoad:false});Ext.define("App.store.patient.PatientCalendarEvents",{extend:"Ext.data.Store",model:"App.model.patient.PatientCalendarEvents",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.PatientDocuments",{extend:"Ext.data.Store",model:"App.model.patient.PatientDocuments",remoteSort:false,autoLoad:false,autoSync:true});Ext.define("App.store.patient.DismissedAlerts",{extend:"Ext.data.Store",model:"App.model.patient.DismissedAlerts",remoteSort:false,autoLoad:false,autoSync:true});Ext.define("App.store.patient.PatientImmunization",{extend:"Ext.data.Store",model:"App.model.patient.PatientImmunization",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.PatientLabsResults",{extend:"Ext.data.Store",model:"App.model.patient.PatientLabsResults",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.PatientsLabsOrders",{extend:"Ext.data.Store",model:"App.model.patient.PatientsLabsOrders",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.PatientsPrescription",{extend:"Ext.data.Store",model:"App.model.patient.PatientsPrescription",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.PreventiveCare",{extend:"Ext.data.Store",model:"App.model.patient.PreventiveCare",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.QRCptCodes",{extend:"Ext.data.Store",model:"App.model.patient.QRCptCodes",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Reminders",{extend:"Ext.data.Store",model:"App.model.patient.Reminders",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.Surgery",{extend:"Ext.data.Store",model:"App.model.patient.Surgery",remoteSort:false,autoLoad:false});Ext.define("App.store.patient.VectorGraph",{extend:"Ext.data.Store",requires:["App.model.patient.VectorGraph"],model:"App.model.patient.VectorGraph"});Ext.define("App.store.patient.VisitPayment",{extend:"Ext.data.Store",requires:["App.model.patient.VisitPayment"],model:"App.model.patient.VisitPayment"});Ext.define("App.store.patient.Vitals",{extend:"Ext.data.Store",requires:["App.model.patient.Vitals"],pageSize:10,model:"App.model.patient.Vitals"});Ext.define("App.store.patient.charts.BMIForAge",{extend:"Ext.data.Store",requires:["App.model.patient.charts.BMIForAge"],model:"App.model.patient.charts.BMIForAge"});Ext.define("App.store.patient.charts.HeadCircumferenceInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.HeadCircumferenceInf"],model:"App.model.patient.charts.HeadCircumferenceInf"});Ext.define("App.store.patient.charts.LengthForAgeInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.LengthForAgeInf"],model:"App.model.patient.charts.LengthForAgeInf"});Ext.define("App.store.patient.charts.StatureForAge",{extend:"Ext.data.Store",requires:["App.model.patient.charts.StatureForAge"],model:"App.model.patient.charts.StatureForAge"});Ext.define("App.store.patient.charts.WeightForAge",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForAge"],model:"App.model.patient.charts.WeightForAge"});Ext.define("App.store.patient.charts.WeightForAgeInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForAgeInf"],model:"App.model.patient.charts.WeightForAgeInf"});Ext.define("App.store.patient.charts.WeightForRecumbentInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForRecumbentInf"],model:"App.model.patient.charts.WeightForRecumbentInf"});Ext.define("App.store.patient.charts.WeightForStature",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForStature"],model:"App.model.patient.charts.WeightForStature"});Ext.define("App.store.areas.PoolArea",{extend:"Ext.data.Store",requires:["App.model.areas.PoolArea"],pageSize:10,model:"App.model.areas.PoolArea"});Ext.define("App.classes.ActivityMonitor",{singleton:true,ui:null,runner:null,task:null,lastActive:null,ready:false,verbose:false,interval:(1000*60),maxInactive:(1000*60*2),init:function(a){if(!a){a={}}Ext.apply(this,a,{runner:new Ext.util.TaskRunner(),ui:Ext.getBody(),task:{run:this.monitorUI,interval:a.interval||this.interval,scope:this}});this.ready=true},isReady:function(){return this.ready},isActive:Ext.emptyFn,isInactive:Ext.emptyFn,start:function(){if(!this.isReady()){this.log("Please run ActivityMonitor.init()");return false}this.ui.on("mousemove",this.captureActivity,this);this.ui.on("keydown",this.captureActivity,this);this.lastActive=new Date();this.log("ActivityMonitor has been started.");this.runner.start(this.task);return true},stop:function(){if(!this.isReady()){this.log("Please run ActivityMonitor.init()");return false}this.runner.stop(this.task);this.lastActive=null;this.ui.un("mousemove",this.captureActivity);this.ui.un("keydown",this.captureActivity);this.log("ActivityMonitor has been stopped.");return true},captureActivity:function(c,b,a){if(app.logoutWarinigWindow){app.cancelAutoLogout()}this.lastActive=new Date()},monitorUI:function(){var a=new Date(),b=(a-this.lastActive);if(b>=this.maxInactive){this.log("MAXIMUM INACTIVE TIME HAS BEEN REACHED");this.stop();this.isInactive()}else{this.log("CURRENTLY INACTIVE FOR "+Math.floor(b/1000)+" SECONDS)");this.isActive()}},log:function(a){if(this.verbose){window.console.log(a)}}});Ext.define("App.classes.AbstractPanel",{setReadOnly:function(f){var c=this.query("form");for(var d=0;d<c.length;d++){var e=c[d],b;if(e.readOnly!=f){e.readOnly=f;b=e.getForm().getFields().items;for(var a=0;a<b.length;a++){b[a].setReadOnly(f)}}}return f},setButtonsDisabled:function(e,d){var a=d||app.patient.readOnly;for(var c=0;c<e.length;c++){var b=e[c];if(b.disabled!=a){b.disabled=a;b.setDisabled(a)}}},goBack:function(){app.goBack()},checkIfCurrPatient:function(){return app.getCurrPatient()},patientInfoAlert:function(){var a=app.getCurrPatient();Ext.Msg.alert(i18n.status,i18n.patient+": "+a.name+" ("+a.pid+")")},currPatientError:function(){Ext.Msg.show({title:"Oops! "+i18n.no_patient_selected,msg:i18n.select_patient_patient_live_search,scope:this,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(){this.goBack()}})},getFormItems:function(formPanel,formToRender,callback){formPanel.removeAll();FormLayoutEngine.getFields({formToRender:formToRender},function(provider,response){var items=eval(response.result);formPanel.add(items);if(typeof callback=="function"){callback(formPanel,items,true)}})},boolRenderer:function(a){if(a=="1"||a==true||a=="true"){return'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />'}else{if(a=="0"||a==false||a=="false"){return'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />'}}return a},alertRenderer:function(a){if(a=="1"||a==true||a=="true"){return'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />'}else{if(a=="0"||a==false||a=="false"){return'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />'}}return a},warnRenderer:function(d,b,a){say(a);var c=a.data.warningMsg?a.data.warningMsg:"";if(d=="1"||d==true||d=="true"){return'<img src="resources/images/icons/icoImportant.png" '+c+" />"}else{return d}},onExpandRemoveMask:function(a){a.picker.loadMask.destroy()},strToLowerUnderscores:function(a){return a.toLowerCase().replace(/ /gi,"_")},getCurrPatient:function(){return app.getCurrPatient()},getApp:function(){return app.getApp()},msg:function(b,a){app.msg(b,a)},alert:function(b,a){app.alert(b,a)},passwordVerificationWin:function(c){var b=Ext.Msg.prompt(i18n.password_verification,i18n.please_enter_your_password+":",function(e,d){c(e,d)});var a=b.textField.getInputId();document.getElementById(a).type="password";return b},getPageHeader:function(){return this.getComponent("RenderPanel-header")},getPageBodyContainer:function(){return this.getComponent("RenderPanel-body-container")},getPageBody:function(){return this.getPageBodyContainer().down("panel")}});Ext.define("App.classes.LiveCPTSearch",{extend:"Ext.form.field.ComboBox",alias:"widget.livecptsearch",hideLabel:true,triggerTip:i18n.click_to_clear_selection,spObj:"",spForm:"",spExtraParam:"",qtip:i18n.clearable_combo_box,trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",initComponent:function(){var a=this;Ext.define("liveCPTSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"eid"},{name:"code",type:"strig"},{name:"code_text",type:"string"},{name:"code_text_medium",type:"string"},{name:"place_of_service",type:"string"},{name:"emergency",type:"string"},{name:"charge",type:"string"},{name:"days_of_units",type:"string"},{name:"essdt_plan",type:"string"},{name:"modifiers",type:"string"}],proxy:{type:"direct",api:{read:ServiceCodes.liveCodeSearch},reader:{totalProperty:"totals",root:"rows"},extraParams:{code_type:"cpt"}}});a.store=Ext.create("Ext.data.Store",{model:"liveCPTSearchModel",pageSize:25,autoLoad:false});Ext.apply(this,{store:a.store,displayField:"code_text",valueField:"code",emptyText:i18n.search+"...",typeAhead:true,minChars:1,anchor:"100%",listConfig:{loadingText:i18n.searching+"...",getInnerTpl:function(){return'<div class="search-item">{code}: {code_text}</div>'}},pageSize:25},null);a.callParent()},onRender:function(c,a){this.callParent(arguments);var d=this.getId();this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+d,name:"trigger2"+d,cls:"x-form-trigger "+this.trigger2Class}]};this.triggerEl.replaceWith(this.triggerConfig);this.triggerEl.on("mouseup",function(f){if(f.target.name=="trigger2"+d){this.reset();this.oldValue=null;if(this.spObj!==""&&this.spExtraParam!==""){Ext.getCmp(this.spObj).store.setExtraParam(this.spExtraParam,"");Ext.getCmp(this.spObj).store.load()}if(this.spForm!==""){Ext.getCmp(this.spForm).getForm().reset()}}},this);var b=Ext.get("trigger2"+d);b.addClsOnOver("x-form-trigger-over")}});Ext.define("App.classes.LiveImmunizationSearch",{extend:"Ext.form.ComboBox",alias:"widget.immunizationlivesearch",hideLabel:true,initComponent:function(){var a=this;Ext.define("liveImmunizationSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"code"},{name:"code_text"},{name:"code_text_short"}],proxy:{type:"direct",api:{read:Medical.getImmunizationLiveSearch},reader:{totalProperty:"totals",root:"rows"}}});a.store=Ext.create("Ext.data.Store",{model:"liveImmunizationSearchModel",pageSize:10,autoLoad:false});Ext.apply(this,{store:a.store,displayField:"code_text_short",valueField:"code_text_short",emptyText:i18n.search_for_a_immunizations+"...",typeAhead:true,minChars:1,listConfig:{loadingText:i18n.searching+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{code}<span style="font-weight: normal"> ({code_text}) </span></div>'}},pageSize:10},null);a.callParent()}});Ext.define("App.classes.LiveMedicationSearch",{extend:"Ext.form.ComboBox",alias:"widget.medicationlivetsearch",hideLabel:true,initComponent:function(){var a=this;Ext.define("liveMedicationsSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"PROPRIETARYNAME"},{name:"PRODUCTNDC"},{name:"NONPROPRIETARYNAME"},{name:"ACTIVE_NUMERATOR_STRENGTH"},{name:"ACTIVE_INGRED_UNIT"}],proxy:{type:"direct",api:{read:Medical.getMedicationLiveSearch},reader:{totalProperty:"totals",root:"rows"}}});a.store=Ext.create("Ext.data.Store",{model:"liveMedicationsSearchModel",pageSize:10,autoLoad:false});Ext.apply(this,{store:a.store,displayField:"PROPRIETARYNAME",valueField:"PROPRIETARYNAME",emptyText:i18n.search_for_a_medication+"...",typeAhead:false,hideTrigger:true,minChars:1,listConfig:{loadingText:i18n.searching+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{PROPRIETARYNAME}<span style="font-weight: normal"> ({NONPROPRIETARYNAME}) </span></h3>{ACTIVE_NUMERATOR_STRENGTH} | {ACTIVE_INGRED_UNIT}</div>'}},pageSize:10},null);a.callParent()}});Ext.define("App.classes.LiveLabsSearch",{extend:"Ext.form.ComboBox",alias:"widget.labslivetsearch",hideLabel:true,initComponent:function(){var a=this;Ext.define("liveLabsSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"loinc_name"},{name:"loinc_number"}],proxy:{type:"direct",api:{read:Medical.getLabsLiveSearch},reader:{totalProperty:"totals",root:"rows"}}});a.store=Ext.create("Ext.data.Store",{model:"liveLabsSearchModel",pageSize:10,autoLoad:false});Ext.apply(this,{store:a.store,displayField:"loinc_name",valueField:"id",emptyText:i18n.search+"...",typeAhead:false,hideTrigger:true,minChars:1,listConfig:{loadingText:i18n.searching+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{loinc_name}</h3></div>'}},pageSize:10},null);a.callParent()}});Ext.define("App.classes.LivePatientSearch",{extend:"Ext.form.ComboBox",alias:"widget.patienlivetsearch",hideLabel:true,initComponent:function(){var a=this;Ext.define("patientLiveSearchModel",{extend:"Ext.data.Model",fields:[{name:"pid",type:"int"},{name:"pubpid",type:"int"},{name:"fullname",type:"string"},{name:"DOB",type:"string"},{name:"SS",type:"string"}],proxy:{type:"direct",api:{read:Patient.patientLiveSearch},reader:{totalProperty:"totals",root:"rows"}}});a.store=Ext.create("Ext.data.Store",{model:"patientLiveSearchModel",pageSize:10,autoLoad:false});Ext.apply(this,{store:a.store,displayField:"fullname",valueField:"pid",emptyText:a.emptyText,typeAhead:false,hideTrigger:true,minChars:1,listConfig:{loadingText:i18n.searching+"...",getInnerTpl:function(){return'<div class="search-item"><h3><span>{fullname}</span>&nbsp;&nbsp;({pid})</h3>DOB:&nbsp;{DOB}&nbsp;SS:&nbsp;{SS}</div>'}},pageSize:10},null);a.callParent()}});Ext.define("App.classes.LiveSurgeriesSearch",{extend:"Ext.form.ComboBox",alias:"widget.surgerieslivetsearch",hideLabel:true,initComponent:function(){var a=this;Ext.define("liveSurgeriesSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"type"},{name:"type_num"},{name:"surgery"}],proxy:{type:"direct",api:{read:Medical.getSurgeriesLiveSearch},reader:{totalProperty:"totals",root:"rows"}}});a.store=Ext.create("Ext.data.Store",{model:"liveSurgeriesSearchModel",pageSize:10,autoLoad:false});Ext.apply(this,{store:a.store,displayField:"surgery",valueField:"surgery",emptyText:i18n.search_for_a_surgery+"...",typeAhead:true,minChars:1,listConfig:{loadingText:i18n.searching+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{surgery}<span style="font-weight: normal"> ({type}) </span></h3></div>'}},pageSize:10},null);a.callParent()}});Ext.define("App.classes.ManagedIframe",{extend:"Ext.Component",alias:"widget.miframe",hideMode:Ext.isIE?"display":"nosize",autoScroll:true,frameStyle:null,frameCls:"ux-miframe",shimCls:"ux-miframe-shim",shimUrl:Ext.BLANK_IMAGE_URL,src:null,autoMask:true,maskMessage:"Loading...",resetUrl:"javascript:void(0);",ariaRole:"presentation",unsupportedText:i18n.frames_are_disabled,bubbleEvents:["documentloaded","load"],initComponent:function(){var b=this,a=Ext.isString(b.frameStyle)?Ext.core.Element.parseStyles(b.frameStyle):b.frameStyle||{};b.autoEl={cn:[Ext.applyIf(b.frameConfig||{},{tag:"iframe",cls:b.frameCls,style:Ext.apply({height:"100%",width:"100%"},a),frameBorder:"no",role:b.ariaRole,name:b.getId(),src:b.resetUrl||""}),{tag:"noframes",html:b.unsupportedText},{tag:"img",cls:b.shimCls,galleryimg:"no",style:"position:absolute;top:0;left:0;display:none;z-index:20;height:100%;width:100%;",src:b.shimUrl}]};this.callParent()},renderSelectors:{frameElement:"iframe.ux-miframe",frameShim:"img.ux-miframe-shim"},afterRender:function(){var a=this;a.callParent();if(a.frameElement){a.frameElement.relayEvent("load",a);a.on({load:a.onFrameLoad,scope:a})}if(a.frameShim){a.frameShim.autoBoxAdjust=false;a.frameShim.setVisibilityMode(Ext.core.Element.DISPLAY)}Ext.defer(a.setSrc,50,a,[])},getContentTarget:function(){return this.frameElement},getActionEl:function(){return this.frameElement||this.el},onFrameLoad:function(b){var a=this;a.fireEvent("documentloaded",a,a.frameElement);if(a.autoMask){a.setLoading(false)}},setSrc:function(b){var a=this;b=b||a.src||a.defaultSrc;if(b&&a.rendered&&a.frameElement){a.autoMask&&a.isVisible(true)&&a.setLoading(a.maskMessage||"");a.frameElement.dom.src=b}a.src=b;return a},initContent:function(){var b=this,a=b.data||b.html;if(b.contentEl&&Ext.isDefined(Ext.global.console)){Ext.global.console.warn("Ext.ux.ManagedIframe.Component: 'contentEl' is not supported by this class.")}if(b.tpl&&!b.tpl.isTemplate){b.tpl=Ext.create("Ext.XTemplate",b.tpl)}if(a){b.update(a)}delete b.contentEl},updateAlpha2:function(a,b,d){var c=this;if(c.tpl&&!Ext.isString(a)){c.data=a;c.html=c.tpl.apply(a||{})}else{c.html=Ext.core.DomHelper.markup(a)}if(c.rendered){c.getContentTarget().update(c.html,b,d)}return c},update:function(){},setAutoScroll:function(a){var b=this,c;if(Ext.isDefined(a)){a=!!a;if(b.rendered&&(c=b.getContentTarget())){c.setStyle("overflow",a?"auto":"hidden")}b.autoScroll=a}return b},toggleShim:function(a){var b=this;if(b.frameShim){b.frameShim[a?"show":"hide"]()}return b.frameShim},onDestroy:function(){var a=this,b;if(b=a.frameElement){b.clearListeners();b.remove()}a.deleteMembers("frameElement","frameShim");a.callParent()}});Ext.define("App.classes.NodeDisabled",{alias:"plugin.nodedisabled",extend:"Ext.AbstractPlugin",disabledCls:"tree-node-disabled",preventSelection:true,preventChecking:true,init:function(a){var c=this,b=a.getView(),d,e;c.callParent(arguments);d=b.getRowClass;if(d){e=b.scope||c;Ext.apply(b,{getRowClass:function(){var g,f;g=d.apply(e,arguments)||"";f=c.getRowClass.apply(c,arguments)||"";return(g&&f)?g+" "+f:g+f}},null)}else{Ext.apply(b,{getRowClass:Ext.Function.bind(c.getRowClass,c)},null)}if(c.preventSelection){a.getSelectionModel().on("beforeselect",c.onBeforeNodeSelect,c)}if(c.preventChecking){a.on("checkchange",c.checkchange,c)}},getCmp:function(){return this.callParent(arguments)},getRowClass:function(a,b,c,d){return a.get("disabled")?this.disabledCls:""},onBeforeNodeSelect:function(b,a){if(a.get("disabled")){return false}},checkchange:function(b,a){if(b.get("disabled")){b.set("checked",!a)}}});Ext.define("App.classes.PhotoIdWindow",{extend:"Ext.window.Window",alias:"widget.photoidwindow",height:320,width:320,layout:"fit",renderTo:document.body,initComponent:function(){var a=this;window.webcam.set_api_url("dataProvider/WebCamImgHandler.php");window.webcam.set_swf_url("lib/jpegcam/htdocs/webcam.swf");window.webcam.set_quality(100);window.webcam.set_shutter_sound(true,"lib/jpegcam/htdocs/shutter.mp3");window.webcam.set_hook("onComplete","onWebCamComplete");Ext.apply(this,{html:window.webcam.get_html(320,320),buttons:[{text:i18n.capture,iconCls:"save",handler:a.captureToCanvas},{text:i18n.cancel,scope:a,handler:function(){this.close()}}]},null);a.callParent(arguments)},captureToCanvas:function(){window.webcam.snap()}});Ext.define("Ext.fx.target.Sprite",{extend:"Ext.fx.target.Target",type:"draw",getFromPrim:function(b,a){var c;switch(a){case"rotate":case"rotation":c=b.attr.rotation;return{x:c.x||0,y:c.y||0,degrees:c.degrees||0};case"scale":case"scaling":c=b.attr.scaling;return{x:c.x||1,y:c.y||1,cx:c.cx||0,cy:c.cy||0};case"translate":case"translation":c=b.attr.translation;return{x:c.x||0,y:c.y||0};default:return b.attr[a]}},getAttr:function(a,b){return[[this.target,b!=undefined?b:this.getFromPrim(this.target,a)]]},setAttr:function(l){var f=l.length,h=[],b,e,o,q,p,n,m,d,c,k,g,a;for(d=0;d<f;d++){b=l[d].attrs;for(e in b){o=b[e];a=o.length;for(c=0;c<a;c++){p=o[c][0];q=o[c][1];if(e==="translate"||e==="translation"){m={x:q.x,y:q.y}}else{if(e==="rotate"||e==="rotation"){k=q.x;if(isNaN(k)){k=null}g=q.y;if(isNaN(g)){g=null}m={degrees:q.degrees,x:k,y:g}}else{if(e==="scale"||e==="scaling"){k=q.x;if(isNaN(k)){k=null}g=q.y;if(isNaN(g)){g=null}m={x:k,y:g,cx:q.cx,cy:q.cy}}else{if(e==="width"||e==="height"||e==="x"||e==="y"){m=parseFloat(q)}else{m=q}}}}n=Ext.Array.indexOf(h,p);if(n==-1){h.push([p,{}]);n=h.length-1}h[n][1][e]=m}}}f=h.length;for(d=0;d<f;d++){h[d][0].setAttributes(h[d][1])}this.target.redraw()}});Ext.define("Ext.dd.DropZone",{extend:"Ext.dd.DropTarget",requires:["Ext.dd.Registry"],getTargetFromEvent:function(a){return Ext.dd.Registry.getTargetFromEvent(a)},onNodeEnter:function(d,a,c,b){},onNodeOver:function(d,a,c,b){return this.dropAllowed},onNodeOut:function(d,a,c,b){},onNodeDrop:function(d,a,c,b){return false},onContainerOver:function(a,c,b){return this.dropNotAllowed},onContainerDrop:function(a,c,b){return false},notifyEnter:function(a,c,b){return this.dropNotAllowed},notifyOver:function(a,c,b){var d=this.getTargetFromEvent(c);if(!d){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,a,c,b);this.lastOverNode=null}return this.onContainerOver(a,c,b)}if(this.lastOverNode!=d){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,a,c,b)}this.onNodeEnter(d,a,c,b);this.lastOverNode=d}return this.onNodeOver(d,a,c,b)},notifyOut:function(a,c,b){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,a,c,b);this.lastOverNode=null}},notifyDrop:function(a,c,b){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,a,c,b);this.lastOverNode=null}var d=this.getTargetFromEvent(c);return d?this.onNodeDrop(d,a,c,b):this.onContainerDrop(a,c,b)},triggerCacheRefresh:function(){Ext.dd.DDM.refreshCache(this.groups)}});Ext.define("Ext.dd.DragZone",{extend:"Ext.dd.DragSource",constructor:function(b,a){this.callParent([b,a]);if(this.containerScroll){Ext.dd.ScrollManager.register(this.el)}},getDragData:function(a){return Ext.dd.Registry.getHandleFromEvent(a)},onInitDrag:function(a,b){this.proxy.update(this.dragData.ddel.cloneNode(true));this.onStartDrag(a,b);return true},afterRepair:function(){var a=this;if(Ext.enableFx){Ext.fly(a.dragData.ddel).highlight(a.repairHighlightColor)}a.dragging=false},getRepairXY:function(a){return Ext.fly(this.dragData.ddel).getXY()},destroy:function(){this.callParent();if(this.containerScroll){Ext.dd.ScrollManager.unregister(this.el)}}});Ext.define("App.classes.form.fields.Help",{extend:"Ext.Img",alias:"widget.helpbutton",src:"resources/images/icons/icohelp.png",height:16,width:16,margin:"3 10",helpMsg:i18n.help_message,initComponent:function(){var a=this;a.listeners={render:function(b){a.setToolTip(b.getEl())}};a.callParent()},setToolTip:function(a){Ext.create("Ext.tip.ToolTip",{target:a,dismissDelay:0,html:this.helpMsg})}});Ext.define("App.classes.form.fields.Checkbox",{extend:"Ext.form.field.Checkbox",alias:"widget.mitos.checkbox",inputValue:"1",uncheckedValue:"0"});Ext.define("App.classes.form.fields.Currency",{extend:"Ext.form.field.Number",alias:"widget.mitos.currency",currencySymbol:"$",useThousandSeparator:true,thousandSeparator:",",alwaysDisplayDecimals:true,fieldStyle:"text-align: right;",initComponent:function(){if(this.useThousandSeparator&&this.decimalSeparator==","&&this.thousandSeparator==","){this.thousandSeparator="."}else{if(this.allowDecimals&&this.thousandSeparator=="."&&this.decimalSeparator=="."){this.decimalSeparator=","}}this.callParent(arguments)},setValue:function(a){App.classes.form.fields.Currency.superclass.setValue.call(this,a!=null?a.toString().replace(".",this.decimalSeparator):a);this.setRawValue(this.getFormattedValue(this.getValue()))},getFormattedValue:function(d){if(Ext.isEmpty(d)||!this.hasFormat()){return d}else{var f=null;d=(f=d<0)?d*-1:d;d=this.allowDecimals&&this.alwaysDisplayDecimals?d.toFixed(this.decimalPrecision):d;if(this.useThousandSeparator){if(this.useThousandSeparator&&Ext.isEmpty(this.thousandSeparator)){throw ("NumberFormatException: invalid thousandSeparator, property must has a valid character.")}if(this.thousandSeparator==this.decimalSeparator){throw ("NumberFormatException: invalid thousandSeparator, thousand separator must be different from decimalSeparator.")}d=d.toString();var e=d.split(".");e[1]=e[1]?e[1]:null;var c=e[0];var b=/(\d+)(\d{3})/;var a=this.thousandSeparator;while(b.test(c)){c=c.replace(b,"$1"+a+"$2")}d=c+(e[1]?this.decimalSeparator+e[1]:"")}return Ext.String.format("{0}{1}{2}",(f?"-":""),(Ext.isEmpty(this.currencySymbol)?"":this.currencySymbol+" "),d)}},parseValue:function(a){return App.classes.form.fields.Currency.superclass.parseValue.call(this,this.removeFormat(a))},removeFormat:function(a){if(Ext.isEmpty(a)||!this.hasFormat()){return a}else{a=a.toString().replace(this.currencySymbol+" ","");a=this.useThousandSeparator?a.replace(new RegExp("["+this.thousandSeparator+"]","g"),""):a;return a}},getErrors:function(a){return App.classes.form.fields.Currency.superclass.getErrors.call(this,this.removeFormat(a))},hasFormat:function(){return this.decimalSeparator!="."||(this.useThousandSeparator==true&&this.getRawValue()!=null)||!Ext.isEmpty(this.currencySymbol)||this.alwaysDisplayDecimals},onFocus:function(){this.setRawValue(this.removeFormat(this.getRawValue()));this.callParent(arguments)}});Ext.define("App.classes.form.fields.DateTime",{extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},alias:"widget.mitos.datetime",combineErrors:true,msgTarget:"under",layout:"hbox",readOnly:false,dateFormat:"Y-m-d",timeFormat:"g:i:s a",dateTimeFormat:"Y-m-d H:i:s",dateConfig:{},timeConfig:{},dateValue:null,dateField:null,timeField:null,initComponent:function(){var b=this;b.items=b.items||[];b.dateField=Ext.create("Ext.form.field.Date",Ext.apply({format:b.dateFormat,flex:1,submitValue:false},b.dateConfig,null));b.items.push(b.dateField);b.timeField=Ext.create("Ext.form.field.Time",Ext.apply({format:b.timeFormat,flex:1,submitValue:false},b.timeConfig,null));b.items.push(b.timeField);for(var a=0;a<b.items.length;a++){b.items[a].on("focus",Ext.bind(b.onItemFocus,b));b.items[a].on("blur",Ext.bind(b.onItemBlur,b));b.items[a].on("specialkey",function(f,e){var c=e.getKey(),d=c==e.TAB;if(d&&b.focussedItem==b.dateField){e.stopEvent();b.timeField.focus();return}b.fireEvent("specialkey",f,e)})}if(b.layout=="vbox"){b.height=44}b.callParent();this.inputEl={dom:{},swallowEvent:function(){}};b.initField()},focus:function(){this.callParent();this.dateField.focus()},onItemFocus:function(a){if(this.blurTask){this.blurTask.cancel()}this.focussedItem=a},onItemBlur:function(b){var a=this;if(b!=a.focussedItem){return}a.blurTask=new Ext.util.DelayedTask(function(){a.fireEvent("blur",a)});a.blurTask.delay(100)},getValue:function(){var b=null,a=this.dateField.getSubmitValue(),d=this.timeField.getSubmitValue();if(a){if(d){var c=this.getFormat();b=Ext.Date.parse(a+" "+d,c)}else{b=this.dateField.getValue()}}return b},getSubmitValue:function(){var a=this.getValue();return a?Ext.Date.format(a,this.dateTimeFormat):null},setValue:function(a){if(Ext.isString(a)){a=Ext.Date.parse(a,this.dateTimeFormat)}this.dateField.setValue(a);this.timeField.setValue(a)},getFormat:function(){return(this.dateField.submitFormat||this.dateField.format)+" "+(this.timeField.submitFormat||this.timeField.format)},getSubmitData:function(){var a=this,b=null;if(!a.disabled&&a.submitValue&&!a.isFileUpload()){b={};b[a.getName()]=""+a.getSubmitValue()}return b},setReadOnly:function(a){this.dateField.setReadOnly(a);this.timeField.setReadOnly(a)}});Ext.define("App.classes.form.Panel",{extend:"Ext.form.Panel",alias:"widget.mitos.form",bodyStyle:"padding: 10px;",autoWidth:true,border:false});Ext.define("App.classes.grid.EventHistory",{extend:"Ext.grid.Panel",alias:"widget.mitos.eventhistorygrid",initComponent:function(){Ext.apply(this,{columns:[{header:i18n.date,dataIndex:"date",width:140,renderer:Ext.util.Format.dateRenderer("Y-m-d g:i:s a")},{header:i18n.user,dataIndex:"user",width:150},{header:i18n.event,dataIndex:"event",flex:1}]},null);this.callParent(arguments)}});Ext.define("App.classes.grid.RowFormEditing",{extend:"Ext.grid.plugin.Editing",alias:"plugin.rowformediting",requires:["App.classes.grid.RowFormEditor"],editStyle:"row",autoCancel:true,errorSummary:true,constructor:function(){var a=this;a.callParent(arguments);if(!a.clicksToMoveEditor){a.clicksToMoveEditor=a.clicksToEdit}a.autoCancel=!!a.autoCancel},init:function(a){this.callParent([a])},destroy:function(){var a=this;Ext.destroy(a.editor);a.callParent(arguments)},startEdit:function(a,d){var c=this,b=c.getEditor();if(c.callParent(arguments)===false){return false}if(b.beforeEdit()!==false){b.startEdit(c.context.record,c.context.column)}},cancelEdit:function(){var a=this;if(a.editing){a.getEditor().cancelEdit();a.callParent(arguments);a.fireEvent("canceledit",a.context)}},completeEdit:function(){var a=this;if(a.editing&&a.validateEdit()){a.editing=false;a.fireEvent("edit",a,a.context)}},completeRemove:function(){var a=this;if(a.editing){a.getEditor().completeRemove();a.fireEvent("completeremove",a,a.context)}},validateEdit:function(){var j=this,g=j.editor,b=j.context,f=b.record,l={},d={},i=g.getForm().getFields().items,h,c=i.length,a,k;for(h=0;h<c;h++){k=i[h];a=k.name;l[a]=k.getValue();d[a]=f.get(a)}Ext.apply(b,{newValues:l,originalValues:d});return j.callParent(arguments)&&j.getEditor().completeEdit()},getEditor:function(){var a=this;if(!a.editor){a.editor=a.initEditor()}return a.editor},initEditor:function(){var g=this,c=g.grid,h=g.view,d=c.headerCt,e=["saveBtnText","cancelBtnText","errorsText","dirtyText"],i,a=e.length,f={autoCancel:g.autoCancel,errorSummary:g.errorSummary,fields:d.getGridColumns(),hidden:true,editingPlugin:g,renderTo:h.el},j;for(i=0;i<a;i++){j=e[i];if(Ext.isDefined(g[j])){f[j]=g[j]}}return Ext.create("App.classes.grid.RowFormEditor",f)},initEditTriggers:function(){var a=this,b=a.clicksToMoveEditor===1?"click":"dblclick";a.callParent(arguments);if(a.clicksToMoveEditor!==a.clicksToEdit){a.mon(a.view,"cell"+b,a.moveEditorByClick,a)}},addHeaderEvents:function(){var a=this;a.callParent();a.mon(a.grid.headerCt,{scope:a,columnresize:a.onColumnResize,columnhide:a.onColumnHide,columnshow:a.onColumnShow,columnmove:a.onColumnMove})},startEditByClick:function(){var a=this;if(!a.editing||a.clicksToMoveEditor===a.clicksToEdit){a.callParent(arguments)}},moveEditorByClick:function(){var a=this;if(a.editing){a.superclass.startEditByClick.apply(a,arguments)}},onColumnAdd:function(a,c){if(c.isHeader){var d=this,b;d.initFieldAccessors(c);b=d.getEditor();if(b&&b.onColumnAdd){b.onColumnAdd(c)}}},onColumnRemove:function(a,c){if(c.isHeader){var d=this,b=d.getEditor();if(b&&b.onColumnRemove){b.onColumnRemove(c)}d.removeFieldAccessors(c)}},onColumnResize:function(a,d,c){if(d.isHeader){var e=this,b=e.getEditor();if(b&&b.onColumnResize){b.onColumnResize(d,c)}}},onColumnHide:function(a,c){var d=this,b=d.getEditor();if(b&&b.onColumnHide){b.onColumnHide(c)}},onColumnShow:function(a,c){var d=this,b=d.getEditor();if(b&&b.onColumnShow){b.onColumnShow(c)}},onColumnMove:function(a,d,c,f){var e=this,b=e.getEditor();if(b&&b.onColumnMove){b.onColumnMove(d,c,f)}},setColumnField:function(a,c){var b=this;b.callParent(arguments);b.getEditor().setField(a.field,a)}});Ext.define("App.classes.grid.RowFormEditor",{extend:"Ext.form.Panel",requires:["Ext.tip.ToolTip","Ext.util.HashMap","Ext.util.KeyNav"],saveBtnText:i18n.update,cancelBtnText:i18n.cancel,removeBtnText:i18n.remove,errorsText:i18n.errors,dirtyText:i18n.commit_cancel_your_changes,lastScrollLeft:0,lastScrollTop:0,bodyPadding:5,padding:"0 0 5 0",border:false,buttonAlign:"center",hideMode:"offsets",initComponent:function(){var c=this,b,a;c.cls=Ext.baseCSSPrefix+"grid-row-editor grid-row-form-editor";c.currRowH=null;a=c.editingPlugin;c.items=a.formItems;c.buttons=[{action:"update",xtype:"button",handler:a.completeEdit,scope:a,text:c.saveBtnText,disabled:!c.isValid,minWidth:Ext.panel.Panel.prototype.minButtonWidth},{xtype:"button",handler:a.cancelEdit,scope:a,text:c.cancelBtnText,minWidth:Ext.panel.Panel.prototype.minButtonWidth}];if(a.enableRemove){c.buttons.push({xtype:"button",handler:a.completeRemove,scope:a,text:c.removeBtnText,minWidth:Ext.panel.Panel.prototype.minButtonWidth})}c.callParent(arguments);b=c.getForm();c.setFields();b.trackResetOnLoad=true},onFieldValueChange:function(){var d=this,c=d.getForm(),b=c.isValid(),a;if(d.errorSummary&&d.isVisible()){d[b?"hideToolTip":"showToolTip"]()}a=d.query('button[action="update"]')[0];if(a){a.setDisabled(!b)}d.isValid=b},afterRender:function(){var b=this,a=b.editingPlugin;b.callParent(arguments);b.mon(b.renderTo,"scroll",b.onCtScroll,b,{buffer:100});b.mon(b.el,{click:Ext.emptyFn,stopPropagation:true});b.el.swallowEvent(["keypress","keydown"]);b.keyNav=new Ext.util.KeyNav(b.el,{esc:a.onEscKey,scope:a});b.mon(a.view,{beforerefresh:b.onBeforeViewRefresh,refresh:b.onViewRefresh,scope:b})},onBeforeViewRefresh:function(b){var c=this,a=b.el.dom;if(c.el.dom.parentNode===a){a.removeChild(c.el.dom)}},onViewRefresh:function(c){var e=this,b=c.el.dom,d=e.context,a;b.appendChild(e.el.dom);if(d&&(a=d.store.indexOf(d.record))>=0){d.row=c.getNode(a);e.reposition();if(e.tooltip&&e.tooltip.isVisible()){e.tooltip.setTarget(d.row)}}else{e.editingPlugin.cancelEdit()}},onCtScroll:function(d,c){var a=this,b=c.scrollTop,f=c.scrollLeft;if(b!==a.lastScrollTop){a.lastScrollTop=b;if((a.tooltip&&a.tooltip.isVisible())||a.hiddenTip){a.repositionTip()}}if(f!==a.lastScrollLeft){a.lastScrollLeft=f;a.reposition()}},reposition:function(m){if(this.currRowH){this.currRow.setHeight(this.currRowH)}var j=this,d=j.context,p=d&&Ext.get(d.row),b=j.editingPlugin.grid,o=b.view.el,h=b.verticalScroller,l=b.headerCt.getFullWidth(),f=b.getWidth(),c=Math.min(l,f),g=b.view.el.dom.scrollLeft,k,n,a,i=function(){if(h){h.invalidate();btnEl.scrollIntoView(o,false)}if(m&&m.callback){m.callback.call(m.scope||j)}};if(p&&Ext.isElement(p.dom)){p.scrollIntoView(o,false);k=p.getXY()[1]+19;j.currRowH=p.getHeight();j.currRow=p;p.setHeight(j.getHeight()+19);if(Ext.isIE){a+=2}if(m){var e={to:{y:k},duration:m.duration||125,listeners:{afteranimate:function(){i();k=p.getXY()[1]+19;j.el.setY(k)}}};j.animate(e)}else{j.el.setY(k);i()}}if(j.getWidth()!=l){j.setWidth(l)}},resizeEditor:function(){if(this.currRowH){this.currRow.setHeight(this.currRowH)}var h=this,d=h.context,m=d&&Ext.get(d.row),b=h.editingPlugin.grid,l=b.view.el,g=b.verticalScroller,j=b.headerCt.getFullWidth(),e=b.getWidth(),c=Math.min(j,e),f=b.view.el.dom.scrollLeft,i,k,a;if(m&&Ext.isElement(m.dom)){m.scrollIntoView(l,false);i=m.getXY()[1]+19;h.currRowH=m.getHeight();h.currRow=m;m.setHeight(h.getHeight()+19);if(Ext.isIE){a+=2}}if(h.getWidth()!=j){h.setWidth(j)}},getGridStores:function(){var d=this,c=d.query("grid"),a=[];for(var b=0;b<c.length;b++){a.push(c[b].store)}return a},syncChildStoresChanges:function(){var c=this,a=c.getGridStores();for(var b=0;b<a.length;b++){a[b].sync()}},rejectChildStoresChanges:function(){var c=this,a=c.getGridStores();for(var b=0;b<a.length;b++){a[b].rejectChanges()}},getEditor:function(a){var b=this;if(Ext.isNumber(a)){return b.query(">[isFormField]")[a]}else{if(a instanceof Ext.grid.column.Column){return a.getEditor()}}return false},setFields:function(d){var f=this,e=f.getForm(),a=e.getFields().items,g=f.query("container");for(var c=0;c<a.length;c++){f.mon(a[c],"change",f.onFieldValueChange,f)}for(var b=0;b<g.length;b++){f.mon(g[b],"resize",f.resizeEditor,f)}},loadRecord:function(a){var c=this,b=c.getForm();b.loadRecord(a);if(b.isValid()){c.hideToolTip()}else{c.showToolTip()}Ext.Array.forEach(c.query(">displayfield"),function(d){c.renderColumnData(d,a)},c)},renderColumnData:function(g,b){var f=this,d=f.editingPlugin.grid,h=d.headerCt,a=d.view,c=a.store,e=f.getForm();e.loadRecord(b)},beforeEdit:function(){var a=this;a.getGridStores();if(a.isVisible()&&!a.autoCancel&&a.isDirty()){a.showToolTip();return false}},startEdit:function(b,g){var f=this,e=f.editingPlugin.grid,a=e.getView(),c=e.store,d=f.context=Ext.apply(f.editingPlugin.context,{view:e.getView(),store:c});d.grid.getSelectionModel().select(b);f.loadRecord(b);if(!f.isVisible()){f.show();f.focusContextCell()}else{f.reposition({callback:this.focusContextCell})}},focusContextCell:function(){var a=this.getEditor(this.context.colIdx);if(a&&a.focus){a.focus()}},cancelEdit:function(){var b=this,a=b.getForm();b.rejectChildStoresChanges();b.hide();a.clearInvalid();a.reset()},completeEdit:function(){var b=this,a=b.getForm();if(!a.isValid()){return}b.syncChildStoresChanges();a.updateRecord(b.context.record);b.hide();return true},completeRemove:function(){var e=this,d=e.getForm(),b=e.context.view,c=e.context.store,a=b.getSelectionModel().getLastSelected();c.remove(a);e.hide();d.clearInvalid();d.reset();e.editingPlugin.fireEvent("afterremove",e.context)},onShow:function(){var a=this;a.callParent(arguments);a.reposition()},onHide:function(){var a=this;a.callParent(arguments);a.hideToolTip();a.invalidateScroller();if(a.context){a.context.view.focus();a.context=null}a.currRow.setHeight(a.currRowH);a.currRowH=null},isDirty:function(){var b=this,a=b.getForm();return a.isDirty()},getToolTip:function(){var a=this,b;if(!a.tooltip){a.tooltip=Ext.createWidget("tooltip",{cls:Ext.baseCSSPrefix+"grid-row-editor-errors",title:a.errorsText,autoHide:false,closable:true,closeAction:"disable",anchor:"left"})}return a.tooltip},hideToolTip:function(){var a=this,b=a.getToolTip();if(b.rendered){b.disable()}a.hiddenTip=false},showToolTip:function(){var c=this,d=c.getToolTip(),a=c.context,e=Ext.get(a.row),b=a.grid.view.el;d.setTarget(e);d.showAt([-10000,-10000]);d.body.update(c.getErrors());d.mouseOffset=[b.getWidth()-e.getWidth()+c.lastScrollLeft+15,0];c.repositionTip();d.doLayout();d.enable()},repositionTip:function(){var h=this,i=h.getToolTip(),c=h.context,k=Ext.get(c.row),j=c.grid.view.el,e=j.getHeight(),f=h.lastScrollTop,g=f+e,b=k.getHeight(),a=k.dom.offsetTop,d=a+b;if(d>f&&a<g){i.show();h.hiddenTip=false}else{i.hide();h.hiddenTip=true}},getErrors:function(){var a=this,b=!a.autoCancel&&a.isDirty()?a.dirtyText+"<br />":"",c=[];Ext.Array.forEach(a.query(">[isFormField]"),function(d){c=c.concat(Ext.Array.map(d.getErrors(),function(f){return"<li>"+f+"</li>"}))},a);return b+"<ul>"+c.join("")+"</ul>"},invalidateScroller:function(){var c=this,b=c.context,a=b.grid.verticalScroller;if(a){a.invalidate()}}});Ext.define("App.classes.combo.ActiveFacilities",{extend:"Ext.form.ComboBox",alias:"widget.mitos.activefacilitiescombo",initComponent:function(){var a=this;Ext.define("ActiveFacilitiesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"int"}],proxy:{type:"direct",api:{read:CombosData.getActiveFacilities}}});a.store=Ext.create("Ext.data.Store",{model:"ActiveFacilitiesComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.ActiveInsurances",{extend:"Ext.form.ComboBox",alias:"widget.activeinsurancescombo",initComponent:function(){var a=this;Ext.define("ActiveInsurancesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getActiveInsurances}}});a.store=Ext.create("Ext.data.Store",{model:"ActiveInsurancesComboModel"});Ext.apply(this,{editable:false,displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.Allergies",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiescombo",initComponent:function(){var a=this;Ext.define("AllergiesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"allergy_name"},{name:"allergy_type",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getAllergiesByType}}});a.store=Ext.create("Ext.data.Store",{model:"AllergiesComboModel",autoLoad:false});Ext.apply(this,{editable:false,queryMode:"local",displayField:"allergy_name",valueField:"allergy_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesAbdominal",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiesabdominalcombo",initComponent:function(){var a=this;Ext.define("allergiesabdominalModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:82}}});a.store=Ext.create("Ext.data.Store",{model:"allergiesabdominalModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesLocal",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergieslocalcombo",initComponent:function(){var a=this;Ext.define("allergieslocalModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:81}}});a.store=Ext.create("Ext.data.Store",{model:"allergieslocalModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesLocation",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergieslocationcombo",initComponent:function(){var a=this;Ext.define("allergieslocationModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:79}}});a.store=Ext.create("Ext.data.Store",{model:"allergieslocationModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesSeverity",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiesseveritycombo",initComponent:function(){var a=this;Ext.define("allergiesseverityModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:84}}});a.store=Ext.create("Ext.data.Store",{model:"allergiesseverityModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesSkin",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiesskincombo",initComponent:function(){var a=this;Ext.define("allergiesskinModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:80}}});a.store=Ext.create("Ext.data.Store",{model:"allergiesskinModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesSystemic",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiessystemiccombo",initComponent:function(){var a=this;Ext.define("allergiessystemicModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:83}}});a.store=Ext.create("Ext.data.Store",{model:"allergiessystemicModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.AllergiesTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiestypescombo",initComponent:function(){var a=this;Ext.define("AllergiesTypesComboModel",{extend:"Ext.data.Model",fields:[{name:"allergy_type",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getAllergieTypes}}});a.store=Ext.create("Ext.data.Store",{model:"AllergiesTypesComboModel",autoLoad:false});Ext.apply(this,{editable:false,displayField:"allergy_type",valueField:"allergy_type",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Authorizations",{extend:"Ext.form.ComboBox",alias:"widget.mitos.authorizationscombo",initComponent:function(){var a=this;Ext.define("AuthorizationsModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getAuthorizations}}});a.store=Ext.create("Ext.data.Store",{model:"AuthorizationsModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"id",displayField:"name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.BillingFacilities",{extend:"Ext.form.ComboBox",alias:"widget.mitos.billingfacilitiescombo",initComponent:function(){var a=this;Ext.define("BillingFacilitiesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"int"}],proxy:{type:"direct",api:{read:CombosData.getBillingFacilities}}});a.store=Ext.create("Ext.data.Store",{model:"BillingFacilitiesComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.CalendarCategories",{extend:"Ext.form.ComboBox",alias:"widget.mitos.calcategoriescombobox",editable:false,displayField:"catname",valueField:"catid",emptyText:i18n.select,initComponent:function(){var a=this;Ext.define("CalendarCategoriesModel",{extend:"Ext.data.Model",fields:[{name:"catid",type:"int"},{name:"catname",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getCalendarCategories}}});a.store=Ext.create("Ext.data.Store",{model:"CalendarCategoriesModel",autoLoad:true});Ext.apply(this,{store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.CalendarStatus",{extend:"Ext.form.ComboBox",alias:"widget.mitos.calstatuscombobox",name:"status",initComponent:function(){var a=this;Ext.define("CalendarStatusModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:30}}});a.store=Ext.create("Ext.data.Store",{model:"CalendarStatusModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.CodesTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.codestypescombo",initComponent:function(){var a=this;Ext.define("CodesTypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:56}}});a.store=Ext.create("Ext.data.Store",{model:"CodesTypesModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.EncounterPriority",{extend:"Ext.form.ComboBox",alias:"widget.encounterprioritycombo",initComponent:function(){var a=this;Ext.define("EncounterPriorityModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:94}}});a.store=Ext.create("Ext.data.Store",{model:"EncounterPriorityModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.priority,store:a.store,listConfig:{getInnerTpl:function(){return'<span class="{option_name}">{option_name}</span></div>'}}},null);a.on("change",function(e,d){var c,b;if(d=="Minimal"){c="#008000";b="#ffffff"}else{if(d=="Delayed"){c="#ffff00";b="#000000"}else{if(d=="Immediate"){c="#ff0000";b="#ffffff"}else{if(d=="Expectant"){c="#808080";b="#ffffff"}else{if(d=="Deceased"){c="#000000";b="#ffffff"}}}}}this.inputEl.setStyle({"background-color":c,"background-image":"none",color:b})},a);a.callParent(arguments)}});Ext.define("App.classes.combo.Facilities",{extend:"Ext.form.ComboBox",alias:"widget.mitos.facilitiescombo",initComponent:function(){var a=this;Ext.define("FacilitiesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getFacilities}}});a.store=Ext.create("Ext.data.Store",{model:"FacilitiesComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"id",displayField:"name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.FloorPlanAreas",{extend:"Ext.form.ComboBox",alias:"widget.floorplanareascombo",initComponent:function(){var a=this;Ext.define("FloorPlanAreasModel",{extend:"Ext.data.Model",fields:[{name:"title",type:"string"},{name:"id",type:"int"}],proxy:{type:"direct",api:{read:CombosData.getFloorPlanAreas}}});a.store=Ext.create("Ext.data.Store",{model:"FloorPlanAreasModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"title",valueField:"id",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.FollowUp",{extend:"Ext.form.ComboBox",alias:"widget.mitos.followupcombo",initComponent:function(){var a=this;Ext.define("FollowUpModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:90}}});a.store=Ext.create("Ext.data.Store",{model:"FollowUpModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.InsurancePayerType",{extend:"Ext.form.ComboBox",alias:"widget.mitos.insurancepayertypecombo",initComponent:function(){var a=this;a.store=Ext.create("Ext.data.Store",{fields:["id","name"],data:[{id:"1",name:i18n.all},{id:"16",name:i18n.other_hcfa},{id:"MB",name:i18n.medicare_part_b},{id:"MC",name:i18n.medicaid},{id:"CH",name:i18n.champusva},{id:"CH",name:i18n.champus},{id:"BL",name:i18n.blue_cross_blue_shield},{id:"16",name:i18n.feca},{id:"09",name:i18n.self_pay},{id:"10",name:i18n.central_certification},{id:"11",name:i18n.other_nonfederal_programs},{id:"12",name:i18n.ppo},{id:"13",name:i18n.pos},{id:"14",name:i18n.epo},{id:"15",name:i18n.indemnity_insurance},{id:"16",name:i18n.hmo},{id:"AM",name:i18n.automobile_medical},{id:"CI",name:i18n.commercial_insurance},{id:"DS",name:i18n.disability},{id:"HM",name:i18n.health_maintenance_organization},{id:"LI",name:i18n.liability},{id:"LM",name:i18n.liability_medical},{id:"OF",name:i18n.other_federal_program},{id:"TV",name:i18n.title_v},{id:"VA",name:i18n.veterans_administration_plan},{id:"WC",name:i18n.workers_compensation_health_plan},{id:"ZZ",name:i18n.mutually_defined}]});Ext.apply(this,{name:"freeb_type",editable:false,displayField:"name",valueField:"id",queryMode:"local",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.LabObservations",{extend:"Ext.form.ComboBox",alias:"widget.labobservationscombo",initComponent:function(){var a=this;Ext.define("labObservationsComboModel",{extend:"Ext.data.Model",fields:[{name:"label"},{name:"name"},{name:"unit"},{name:"range_start"},{name:"range_end"},{name:"threshold"},{name:"notes"}],proxy:{type:"direct",api:{read:Services.getAllLabObservations}}});a.store=Ext.create("Ext.data.Store",{model:"labObservationsComboModel",autoLoad:false});Ext.apply(this,{store:a.store,displayField:"label",valueField:"id",emptyText:i18n.select_existing_observation,editable:false,width:810,listConfig:{getInnerTpl:function(){return'<div><span style="width:200px;display:inline-block;"><span style="font-weight:bold;">'+i18n.Label+':</span> {label},</span><span style="width:90px;display:inline-block;"><span style="font-weight:bold;">'+i18n.unit+':</span> {unit},</span><span style="width:150px;display:inline-block;"><span style="font-weight:bold;">'+i18n.range_start+':</span> {range_start},</span><span style="width:130px;display:inline-block;"><span style="font-weight:bold;">'+i18n.range_end+':</span> {range_end},</span><span style="width:100px;display:inline-block;"><span style="font-weight:bold;">'+i18n.threshold+":</span> {threshold}</span></div>"}}},null);a.callParent()}});Ext.define("App.classes.combo.LabsTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.labstypescombo",initComponent:function(){var a=this;Ext.define("LabsTypesComboModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"code_text_short"},{name:"parent_name",type:"string"},{name:"loinc_name",type:"string"}],proxy:{type:"direct",api:{read:Services.getActiveLaboratoryTypes}}});a.store=Ext.create("Ext.data.Store",{model:"LabsTypesComboModel",autoLoad:false});Ext.apply(this,{editable:false,displayField:"loinc_name",valueField:"loinc_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Languages",{extend:"Ext.form.ComboBox",alias:"widget.languagescombo",initComponent:function(){var a=this;Ext.define("LanguagesComboModel",{extend:"Ext.data.Model",fields:[{name:"code",type:"string"},{name:"description",type:"string"}],proxy:{type:"direct",api:{read:i18nRouter.getAvailableLanguages}}});a.store=Ext.create("Ext.data.Store",{model:"LanguagesComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"code",displayField:"description",store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.Lists",{extend:"Ext.form.ComboBox",alias:"widget.mitos.listscombo",width:250,iconCls:"icoListOptions",initComponent:function(){var a=this;Ext.define("ListComboModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"title",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getLists}}});a.store=Ext.create("Ext.data.Store",{model:"ListComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"id",displayField:"title",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.MedicalIssues",{extend:"Ext.form.ComboBox",alias:"widget.mitos.medicalissuescombo",initComponent:function(){var a=this;Ext.define("MedicalIssuesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:75}}});a.store=Ext.create("Ext.data.Store",{model:"MedicalIssuesModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Medications",{extend:"Ext.form.ComboBox",alias:"widget.mitos.medicationscombo",initComponent:function(){var a=this;Ext.define("MedicationsModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:74}}});a.store=Ext.create("Ext.data.Store",{model:"MedicationsModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.MsgNoteType",{extend:"Ext.form.ComboBox",alias:"widget.msgnotetypecombo",initComponent:function(){var a=this;Ext.define("MsgNoteTypeModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:28}}});a.store=Ext.create("Ext.data.Store",{model:"MsgNoteTypeModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.MsgStatus",{extend:"Ext.form.ComboBox",alias:"widget.msgstatuscombo",initComponent:function(){var a=this;Ext.define("MsgStatusModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:45}}});a.store=Ext.create("Ext.data.Store",{model:"MsgStatusModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.Occurrence",{extend:"Ext.form.ComboBox",alias:"widget.mitos.occurrencecombo",initComponent:function(){var a=this;Ext.define("OccurrenceModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:26}}});a.store=Ext.create("Ext.data.Store",{model:"OccurrenceModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Outcome",{extend:"Ext.form.ComboBox",alias:"widget.mitos.outcomecombo",initComponent:function(){var a=this;Ext.define("OutcomeModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:27}}});a.store=Ext.create("Ext.data.Store",{model:"OutcomeModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Outcome2",{extend:"Ext.form.ComboBox",alias:"widget.mitos.outcome2combo",initComponent:function(){var a=this;Ext.define("Outcome2model",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:74}}});a.store=Ext.create("Ext.data.Store",{model:"Outcome2model",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PayingEntity",{extend:"Ext.form.ComboBox",alias:"widget.mitos.payingentitycombo",initComponent:function(){var a=this;Ext.define("PayingEntityModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:54}}});a.store=Ext.create("Ext.data.Store",{model:"PayingEntityModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PaymentCategory",{extend:"Ext.form.ComboBox",alias:"widget.mitos.paymentcategorycombo",initComponent:function(){var a=this;Ext.define("PaymentCategoryModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:49}}});a.store=Ext.create("Ext.data.Store",{model:"PaymentCategoryModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PaymentMethod",{extend:"Ext.form.ComboBox",alias:"widget.mitos.paymentmethodcombo",initComponent:function(){var a=this;Ext.define("PaymentMethodModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:51}}});a.store=Ext.create("Ext.data.Store",{model:"PaymentMethodModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Pharmacies",{extend:"Ext.form.ComboBox",alias:"widget.mitos.pharmaciescombo",initComponent:function(){var a=this;Ext.define("PharmaciesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name"},{name:"option_value"}],proxy:{type:"direct",api:{read:CombosData.getActivePharmacies}}});a.store=Ext.create("Ext.data.Store",{model:"PharmaciesComboModel",autoLoad:false});Ext.apply(this,{editable:false,displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.posCodes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.poscodescombo",initComponent:function(){var a=this;Ext.define("PosCodesModel",{extend:"Ext.data.Model",fields:[{name:"code",type:"string"},{name:"title",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getPosCodes}}});a.store=Ext.create("Ext.data.Store",{model:"PosCodesModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"code",displayField:"title",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.PrescriptionHowTo",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptionhowto",initComponent:function(){var a=this;Ext.define("PrescriptionHowTomodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:88}}});a.store=Ext.create("Ext.data.Store",{model:"PrescriptionHowTomodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PrescriptionOften",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptionoften",initComponent:function(){var a=this;Ext.define("PrescriptionOftenmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:86}}});a.store=Ext.create("Ext.data.Store",{model:"PrescriptionOftenmodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PrescriptionTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptiontypes",initComponent:function(){var a=this;Ext.define("PrescriptionTypesmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:89}}});a.store=Ext.create("Ext.data.Store",{model:"PrescriptionTypesmodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PrescriptionWhen",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptionwhen",initComponent:function(){var a=this;Ext.define("PrescriptionWhenmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:87}}});a.store=Ext.create("Ext.data.Store",{model:"PrescriptionWhenmodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.PreventiveCareTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.preventivecaretypescombo",initComponent:function(){var a=this;Ext.define("PreventiveCareTypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:78}}});a.store=Ext.create("Ext.data.Store",{model:"PreventiveCareTypesModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.ProceduresBodySites",{extend:"Ext.form.ComboBox",alias:"widget.mitos.proceduresbodysitescombo",initComponent:function(){var a=this;Ext.define("ProceduresBodySitesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:34}}});a.store=Ext.create("Ext.data.Store",{model:"ProceduresBodySitesModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Providers",{extend:"Ext.form.ComboBox",alias:"widget.mitos.providerscombo",initComponent:function(){var a=this;Ext.define("Providersmodel",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:User.getProviders}}});a.store=Ext.create("Ext.data.Store",{model:"Providersmodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"name",valueField:"id",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Roles",{extend:"Ext.form.ComboBox",alias:"widget.mitos.rolescombo",initComponent:function(){var a=this;Ext.define("RolesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"role_name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getRoles}}});a.store=Ext.create("Ext.data.Store",{model:"RolesComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"id",displayField:"role_name",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Sex",{extend:"Ext.form.ComboBox",alias:"widget.mitos.sexcombo",initComponent:function(){var a=this;Ext.define("Sexmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:19}}});a.store=Ext.create("Ext.data.Store",{model:"Sexmodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.SmokingStatus",{extend:"Ext.form.ComboBox",alias:"widget.mitos.smokingstatuscombo",initComponent:function(){var a=this;Ext.define("smokingstatusModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:58}}});a.store=Ext.create("Ext.data.Store",{model:"smokingstatusModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Surgery",{extend:"Ext.form.ComboBox",alias:"widget.mitos.surgerycombo",initComponent:function(){var a=this;Ext.define("SurgeryModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:76}}});a.store=Ext.create("Ext.data.Store",{model:"SurgeryModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.TaxId",{extend:"Ext.form.ComboBox",alias:"widget.mitos.taxidcombo",initComponent:function(){var a=this;Ext.define("TaxIdsModel",{extend:"Ext.data.Model",fields:[{name:"option_id",type:"string"},{name:"title",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getTaxIds}}});a.store=Ext.create("Ext.data.Store",{model:"TaxIdsModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"title",valueField:"option_id",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.Templates",{extend:"Ext.form.ComboBox",alias:"widget.mitos.templatescombo",initComponent:function(){var a=this;Ext.define("TemplatesComboModel",{extend:"Ext.data.Model",fields:[{name:"title",type:"string"},{name:"body"}],proxy:{type:"direct",api:{read:CombosData.getTemplatesTypes}}});a.store=Ext.create("Ext.data.Store",{model:"TemplatesComboModel",autoLoad:false});Ext.apply(this,{editable:false,displayField:"title",valueField:"title",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Themes",{extend:"Ext.form.ComboBox",alias:"widget.themescombo",initComponent:function(){var a=this;Ext.define("ThemesComboModel",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getThemes}}});a.store=Ext.create("Ext.data.Store",{model:"ThemesComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"value",displayField:"name",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.Time",{extend:"Ext.form.ComboBox",alias:"widget.mitos.timecombo",initComponent:function(){var a=this;Ext.define("Timemodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:77}}});a.store=Ext.create("Ext.data.Store",{model:"Timemodel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Titles",{extend:"Ext.form.ComboBox",alias:"widget.mitos.titlescombo",initComponent:function(){var a=this;Ext.define("TitlesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:22}}});a.store=Ext.create("Ext.data.Store",{model:"TitlesModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.TransmitMethod",{extend:"Ext.form.ComboBox",alias:"widget.transmitmethodcombo",initComponent:function(){var a=this;a.storeTrsmit=Ext.create("Ext.data.Store",{fields:["id","name"],data:[{id:"1",name:"Print"},{id:"2",name:"Email"},{id:"3",name:"Email"}]});Ext.apply(this,{name:"transmit_method",editable:false,displayField:"name",valueField:"id",queryMode:"local",emptyText:i18n.select,store:a.storeTrsmit},null);a.callParent()}});Ext.define("App.classes.combo.Types",{extend:"Ext.form.ComboBox",alias:"widget.mitos.typescombobox",initComponent:function(){var a=this;Ext.define("TypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:32}}});a.store=Ext.create("Ext.data.Store",{model:"TypesModel",autoLoad:true});Ext.apply(this,{name:"abook_type",editable:false,displayField:"option_name",valueField:"option_value",queryMode:"local",store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Units",{extend:"Ext.form.ComboBox",alias:"widget.mitos.unitscombo",initComponent:function(){var a=this;Ext.define("UnitsModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:38}}});a.store=Ext.create("Ext.data.Store",{model:"UnitsModel",autoLoad:true});Ext.apply(this,{queryMode:"local",valueField:"option_value",displayField:"option_name",store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.Users",{extend:"Ext.form.ComboBox",alias:"widget.userscombo",initComponent:function(){var a=this;Ext.define("UsersComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getUsers}}});a.store=Ext.create("Ext.data.Store",{model:"UsersComboModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",valueField:"id",displayField:"name",emptyText:i18n.select,store:a.store},null);a.callParent()}});Ext.define("App.classes.combo.YesNoNa",{extend:"Ext.form.ComboBox",alias:"widget.mitos.yesnonacombo",initComponent:function(){var a=this;Ext.define("yesnonaModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:93}}});a.store=Ext.create("Ext.data.Store",{model:"yesnonaModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.combo.YesNo",{extend:"Ext.form.ComboBox",alias:"widget.mitos.yesnocombo",initComponent:function(){var a=this;Ext.define("yesnoModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:23}}});a.store=Ext.create("Ext.data.Store",{model:"yesnoModel",autoLoad:true});Ext.apply(this,{editable:false,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:i18n.select,store:a.store},null);a.callParent(arguments)}});Ext.define("App.classes.window.Window",{extend:"Ext.window.Window",autoHeight:true,modal:true,border:true,autoScroll:true,resizable:false,closeAction:"hide",initComponent:function(){this.callParent(arguments)},updateTitle:function(a,b){this.setTitle(a+(b?"[ Read Only ]":""))},setReadOnly:function(){var c=this.query("form"),f=app.patient.readOnly;for(var d=0;d<c.length;d++){var e=c[d],b;if(e.readOnly!=f){e.readOnly=f;b=e.getForm().getFields().items;for(var a=0;a<b.length;a++){b[a].setReadOnly(f)}}}return f},setButtonsDisabled:function(d){var a=app.patient.readOnly;for(var c=0;c<d.length;c++){var b=d[c];if(b.disabled!=a){b.disabled=a;b.setDisabled(a)}}},checkIfCurrPatient:function(){return app.getCurrPatient()},patientInfoAlert:function(){var a=app.getCurrPatient();Ext.Msg.alert(i18n.status,i18n.patient+": "+a.name+" ("+a.pid+")")},currPatientError:function(){Ext.Msg.show({title:"Oops! "+i18n.no_patient_selected,msg:i18n.select_patient_patient_live_search,scope:this,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(){this.goBack()}})},getFormItems:function(formPanel,formToRender,callback){formPanel.removeAll();FormLayoutEngine.getFields({formToRender:formToRender},function(provider,response){var items=eval(response.result);formPanel.add(items);if(typeof callback=="function"){callback(formPanel,items,true)}})},boolRenderer:function(a){if(a=="1"||a==true||a=="true"){return'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />'}else{if(a=="0"||a==false||a=="false"){return'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />'}}return a},alertRenderer:function(a){if(a=="1"||a==true||a=="true"){return'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />'}else{if(a=="0"||a==false||a=="false"){return'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />'}}return a},warnRenderer:function(d,b,a){var c=a.data.warningMsg?' data-qtip="'+a.data.warningMsg+'" ':"";if(d=="1"||d==true||d=="true"){return'<img src="resources/images/icons/icoImportant.png" '+c+" />"}},onExpandRemoveMask:function(a){a.picker.loadMask.destroy()},strToLowerUnderscores:function(a){return a.toLowerCase().replace(/ /gi,"_")},getCurrPatient:function(){return app.getCurrPatient()},getApp:function(){return app.getApp()},msg:function(b,a){app.msg(b,a)},passwordVerificationWin:function(c){var b=Ext.Msg.prompt(i18n.password_verification,i18n.please_enter_your_password+":",function(e,d){c(e,d)});var a=b.textField.getInputId();document.getElementById(a).type="password";return b}});Ext.define("App.classes.NodeDisabled",{alias:"plugin.nodedisabled",extend:"Ext.AbstractPlugin",disabledCls:"tree-node-disabled",preventSelection:true,preventChecking:true,init:function(a){var c=this,b=a.getView(),d,e;c.callParent(arguments);d=b.getRowClass;if(d){e=b.scope||c;Ext.apply(b,{getRowClass:function(){var g,f;g=d.apply(e,arguments)||"";f=c.getRowClass.apply(c,arguments)||"";return(g&&f)?g+" "+f:g+f}},null)}else{Ext.apply(b,{getRowClass:Ext.Function.bind(c.getRowClass,c)},null)}if(c.preventSelection){a.getSelectionModel().on("beforeselect",c.onBeforeNodeSelect,c)}if(c.preventChecking){a.on("checkchange",c.checkchange,c)}},getCmp:function(){return this.callParent(arguments)},getRowClass:function(a,b,c,d){return a.get("disabled")?this.disabledCls:""},onBeforeNodeSelect:function(b,a){if(a.get("disabled")){return false}},checkchange:function(b,a){if(b.get("disabled")){b.set("checked",!a)}}});Ext.define("App.view.search.PatientSearch",{extend:"App.classes.RenderPanel",id:"panelPatientSearch",pageTitle:i18n.advance_patient_search,pageLayout:"border",uses:["App.classes.GridPanel"],initComponent:function(){var a=this;a.form=Ext.create("Ext.form.FormPanel",{region:"north",height:200,bodyPadding:10,margin:"0 0 3 0",buttonAlign:"left",items:[{xtype:"fieldcontainer",fieldLabel:i18n.name,layout:"hbox",defaults:{margin:"0 5 0 0"},items:[{xtype:"textfield",emptyText:i18n.first_name,name:"fname"},{xtype:"textfield",emptyText:i18n.middle_name,name:"mname"},{xtype:"textfield",emptyText:i18n.last_name,name:"lname"}]}],buttons:[{text:i18n.search,iconCls:"save",handler:function(){}},"-",{text:i18n.reset,iconCls:"save",tooltip:i18n.hide_selected_office_note,handler:function(){}}]});a.grid=Ext.create("App.classes.GridPanel",{region:"center",columns:[{header:"id",sortable:false,dataIndex:"id",hidden:true},{width:150,header:i18n.date,sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer("Y-m-d H:i:s")},{width:150,header:i18n.user,sortable:true,dataIndex:"user"},{flex:1,header:i18n.note,sortable:true,dataIndex:"body"}],tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{})})});a.pageBody=[a.form,a.grid];a.callParent(arguments)},onActive:function(a){a(true)}});Ext.define("App.view.patient.windows.Medical",{extend:"App.classes.window.Window",title:i18n.medical_window,id:"MedicalWindow",layout:"card",closeAction:"hide",height:750,width:1200,bodyStyle:"background-color:#fff",modal:true,defaults:{margin:5},requires:["App.view.patient.LaboratoryResults"],pid:null,initComponent:function(){var a=this;a.patientImmuListStore=Ext.create("App.store.patient.PatientImmunization",{groupField:"immunization_name",sorters:["immunization_name","administered_date"],listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientAllergiesListStore=Ext.create("App.store.patient.Allergies",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientMedicalIssuesStore=Ext.create("App.store.patient.MedicalIssues",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientSurgeryStore=Ext.create("App.store.patient.Surgery",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientDentalStore=Ext.create("App.store.patient.Dental",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientMedicationsStore=Ext.create("App.store.patient.Medications",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.labPanelsStore=Ext.create("App.store.patient.LaboratoryTypes",{autoSync:true});a.items=[{xtype:"grid",action:"patientImmuListGrid",itemId:"patientImmuListGrid",store:a.patientImmuListStore,features:Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:i18n.immunization+': {name} ({rows.length} Item{[values.rows.length > 1 ? "s" : ""]})',hideGroupedHeader:true}),columns:[{header:i18n.immunization_name,width:100,dataIndex:"immunization_name"},{xtype:"datecolumn",header:"Date",format:"Y-m-d",width:100,dataIndex:"administered_date"},{header:i18n.lot_number,width:100,dataIndex:"lot_number"},{header:"Notes",flex:1,dataIndex:"note"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:"general",xtype:"container",layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 3 0",xtype:"textfield"},items:[{xtype:"immunizationlivesearch",fieldLabel:i18n.name,hideLabel:false,allowBlank:false,itemId:"immunization_name",name:"immunization_name",enableKeyEvents:true,action:"immunizations",width:570,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"immunization_id",action:"idField"},{fieldLabel:i18n.administrator,name:"administered_by",width:295,labelWidth:160}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 3 0",xtype:"textfield"},items:[{fieldLabel:i18n.lot_number,xtype:"textfield",width:300,name:"lot_number"},{xtype:"numberfield",fieldLabel:i18n.dosis_number,width:260,name:"dosis"},{fieldLabel:i18n.info_statement_given,width:295,labelWidth:160,xtype:"datefield",format:"Y-m-d",name:"education_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 3 0",xtype:"textfield"},items:[{fieldLabel:i18n.notes,xtype:"textfield",width:300,name:"note"},{fieldLabel:i18n.manufacturer,xtype:"textfield",width:260,name:"manufacturer"},{fieldLabel:i18n.date_administered,xtype:"datefield",width:295,labelWidth:160,format:"Y-m-d",name:"administered_date"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_immunizations",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientAllergiesListGrid",store:a.patientAllergiesListStore,columns:[{header:i18n.type,width:100,dataIndex:"allergy_type"},{header:i18n.name,width:100,dataIndex:"allergy"},{header:i18n.location,width:100,dataIndex:"location"},{header:i18n.severity,flex:1,dataIndex:"severity"},{text:i18n.active,width:55,dataIndex:"alert",renderer:a.boolRenderer}],plugins:a.rowEditingAllergies=Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"mitos.allergiestypescombo",fieldLabel:i18n.type,name:"allergy_type",action:"allergy_type",allowBlank:false,width:225,labelWidth:70,enableKeyEvents:true,listeners:{scope:a,select:a.onAllergyTypeSelect}},{xtype:"mitos.allergieslocationcombo",fieldLabel:i18n.location,name:"location",action:"location",width:225,labelWidth:70,listeners:{scope:a,select:a.onLocationSelect}},{fieldLabel:i18n.begin_date,xtype:"datefield",format:"Y-m-d",name:"begin_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"mitos.allergiescombo",fieldLabel:i18n.allergy,action:"allergie_name",name:"allergy",enableKeyEvents:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect,change:a.disableFieldLogic}},{xtype:"medicationlivetsearch",fieldLabel:i18n.allergy,hideLabel:false,action:"drug_name",name:"allergy",hidden:true,disabled:true,enableKeyEvents:true,width:225,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect,change:a.disableFieldLogic}},{xtype:"textfield",hidden:true,name:"allergy_id",action:"idField"},{xtype:"mitos.allergiesabdominalcombo",fieldLabel:i18n.reaction,name:"reaction",disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{xtype:"mitos.allergieslocalcombo",fieldLabel:i18n.reaction,name:"reaction",hidden:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{xtype:"mitos.allergiesskincombo",fieldLabel:i18n.reaction,name:"reaction",hidden:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{xtype:"mitos.allergiessystemiccombo",fieldLabel:i18n.reaction,name:"reaction",hidden:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{fieldLabel:i18n.end_date,xtype:"datefield",format:"Y-m-d",name:"end_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"mitos.allergiesseveritycombo",fieldLabel:i18n.severity,name:"severity",width:225,labelWidth:70}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_allergies",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientMedicalListGrid",store:a.patientMedicalIssuesStore,columns:[{header:i18n.problem,flex:1,dataIndex:"code_text"},{xtype:"datecolumn",header:i18n.begin_date,width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,width:100,format:"Y-m-d",dataIndex:"end_date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"liveicdxsearch",fieldLabel:i18n.problem,name:"code_text",allowBlank:false,hideLabel:false,itemId:"medicalissues",action:"medicalissues",enableKeyEvents:true,width:510,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"code",action:"idField"},{fieldLabel:i18n.begin_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"begin_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.ocurrence,width:250,labelWidth:70,xtype:"mitos.occurrencecombo",name:"ocurrence"},{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:250,labelWidth:70,name:"outcome"},{fieldLabel:i18n.end_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"end_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:250,labelWidth:70,fieldLabel:i18n.referred_by,name:"referred_by"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_active_problems",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientSurgeryListGrid",store:a.patientSurgeryStore,columns:[{header:i18n.surgery,width:100,flex:1,dataIndex:"surgery"},{xtype:"datecolumn",header:i18n.date,width:100,format:"Y-m-d",dataIndex:"date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.surgery,name:"surgery",hideLabel:false,allowBlank:false,width:510,labelWidth:70,xtype:"surgerieslivetsearch",itemId:"surgery",action:"surgery",enableKeyEvents:true,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"surgery_id",action:"idField"},{fieldLabel:i18n.date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.notes,xtype:"textfield",width:510,labelWidth:70,name:"notes"},{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:200,labelWidth:80,name:"outcome"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:260,labelWidth:70,fieldLabel:i18n.referred_by,name:"referred_by"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_surgery",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientDentalListGrid",store:a.patientDentalStore,columns:[{header:i18n.title,width:100,dataIndex:"title"},{xtype:"datecolumn",header:i18n.begin_date,width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,flex:1,format:"Y-m-d",dataIndex:"end_date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:225,labelWidth:70,fieldLabel:i18n.title,action:"dental",name:"title"},{fieldLabel:i18n.begin_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"begin_date"},{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:250,labelWidth:70,name:"outcome"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:225,labelWidth:70,fieldLabel:i18n.referred_by,name:"referred_by"},{fieldLabel:i18n.end_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"end_date"},{fieldLabel:i18n.ocurrence,xtype:"mitos.occurrencecombo",width:250,labelWidth:70,name:"ocurrence"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_dental",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientMedicationsListGrid",store:a.patientMedicationsStore,columns:[{header:i18n.medication,flex:1,dataIndex:"medication"},{xtype:"datecolumn",header:i18n.begin_date,width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,width:100,format:"Y-m-d",dataIndex:"end_date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"medicationlivetsearch",fieldLabel:i18n.medication,hideLabel:false,itemId:"medication",name:"medication",action:"medication",enableKeyEvents:true,width:520,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"medication_id",action:"idField"},{fieldLabel:i18n.begin_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"begin_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:250,labelWidth:70,name:"outcome"},{xtype:"textfield",width:260,fieldLabel:i18n.referred_by,name:"referred_by"},{fieldLabel:i18n.end_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"end_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.ocurrence,width:250,labelWidth:70,xtype:"mitos.occurrencecombo",name:"ocurrence"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_medications",scope:a,handler:a.onReviewed}]},{xtype:"container",action:"patientLabs",layout:"border",items:[{xtype:"panel",region:"north",layout:"border",bodyBorder:false,border:false,height:350,split:true,items:[{xtype:"grid",region:"west",width:290,split:true,store:a.labPanelsStore,columns:[{header:i18n.laboratories,dataIndex:"label",flex:1}],listeners:{scope:a,itemclick:a.onLabPanelSelected,selectionchange:a.onLabPanelSelectionChange}},{xtype:"panel",action:"labPreviewPanel",title:i18n.laboratory_preview,region:"center",items:[a.uploadWin=Ext.create("Ext.window.Window",{draggable:false,closable:false,closeAction:"hide",items:[{xtype:"form",bodyPadding:10,width:400,items:[{xtype:"filefield",name:"filePath",buttonText:i18n.select_a_file+"...",anchor:"100%"}],api:{submit:DocumentHandler.uploadDocument}}],buttons:[{text:i18n.cancel,handler:function(){a.uploadWin.close()}},{text:i18n.upload,scope:a,handler:a.onLabUpload}]})]}],tbar:["->",{text:i18n.scan},"-",{text:i18n.upload,disabled:true,action:"uploadBtn",scope:a,handler:a.onLabUploadWind}]},{xtype:"container",region:"center",layout:"border",split:true,items:[{xtype:"form",title:i18n.laboratory_entry_form,region:"west",width:290,split:true,bodyPadding:5,autoScroll:true,bbar:["->",{text:i18n.reset,scope:a,handler:a.onLabResultsReset},"-",{text:i18n.sign,scope:a,handler:a.onLabResultsSign},"-",{text:i18n.save,scope:a,handler:a.onLabResultsSave}]},{xtype:"panel",region:"center",height:300,split:true,items:[{xtype:"lalboratoryresultsdataview",action:"lalboratoryresultsdataview",store:Ext.create("App.store.patient.PatientLabsResults"),listeners:{scope:a,itemclick:a.onLabResultClick}}]}]}]}];a.dockedItems=[{xtype:"toolbar",items:[{text:i18n.immunization,enableToggle:true,toggleGroup:"medicalWin",pressed:true,itemId:"immunization",action:"immunization",scope:a,handler:a.cardSwitch},"-",{text:i18n.allergies,enableToggle:true,toggleGroup:"medicalWin",itemId:"allergies",action:"allergies",scope:a,handler:a.cardSwitch},"-",{text:i18n.active_problems,enableToggle:true,toggleGroup:"medicalWin",itemId:"issues",action:"issues",scope:a,handler:a.cardSwitch},"-",{text:i18n.surgeries,enableToggle:true,toggleGroup:"medicalWin",itemId:"surgery",action:"surgery",scope:a,handler:a.cardSwitch},"-",{text:i18n.dental,enableToggle:true,toggleGroup:"medicalWin",itemId:"dental",action:"dental",scope:a,handler:a.cardSwitch},"-",{text:i18n.medications,enableToggle:true,toggleGroup:"medicalWin",itemId:"medications",action:"medications",scope:a,handler:a.cardSwitch},"-",{text:i18n.laboratories,enableToggle:true,toggleGroup:"medicalWin",itemId:"laboratories",action:"laboratories",scope:a,handler:a.cardSwitch},"->",{text:i18n.add_new,action:"AddRecord",scope:a,handler:a.onAddItem}]}];a.listeners={scope:a,show:a.onMedicalWinShow,close:a.onMedicalWinClose};a.callParent(arguments)},onLabPanelSelected:function(f,d){var g=this,b=g.query('[action="patientLabs"]')[0].down("form"),h=g.query('[action="lalboratoryresultsdataview"]')[0],c=h.store,a=d.data.fields;g.currLabPanelId=d.data.id;g.removeLabDocument();b.removeAll();b.add({xtype:"textfield",name:"id",hidden:true});for(var e=0;e<a.length;e++){b.add({xtype:"fieldcontainer",layout:"hbox",margin:0,anchor:"100%",fieldLabel:a[e].code_text_short||a[e].loinc_name,labelWidth:130,items:[{xtype:"textfield",name:a[e].loinc_number,flex:1,allowBlank:a[e].required_in_panel!="R"},{xtype:"mitos.unitscombo",value:a[e].default_unit,name:a[e].loinc_number+"_unit",width:90}]})}c.load({params:{parent_id:d.data.id}})},onLabPanelSelectionChange:function(b,a){this.query('[action="uploadBtn"]')[0].setDisabled(a.length==0)},onLabUploadWind:function(){var b=this,a=b.query('[action="labPreviewPanel"]')[0];b.uploadWin.show();b.uploadWin.alignTo(a.el.dom,"tr-tr",[-5,30])},onLabUpload:function(b){var d=this,a=d.uploadWin.down("form"),c=a.getForm(),e=b.up("window");if(c.isValid()){a.el.mask(i18n.uploading_laboratory+"...");c.submit({params:{pid:app.patient.pid,docType:"laboratory",eid:app.patient.eid},success:function(f,g){a.el.unmask();say(g.result);e.close();d.getLabDocument(g.result.doc.url);d.addNewLabResults(g.result.doc.id)},failure:function(f,g){a.el.unmask();say(g.result);e.close()}})}},onLabResultClick:function(a,b){var d=this,c=d.query('[action="patientLabs"]')[0].down("form").getForm();if(d.currDocUrl!=b.data.document_url){c.reset();b.data.data.id=b.data.id;c.setValues(b.data.data);d.getLabDocument(b.data.document_url);d.currDocUrl=b.data.document_url}},onLabResultsSign:function(){var e=this,d=e.query('[action="patientLabs"]')[0].down("form").getForm(),f=e.query('[action="lalboratoryresultsdataview"]')[0],c=f.store,b=d.getValues(),a=f.getSelectionModel().getLastSelected();if(d.isValid()){if(b.id){e.passwordVerificationWin(function(h,g){if(h=="ok"){User.verifyUserPass(g,function(j,i){if(i.result){say(a);Medical.signPatientLabsResultById(a.data.id,function(l,k){c.load({params:{parent_id:e.currLabPanelId}})})}else{Ext.Msg.show({title:"Oops!",msg:i18n.incorrect_password,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(k){if(k=="ok"){}}})}})}})}else{Ext.Msg.show({title:"Oops!",msg:i18n.nothing_to_sign,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(g){if(g=="ok"){}}})}}},onLabResultsSave:function(d){var f=this,e=d.up("form").getForm(),g=f.query('[action="lalboratoryresultsdataview"]')[0],c=g.store,b=e.getValues(),a=g.getSelectionModel().getLastSelected();if(e.isValid()){Medical.updatePatientLabsResult(b,function(){c.load({params:{parent_id:a.data.parent_id}});e.reset()})}},addNewLabResults:function(b){var c=this,e=c.query('[action="lalboratoryresultsdataview"]')[0],a=e.store,d={parent_id:c.currLabPanelId,document_id:b};Medical.addPatientLabsResult(d,function(g,f){a.load({params:{parent_id:c.currLabPanelId}})})},onReviewed:function(a){var c=this,b=a.itemId,d={eid:app.patient.eid,area:b};Medical.reviewMedicalWindowEncounter(d,function(f,e){c.msg("Sweet!",i18n.succefully_reviewed)})},onLabResultsReset:function(a){var b=a.up("form").getForm();b.reset()},getLabDocument:function(b){var a=this.query('[action="labPreviewPanel"]')[0];a.remove(this.doc);a.add(this.doc=Ext.create("App.classes.ManagedIframe",{src:b}))},removeLabDocument:function(b){var a=this.query('[action="labPreviewPanel"]')[0];a.remove(this.doc)},onLiveSearchSelect:function(d,a){var b=this,c,f,e;if(d.action=="immunizations"){e=a[0].data.id;c=d.up("container").query('[action="idField"]')[0];c.setValue(e)}else{if(d.id=="allergie_name"||d.id=="drug_name"){e=a[0].data.id;c=d.up("fieldcontainer").query('[action="idField"]')[0];c.setValue(e)}else{if(d.action=="medicalissues"){e=a[0].data.code;c=d.up("fieldcontainer").query('[action="idField"]')[0];f=d.up("fieldcontainer").query('[action="medicalissues"]')[0];c.setValue(e);f.setValue(a[0].data.code_text)}else{if(d.action=="surgery"){e=a[0].data.id;c=d.up("fieldcontainer").query('[action="idField"]')[0];c.setValue(e)}else{if(d.action=="medication"){e=a[0].data.id;c=d.up("fieldcontainer").query('[action="idField"]')[0];c.setValue(e)}}}}}},onAddItem:function(){var c=this,b=this.getLayout().getActiveItem(),a=b.store,d;b.editingPlugin.cancelEdit();a.insert(0,{created_uid:app.user.id,pid:app.patient.pid,create_date:new Date(),eid:app.patient.eid,begin_date:new Date()});b.editingPlugin.startEdit(0,0);if(app.patient.eid!=null){if(b.action=="patientImmuListGrid"){d={eid:app.patient.eid,area:"review_immunizations"}}else{if(b.action=="patientAllergiesListGrid"){d={eid:app.patient.eid,area:"review_allergies"}}else{if(b.action=="patientMedicalListGrid"){d={eid:app.patient.eid,area:"review_active_problems"}}else{if(b.action=="patientSurgeryListGrid"){d={eid:app.patient.eid,area:"review_surgery"}}else{if(b.action=="patientDentalListGrid"){d={eid:app.patient.eid,area:"review_dental"}}else{if(b.action=="patientMedicationsListGrid"){d={eid:app.patient.eid,area:"review_medications"}}}}}}}Medical.reviewMedicalWindowEncounter(d)}},hideall:function(e,d,b,a,c){d.hide(true);d.setDisabled(true);d.reset();b.hide(true);b.setDisabled(true);b.reset();a.hide(true);a.setDisabled(true);a.reset();c.hide(true);c.setDisabled(true);c.reset()},onLocationSelect:function(h,a){var f=this,e=h.up("form").getForm().findField("skinreaction"),c=h.up("form").getForm().findField("localreaction"),b=h.up("form").getForm().findField("abdominalreaction"),d=h.up("form").getForm().findField("systemicreaction"),g=h.getValue();f.hideall(h,e,c,b,d);if(g=="Skin"){e.show(true);e.setDisabled(false)}else{if(g=="Local"){c.show(true);c.setDisabled(false)}else{if(g=="Abdominal"){b.show(true);b.setDisabled(false)}else{if(g=="Systemic / Anaphylactic"){d.show(true);d.setDisabled(false)}}}}},disableFieldLogic:function(b,a){b.setDisabled((a==""||a==null))},onAllergyTypeSelect:function(d,a){var b=this,e=d.up("form").getForm().findField("allergie_name"),c=d.up("form").getForm().findField("drug_name");if(a[0].data.allergy_type=="Drug"){e.hide(true);e.setDisabled(true);e.reset();c.show(true);c.setDisabled(false)}else{if(a[0].data.allergy_type==""||a[0].data.allergy_type==null){e.setDisabled(true);c.hide(true);c.setDisabled(true);e.show(true)}else{c.hide(true);c.setDisabled(true);e.show(true);e.setDisabled(false);e.reset();e.store.load({params:{allergy_type:a[0].data.allergy_type}})}}},setDefaults:function(a){var b;if(a.update){b=a.update[0].data;b.updated_uid=app.user.id}else{if(a.create){}}},cardSwitch:function(a){var c=this,b=c.getLayout(),d=c.down("toolbar").query('[action="AddRecord"]')[0],e=app.patient,f;c.pid=e.pid;d.show();if(a.action=="immunization"){b.setActiveItem(0);f="Immunizations"}else{if(a.action=="allergies"){b.setActiveItem(1);f="Allergies"}else{if(a.action=="issues"){b.setActiveItem(2);f="Medical Issues"}else{if(a.action=="surgery"){b.setActiveItem(3);f="Surgeries"}else{if(a.action=="dental"){b.setActiveItem(4);f="Dentals"}else{if(a.action=="medications"){b.setActiveItem(5);f="Medications"}else{if(a.action=="laboratories"){b.setActiveItem(6);f="Laboratories";d.hide()}}}}}}}c.setTitle(e.name+" ("+f+") "+(e.readOnly?'-  <span style="color:red">[Read Mode]</span>':""))},onMedicalWinShow:function(){var b=this,c=b.query('button[action="review"]'),d=app.patient;b.pid=d.pid;b.setTitle(d.name+(d.readOnly?' <span style="color:red">['+i18n.read_mode+"]</span>":""));b.setReadOnly(app.patient.readOnly);for(var a=0;a<c.length;a++){c[a].setVisible((app.patient.eid!=null))}b.labPanelsStore.load();b.patientImmuListStore.load({params:{pid:app.patient.pid}});b.patientAllergiesListStore.load({params:{pid:app.patient.pid}});b.patientMedicalIssuesStore.load({params:{pid:app.patient.pid}});b.patientSurgeryStore.load({params:{pid:app.patient.pid}});b.patientDentalStore.load({params:{pid:app.patient.pid}});b.patientMedicationsStore.load({params:{pid:app.patient.pid}})},onMedicalWinClose:function(){if(app.currCardCmp.id=="panelSummary"){app.currCardCmp.loadStores()}}});Ext.define("App.view.patient.windows.Charts",{extend:"Ext.window.Window",requires:["App.store.patient.Vitals"],title:i18n.vector_charts,layout:"card",closeAction:"hide",modal:true,width:window.innerWidth-200,height:window.innerHeight-200,maximizable:true,initComponent:function(){var a=this;a.vitalsStore=Ext.create("App.store.patient.Vitals");a.graphStore=Ext.create("App.store.patient.VectorGraph");a.WeightForAgeInfStore=Ext.create("App.store.patient.charts.WeightForAgeInf");a.LengthForAgeInfStore=Ext.create("App.store.patient.charts.LengthForAgeInf");a.WeightForRecumbentInfStore=Ext.create("App.store.patient.charts.WeightForRecumbentInf");a.HeadCircumferenceInfStore=Ext.create("App.store.patient.charts.HeadCircumferenceInf");a.WeightForStatureStore=Ext.create("App.store.patient.charts.WeightForStature");a.WeightForAgeStore=Ext.create("App.store.patient.charts.WeightForAge");a.StatureForAgeStore=Ext.create("App.store.patient.charts.StatureForAge");a.BMIForAgeStore=Ext.create("App.store.patient.charts.BMIForAge");a.tbar=["->",{text:i18n.bp_pulse_temp,action:"bpPulseTemp",pressed:true,enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.weight_for_age,action:"WeightForAgeInf",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.length_for_age,action:"LengthForAgeInf",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.weight_for_recumbent,action:"WeightForRecumbentInf",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.head_circumference,action:"HeadCircumferenceInf",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.weight_for_stature,action:"WeightForStature",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.weight_for_age,action:"WeightForAge",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.stature_for_age,action:"StatureForAge",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:i18n.bmi_for_age,action:"BMIForAge",enableToggle:true,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-"];a.tools=[{type:"print",tooltip:i18n.print_chart,handler:function(){console.log(this.up("window").down("chart"))}}];a.items=[Ext.create("App.view.patient.charts.BPPulseTemp",{store:a.vitalsStore}),a.WeightForAgeInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.weight_for_age_0_3_mos,xTitle:i18n.weight_kg,yTitle:i18n.age_months,xMinimum:1,xMaximum:19,yMinimum:0,yMaximum:36,store:a.WeightForAgeInfStore}),a.LengthForAgeInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.length_for_age_0_3_mos,xTitle:i18n.length_cm,yTitle:i18n.age_months,xMinimum:40,xMaximum:110,yMinimum:0,yMaximum:36,store:a.LengthForAgeInfStore}),a.WeightForRecumbentInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.weight_for_recumbent_0_3_mos,xTitle:i18n.weight_kg,yTitle:i18n.length_cm,xMinimum:1,xMaximum:20,yMinimum:45,yMaximum:103.5,store:a.WeightForRecumbentInfStore}),a.HeadCircumferenceInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.head_circumference_0_3_mos,xTitle:i18n.circumference_cm,yTitle:i18n.age_months,xMinimum:30,xMaximum:55,yMinimum:0,yMaximum:36,store:a.HeadCircumferenceInfStore}),a.WeightForStature=Ext.create("App.view.patient.charts.HeightForStature",{store:a.WeightForStatureStore}),a.WeightForAge=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.weight_for_age_2_20_years,xTitle:i18n.weight_kg,yTitle:i18n.age_years,xMinimum:10,xMaximum:110,yMinimum:2,yMaximum:20,store:a.WeightForAgeStore}),a.StatureForAge=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.stature_for_age_2_20_years,xTitle:i18n.stature_cm,yTitle:i18n.age_years,xMinimum:60,xMaximum:200,yMinimum:2,yMaximum:20,store:a.StatureForAgeStore}),a.BMIForAge=Ext.create("App.view.patient.charts.HeadCircumference",{title:i18n.bmi_for_age_2_20_years,xTitle:i18n.bmi_kg,yTitle:i18n.age_years,xMinimum:10,xMaximum:35,yMinimum:2,yMaximum:20,store:a.BMIForAgeStore})];a.listeners={scope:a,show:a.onWinShow};a.callParent(arguments)},onWinShow:function(){var e=this,d=e.getLayout(),c=e.down("toolbar").items.items,b;d.setActiveItem(0);e.vitalsStore.load({params:{pid:app.patient.pid}});for(var a=0;a<c.length;a++){b=c[a];if(b.type=="button"&&(b.action=="WeightForAgeInf"||b.action=="LengthForAgeInf"||b.action=="WeightForRecumbentInf"||b.action=="HeadCircumferenceInf")){b.setVisible(app.patient.age.DMY.years<2)}else{if(b.type=="button"){b.setVisible(app.patient.age.DMY.years>=2)}}}},onChartSwitch:function(c){var f=this,e=f.getLayout(),b,d,a,g;if(c.action=="bpPulseTemp"){e.setActiveItem(0)}else{if(c.action=="WeightForAgeInf"){e.setActiveItem(1);f.WeightForAgeInfStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="LengthForAgeInf"){e.setActiveItem(2);f.LengthForAgeInfStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="WeightForRecumbentInf"){e.setActiveItem(3);f.WeightForRecumbentInfStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="HeadCircumferenceInf"){e.setActiveItem(4);f.HeadCircumferenceInfStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="WeightForStature"){e.setActiveItem(5);f.WeightForStatureStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="WeightForAge"){e.setActiveItem(6);f.WeightForAgeStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="StatureForAge"){e.setActiveItem(7);f.StatureForAgeStore.load({params:{pid:app.patient.pid}})}else{if(c.action=="BMIForAge"){e.setActiveItem(8);f.BMIForAgeStore.load({params:{pid:app.patient.pid}})}}}}}}}}}}});Ext.define("App.view.patient.windows.PreventiveCare",{extend:"App.classes.window.Window",title:i18n.preventive_care_window,closeAction:"hide",height:750,width:1200,bodyStyle:"background-color:#fff",modal:true,layout:"fit",defaults:{margin:5},initComponent:function(){var a=this;a.patientPreventiveCare=Ext.create("App.store.patient.PreventiveCare",{groupField:"type",sorters:["type"],autoSync:true});a.grid=Ext.create("App.classes.GridPanel",{store:a.patientPreventiveCare,features:Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:i18n.type+": {name} ({rows.length} "+i18n.item+'{[values.rows.length > 1 ? "s" : ""]})',hideGroupedHeader:true,startCollapsed:true}),columns:[{header:i18n.type,dataIndex:"type",width:200},{header:i18n.description,dataIndex:"description",width:200},{header:i18n.reason,dataIndex:"reason",flex:1}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",name:"reason",fieldLabel:i18n.reason,width:585,labelWidth:70,disabled:true,allowBlank:false,action:"reason"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:i18n.observation,name:"observation",width:250,labelWidth:70,disabled:true,action:"observation"},{fieldLabel:i18n.date,xtype:"datefield",disabled:true,action:"date",width:200,labelWidth:40,format:"Y-m-d",name:"date"},{xtype:"checkboxfield",name:"dismiss",fieldLabel:i18n.dismiss_alert,enableKeyEvents:true,listeners:{scope:a,change:a.onChangeOption}},{xtype:"textfield",hidden:true,name:"eid",action:"eid"}]}]}]})});a.items=[a.grid];this.callParent(arguments)},onChangeOption:function(g,f){var d=this,e=g.up("form").query('[action="reason"]')[0],c=g.up("form").query('[action="date"]')[0],a=g.up("form").query('[action="eid"]')[0],b=g.up("form").query('[action="observation"]')[0];a.setValue(app.patient.eid);if(f){e.setDisabled(false);c.setDisabled(false);b.setDisabled(false)}else{if(!f){e.setDisabled(true);c.setDisabled(true);b.setDisabled(true)}else{e.setDisabled(true);c.setDisabled(true);b.setDisabled(true)}}},loadPatientPreventiveCare:function(){var a=this;this.patientPreventiveCare.load({scope:a,params:{pid:app.patient.pid},callback:function(c,b,d){if(c.length>0){a.show();return true}else{return false}}})}});Ext.define("App.view.patient.windows.NewDocuments",{extend:"App.classes.window.Window",title:i18n.order_window,layout:"fit",closeAction:"hide",height:750,width:1200,bodyStyle:"background-color:#fff",modal:true,defaults:{margin:5},pid:null,eid:null,initComponent:function(){var a=this;a.patientPrescriptionStore=Ext.create("App.store.patient.PatientsPrescription");a.patientsLabsOrdersStore=Ext.create("App.store.patient.PatientsLabsOrders");a.items=[a.tabPanel=Ext.create("Ext.tab.Panel",{items:[{title:i18n.new_lab_order,items:[{xtype:"grid",margin:10,store:a.patientsLabsOrdersStore,height:640,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onRemoveLabs}]},{header:i18n.lab,flex:1,dataIndex:"laboratories"}],bbar:{xtype:"mitos.labstypescombo",margin:5,fieldLabel:i18n.add,hideLabel:false,listeners:{scope:a,select:a.onAddLabs}}}],bbar:["->",{text:i18n.create,scope:a,handler:a.onCreateLabs},{text:i18n.cancel,scope:a,handler:a.onCancel}]},{title:i18n.new_xray_order,items:[{xtype:"grid",margin:10,store:a.patientPrescriptionStore,height:640,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onRemove}]},{header:i18n.medication,width:100,dataIndex:"medication"},{header:i18n.dispense,width:100,dataIndex:"dispense"},{header:i18n.refill,flex:1,dataIndex:"refill"}],bbar:{xtype:"textfield",margin:5,fieldLabel:i18n.add,hideLabel:false,listeners:{scope:a,select:a.addMedications}}}],bbar:["->",{text:i18n.create,scope:a,handler:a.Create},{text:i18n.cancel,scope:a,handler:a.onCancel}]},{title:i18n.new_prescription,items:[{xtype:"mitos.pharmaciescombo",fieldLabel:i18n.pharmacies,width:250,labelWidth:75,margin:"10 0 0 10"},{xtype:"grid",margin:10,store:a.patientPrescriptionStore,height:605,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onRemove}]},{header:i18n.medication,width:100,dataIndex:"medication"},{header:i18n.dispense,width:100,dataIndex:"dispense"},{header:i18n.refill,flex:1,dataIndex:"refill"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,listeners:{scope:a,edit:a.onEditPrescription},formItems:[{title:i18n.general,xtype:"container",layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"5 0 5 5"},items:[{xtype:"medicationlivetsearch",fieldLabel:i18n.medication,hideLabel:false,action:"medication",name:"medication",width:350,labelWidth:80,listeners:{scope:a,select:a.addPrescription}},{xtype:"textfield",hidden:true,name:"medication_id",action:"idField"},{xtype:"numberfield",fieldLabel:i18n.dose,labelWidth:40,action:"dose",name:"dose",width:100,value:0,minValue:0},{xtype:"textfield",fieldLabel:i18n.dose_mg,action:"dose_mg",name:"dose_mg",hideLabel:true,width:150}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"5 0 5 3"},items:[{xtype:"numberfield",fieldLabel:i18n.take,margin:"5 0 5 5",name:"take_pills",width:130,labelWidth:80,value:0,minValue:0},{xtype:"mitos.prescriptiontypes",fieldLabel:i18n.type,hideLabel:true,name:"type",width:120},{xtype:"mitos.prescriptionhowto",fieldLabel:i18n.route,name:"route",hideLabel:true,width:100},{xtype:"mitos.prescriptionoften",name:"prescription_often",width:120},{xtype:"mitos.prescriptionwhen",name:"prescription_when",width:100}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"5 0 5 5"},items:[{fieldLabel:i18n.dispense,xtype:"numberfield",name:"dispense",width:130,labelWidth:80,value:0,minValue:0},{fieldLabel:i18n.refill,xtype:"numberfield",name:"refill",labelWidth:35,width:140,value:0,minValue:0},{fieldLabel:i18n.begin_date,xtype:"datefield",width:190,labelWidth:70,format:"Y-m-d",name:"begin_date"},{fieldLabel:i18n.end_date,xtype:"datefield",width:180,labelWidth:60,format:"Y-m-d",name:"end_date"}]}]}]}),tbar:["->",{text:i18n.new_medication,scope:a,handler:a.onAddNewPrescription}]}],bbar:["->",{text:i18n.create,scope:a,handler:a.onCreatePrescription},{text:i18n.cancel,scope:a,handler:a.onCancel}]},{title:i18n.new_doctors_note,items:[{xtype:"mitos.templatescombo",fieldLabel:i18n.template,action:"template",width:250,labelWidth:75,margin:"10 0 0 10",enableKeyEvents:true,listeners:{scope:a,select:a.onTemplateTypeSelect}},{xtype:"htmleditor",name:"body",action:"body",itemId:"body",enableFontSize:false,height:605,width:1170,margin:5}],bbar:["->",{text:i18n.create,scope:a,handler:a.onCreateDoctorsNote},{text:i18n.cancel,scope:a,handler:a.onCancel}]}]})];a.listeners={scope:a,show:a.onDocumentsWinShow,hide:a.onDocumentsWinHide};a.callParent(arguments)},onTemplateTypeSelect:function(e,a){var b=this,d=e.up("panel").getComponent("body"),c=a[0].data.body;d.setValue(c)},cardSwitch:function(b){var a=this.tabPanel.getLayout();if(b=="lab"){a.setActiveItem(0)}else{if(b=="xRay"){a.setActiveItem(1)}else{if(b=="prescription"){a.setActiveItem(2)}else{if(b=="notes"){a.setActiveItem(3)}}}}},onAddNewPrescription:function(b){var a=b.up("grid");a.editingPlugin.cancelEdit();this.patientPrescriptionStore.insert(0,{});a.editingPlugin.startEdit(0,0)},onRemove:function(c,e){var d=this,b=c.getStore(),a=b.getAt(e);c.editingPlugin.cancelEdit();b.remove(a)},onRemoveLabs:function(c,e){var d=this,b=c.getStore(),a=b.getAt(e);b.remove(a)},addPrescription:function(c,f){var h=this,i=c.up("fieldcontainer").query('[action="dose"]')[0],e=c.up("fieldcontainer").query('[action="dose_mg"]')[0],d=c.up("fieldcontainer").query('[action="idField"]')[0],g=f[0].data.ACTIVE_NUMERATOR_STRENGTH,b=f[0].data.ACTIVE_INGRED_UNIT,a=f[0].data.id;i.setValue(g);e.setValue(b);d.setValue(a)},onEditPrescription:function(a,b){say(a);say(b.record.commit())},onCreatePrescription:function(){var a=this.patientPrescriptionStore.data.items,c=[];for(var b=0;b<a.length;b++){c.push(a[b].data)}DocumentHandler.createDocument({medications:c,pid:app.patient.pid,docType:"Rx",documentId:5,eid:app.patient.eid},function(e,d){say(d.result)});this.close()},onCreateLabs:function(){var a=this.patientsLabsOrdersStore.data.items,c=[];for(var b=0;b<a.length;b++){c.push(a[b].data)}DocumentHandler.createDocument({labs:c,pid:app.patient.pid,docType:"Orders",documentId:4,eid:app.patient.eid},function(e,d){say(d.result)});this.close()},onCreateDoctorsNote:function(d){var a=this,c=d.up("toolbar").up("panel").getComponent("body"),b=c.getValue();DocumentHandler.createDocument({DoctorsNote:b,pid:app.patient.pid,docType:"DoctorsNotes",eid:app.patient.eid},function(f,e){say(e.result)});this.close()},onCancel:function(){this.close()},addMedications:function(){},onAddLabs:function(b,a){this.patientsLabsOrdersStore.add({laboratories:a[0].data.loinc_name});b.reset()},onDocumentsWinShow:function(){var c=this,f=c.query('[action="body"]')[0],a=c.query('[action="template"]')[0],d=app.patient;c.pid=d.pid;c.setTitle(d.name+(d.readOnly?' - <span style="color:red">['+i18n.read_mode+"]</span>":""));c.setReadOnly(app.patient.readOnly);c.patientPrescriptionStore.removeAll();c.patientsLabsOrdersStore.removeAll();f.reset();a.reset();var b=this.tabPanel.getDockedItems()[0],e=this.eid!=null;b.items.items[0].setVisible(e);b.items.items[1].setVisible(e);b.items.items[2].setVisible(e);if(!e){c.cardSwitch("notes")}},onDocumentsWinHide:function(){if(app.currCardCmp.id=="panelSummary"){app.currCardCmp.patientDocumentsStore.load({params:{pid:this.pid}})}}});Ext.define("App.view.patient.windows.DocumentViewer",{extend:"App.classes.window.Window",title:i18n.documents_viewer_window,layout:"fit",height:650,width:700,closeAction:"hide",bodyStyle:"background-color:#fff",modal:true,defaults:{margin:5},initComponent:function(){var a=this;a.listeners={scope:a,show:a.onViewerDocumentsWinShow};a.callParent(arguments)},onViewerDocumentsWinShow:function(){}});Ext.define("App.view.patient.windows.ArrivalLog",{extend:"App.classes.window.Window",title:i18n.patient_arrival_log,closeAction:"hide",layout:"fit",modal:true,width:900,height:600,maximizable:true,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.PatientArrivalLog",{autoSync:true});a.tbar=[{xtype:"patienlivetsearch",fieldLabel:i18n.look_for_patient,width:400,hideLabel:false,enableKeyEvents:true,listeners:{scope:a,select:a.onPatientSearchSelect,keyup:a.onPatientSearchKeyUp}},"-",{text:i18n.add_new_patient,iconCls:"icoAddRecord",action:"newPatientBtn",disabled:true,scope:a,handler:a.onNewPatient},"->",{xtype:"tool",type:"refresh",scope:a,handler:a.onGridReload}];a.items=[a.ckGrid=Ext.create("Ext.grid.Panel",{store:a.store,margin:5,columns:[{xtype:"actioncolumn",width:25,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onPatientRemove}]},{header:i18n.time,dataIndex:"time",width:130},{header:i18n.record+" #",dataIndex:"pid"},{header:i18n.patient_name,dataIndex:"name",flex:1},{header:i18n.insurance,dataIndex:"insurance"},{header:i18n.area,dataIndex:"area"},{width:25,dataIndex:"warning",renderer:a.warnRenderer}],listeners:{scope:a,itemdblclick:a.onPatientDlbClick}})];a.listeners={scope:a,show:a.onWinShow};a.callParent(arguments)},onPatientSearchSelect:function(e,a){var d=this,b=d.query("grid")[0].getStore(),c=d.query('button[action="newPatientBtn"]')[0];b.add({pid:a[0].data.pid,name:a[0].data.fullname,time:Ext.Date.format(new Date(),"Y-m-d H:i:s"),isNew:false});e.reset();c.setDisabled(true)},onPatientSearchKeyUp:function(a){this.query('button[action="newPatientBtn"]')[0].setDisabled(a.getValue()==null)},onNewPatient:function(c){var d=this,e=d.query("patienlivetsearch")[0],b=e.getValue(),a=d.query("grid")[0].getStore();e.reset();c.disable();a.add({name:b,time:Ext.Date.format(new Date(),"Y-m-d H:i:s"),isNew:true})},onPatientRemove:function(c,e){var b=c.getStore(),d=this,a=b.getAt(e);Encounter.checkForAnOpenedEncounterByPid({pid:a.data.pid,date:Ext.Date.format(new Date(),"Y-m-d H:i:s")},function(g,f){if(f.result){d.msg("Oops!",i18n.patient_have_a_opened_encounter)}else{d.msg("Sweet!",i18n.patient_have_been_removed);b.remove(a)}})},onPatientDlbClick:function(b,a){var c=this,d=a.data;app.setPatient(d.pid,d.name,function(){app.openPatientSummary()});c.close()},onGridReload:function(){this.store.load()},onWinShow:function(){var a=this;a.onGridReload();new Ext.util.DelayedTask(function(){a.query("patienlivetsearch")[0].focus()}).delay(1000)}});Ext.define("App.view.dashboard.panel.PortalColumn",{extend:"Ext.container.Container",alias:"widget.portalcolumn",requires:["Ext.layout.container.Anchor","App.view.dashboard.panel.Portlet"],layout:"anchor",defaultType:"portlet",cls:"x-portal-column"});Ext.define("App.view.dashboard.panel.PortalDropZone",{extend:"Ext.dd.DropTarget",constructor:function(a,b){this.portal=a;Ext.dd.ScrollManager.register(a.body);App.view.dashboard.panel.PortalDropZone.superclass.constructor.call(this,a.body,b);a.body.ddScrollConfig=this.ddScrollConfig},ddScrollConfig:{vthresh:50,hthresh:-1,animate:true,increment:200},createEvent:function(a,f,d,b,h,g){return{portal:this.portal,panel:d.panel,columnIndex:b,column:h,position:g,data:d,source:a,rawEvent:f,status:this.dropAllowed}},notifyOver:function(u,t,v){var d=t.getXY(),a=this.portal,p=u.proxy;if(!this.grid){this.grid=this.getGrid()}var b=a.body.dom.clientWidth;if(!this.lastCW){this.lastCW=b}else{if(this.lastCW!=b){this.lastCW=b;this.grid=this.getGrid()}}var o=0,c=0,n=this.grid.columnX,q=n.length,m=false;for(q;o<q;o++){c=n[o].x+n[o].w;if(d[0]<c){m=true;break}}if(!m){o--}var i,g=0,r=0,l=false,k=a.items.getAt(o),s=k.items.items,j=false;q=s.length;for(q;g<q;g++){i=s[g];r=i.el.getHeight();if(r===0){j=true}else{if((i.el.getY()+(r/2))>d[1]){l=true;break}}}g=(l&&i?g:k.items.getCount())+(j?-1:0);var f=this.createEvent(u,t,v,o,k,g);if(a.fireEvent("validatedrop",f)!==false&&a.fireEvent("beforedragover",f)!==false){p.getProxy().setWidth("auto");if(i){u.panelProxy.moveProxy(i.el.dom.parentNode,l?i.el.dom:null)}else{u.panelProxy.moveProxy(k.el.dom,null)}this.lastPos={c:k,col:o,p:j||(l&&i)?g:false};this.scrollPos=a.body.getScroll();a.fireEvent("dragover",f);return f.status}else{return f.status}},notifyOut:function(){delete this.grid},notifyDrop:function(l,h,g){delete this.grid;if(!this.lastPos){return}var j=this.lastPos.c,f=this.lastPos.col,k=this.lastPos.p,a=l.panel,b=this.createEvent(l,h,g,f,j,k!==false?k:j.items.getCount());if(this.portal.fireEvent("validatedrop",b)!==false&&this.portal.fireEvent("beforedrop",b)!==false){Ext.suspendLayouts();a.el.dom.style.display="";l.panelProxy.hide();l.proxy.hide();if(k!==false){j.insert(k,a)}else{j.add(a)}Ext.resumeLayouts(true);this.portal.fireEvent("drop",b);var m=this.scrollPos.top;if(m){var i=this.portal.body.dom;setTimeout(function(){i.scrollTop=m},10)}}delete this.lastPos;return true},getGrid:function(){var a=this.portal.body.getBox();a.columnX=[];this.portal.items.each(function(b){a.columnX.push({x:b.el.getX(),w:b.el.getWidth()})});return a},unreg:function(){Ext.dd.ScrollManager.unregister(this.portal.body);App.view.dashboard.panel.PortalDropZone.superclass.unreg.call(this)}});Ext.define("App.view.dashboard.panel.PortalPanel",{extend:"Ext.panel.Panel",alias:"widget.portalpanel",requires:["Ext.layout.container.Column","App.view.dashboard.panel.PortalDropZone","App.view.dashboard.panel.PortalColumn"],cls:"x-portal",bodyCls:"x-portal-body",defaultType:"portalcolumn",componentLayout:"body",autoScroll:true,manageHeight:false,initComponent:function(){var a=this;this.layout={type:"column"};this.callParent();this.addEvents({validatedrop:true,beforedragover:true,dragover:true,beforedrop:true,drop:true})},beforeLayout:function(){var c=this.layout.getLayoutItems(),b=c.length,a=["x-portal-column-first","x-portal-column-last"],d,f,e;for(d=0;d<b;d++){f=c[d];f.columnWidth=1/b;e=(d==b-1);if(!d){if(e){f.addCls(a)}else{f.addCls("x-portal-column-first");f.removeCls("x-portal-column-last")}}else{if(e){f.addCls("x-portal-column-last");f.removeCls("x-portal-column-first")}else{f.removeCls(a)}}}return this.callParent(arguments)},initEvents:function(){this.callParent();this.dd=Ext.create("App.view.dashboard.panel.PortalDropZone",this,this.dropConfig)},beforeDestroy:function(){if(this.dd){this.dd.unreg()}this.callParent()}});Ext.define("App.view.dashboard.panel.OnotesPortlet",{extend:"Ext.grid.Panel",alias:"widget.onotesportlet",height:250,initComponent:function(){var a=this;Ext.define("OnotesPortletModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"date",type:"date",dateFormat:"c"},{name:"body",type:"string"},{name:"user",type:"string"},{name:"facility_id",type:"string"},{name:"activity",type:"string"}],proxy:{type:"direct",api:{read:OfficeNotes.getOfficeNotes}}});a.store=Ext.create("Ext.data.Store",{model:"OnotesPortletModel",autoLoad:true});Ext.apply(this,{height:this.height,store:this.store,stripeRows:true,columnLines:true,columns:[{id:"user",text:"From",sortable:true,dataIndex:"user"},{text:"Note",sortable:true,dataIndex:"body",flex:1}]},null);this.callParent(arguments)}});Ext.define("App.view.dashboard.panel.VisitsPortlet",{extend:"Ext.panel.Panel",initComponent:function(){Ext.apply(this,{layout:"fit",width:300,height:250,items:{xtype:"chart",animate:false,shadow:false,store:Ext.create("App.store.patient.Encounters"),axes:[{type:"Numeric",position:"left",fields:["djia"],title:"Visits",label:{font:"11px Arial"}},{type:"Numeric",position:"bottom",grid:false,fields:["sp500"],title:"Day",label:{font:"11px Arial"}}],series:[{type:"column",axis:"left",highlight:true,tips:{trackMouse:true,width:140,height:28,renderer:function(b,a){this.setTitle(b.get("name")+": "+b.get("data1")+" $")}},label:{display:"insideEnd","text-anchor":"middle",field:"data1",renderer:Ext.util.Format.numberRenderer("0"),orientation:"vertical",color:"#333"},xField:"name",yField:"data1"}]}},null);this.callParent(arguments)}});Ext.define("App.view.dashboard.Dashboard",{extend:"App.classes.RenderPanel",id:"panelDashboard",pageTitle:i18n.dashboard,getTools:function(){return[{xtype:"tool",type:"gear",handler:function(c,b,a){var d=a.ownerCt;d.setLoading(i18n.working+"...");Ext.defer(function(){d.setLoading(false)},2000)}}]},initComponent:function(){var a='<div class="portlet-content">HELLO WORLD!</div>';Ext.apply(this,{pageBody:[{xtype:"portalpanel",layout:"fit",region:"center",items:[{id:"col-1",items:[{title:i18n.office_notes,tools:this.getTools(),items:Ext.create("App.view.dashboard.panel.OnotesPortlet"),listeners:{close:Ext.bind(this.onPortletClose,this)}}]},{items:[{title:"Office Visits",tools:this.getTools(),items:Ext.create("App.view.dashboard.panel.VisitsPortlet"),listeners:{close:Ext.bind(this.onPortletClose,this)}}]}]}]},null);this.callParent()},onPortletClose:function(a){this.msg(i18n.message+"!",a.title+" "+i18n.was_removed)},onActive:function(a){a(true)}});Ext.define("Extensible",{singleton:true,version:"1.5.1",versionDetails:{major:1,minor:5,patch:1},extVersion:"4.0.1",hasBorderRadius:Ext.supports.CSS3BorderRadius,log:function(a){},getScrollWidth:function(){return Ext.getScrollbarSize?Ext.getScrollbarSize().width:Ext.getScrollBarWidth()},constructor:function(){Ext.onReady(function(){if(Extensible.getScrollWidth()<3){Ext.getBody().addCls("x-no-scrollbar")}if(Ext.isWindows){Ext.getBody().addCls("x-win")}var a=Ext.getVersion();if(a.isLessThan("4.1")){Ext.getBody().addCls("x-4-0")}})},Date:{use24HourTime:false,diff:function(e,a,c){var b=1,d=a.getTime()-e.getTime();if(c==="s"||c==="seconds"){b=1000}else{if(c==="m"||c==="minutes"){b=1000*60}else{if(c==="h"||c==="hours"){b=1000*60*60}}}return Math.round(d/b)},diffDays:function(e,b){var c=1000*60*60*24,a=Ext.Date.clearTime,d=a(b,true).getTime()-a(e,true).getTime();return Math.ceil(d/c)},copyTime:function(c,b){var a=Ext.Date.clone(b);a.setHours(c.getHours(),c.getMinutes(),c.getSeconds(),c.getMilliseconds());return a},compare:function(c,b,a){var e=c,d=b;if(a!==true){e=Ext.Date.clone(c);e.setMilliseconds(0);d=Ext.Date.clone(b);d.setMilliseconds(0)}return d.getTime()-e.getTime()},maxOrMin:function(a){var e=a?0:Number.MAX_VALUE,c=0,b=arguments[1],d=b.length;for(;c<d;c++){e=Math[a?"max":"min"](e,b[c].getTime())}return new Date(e)},max:function(){return this.maxOrMin.apply(this,[true,arguments])},min:function(){return this.maxOrMin.apply(this,[false,arguments])},isInRange:function(a,c,b){return(a>=c&&a<=b)},rangesOverlap:function(f,b,e,a){var c=(f>=e&&f<=a),d=(b>=e&&b<=a),g=(f<=e&&b>=a);return(c||d||g)},isWeekend:function(a){return a.getDay()%6===0},isWeekday:function(a){return a.getDay()%6!==0},isMidnight:function(a){return a.getHours()===0&&a.getMinutes()===0},isToday:function(a){return this.diffDays(a,this.today())===0},today:function(){return Ext.Date.clearTime(new Date())},add:function(c,d){if(!d){return c}var b=Ext.Date,a=b.add,e=b.clone(c);if(d.years){e=a(e,b.YEAR,d.years)}if(d.months){e=a(e,b.MONTH,d.months)}if(d.weeks){d.days=(d.days||0)+(d.weeks*7)}if(d.days){e=a(e,b.DAY,d.days)}if(d.hours){e=a(e,b.HOUR,d.hours)}if(d.minutes){e=a(e,b.MINUTE,d.minutes)}if(d.seconds){e=a(e,b.SECOND,d.seconds)}if(d.millis){e=a(e,b.MILLI,d.millis)}return d.clearTime?b.clearTime(e):e},clearTime:function(a,b){return Ext.Date.clearTime(a,b)}}});Ext.require(["Ext.picker.Color","Ext.form.Basic","Ext.data.proxy.Memory"]);Extensible.applyOverrides=function(){Ext.DomHelper=Ext.core.DomHelper;var a=Ext.getVersion();if(Ext.layout.container.AbstractCard){Ext.layout.container.AbstractCard.override({renderChildren:function(){if(!this.deferredRender){this.getActiveItem();this.callParent()}}})}Ext.Component.override({getId:function(){var b=this,c;if(!b.id){c=b.getXType();c=c?c.replace(/[\.,\s]/g,"-"):"ext-comp";b.id=c+"-"+b.getAutoId()}return b.id}});if(Ext.picker&&Ext.picker.Color){Ext.picker.Color.override({constructor:function(){this.renderTpl=this.renderTpl||Ext.create("Ext.XTemplate",'<tpl for="colors"><a href="#" class="color-{.}" hidefocus="on"><em><span style="background:#{.}" unselectable="on">&#160;</span></em></a></tpl>');this.callParent(arguments)}})}if(a.isLessThan("4.1")){if(Ext.data&&Ext.data.reader&&Ext.data.reader.Reader){Ext.data.reader.Reader.override({extractData:function(k){var j=this,l=[],f=[],e=j.model,g=0,c=k.length,m=j.getIdProperty(),d,b,h;if(!k.length&&Ext.isObject(k)){k=[k];c=1}for(;g<c;g++){d=k[g];l=j.extractValues(d);b=j.getId(l);h=new e(l,b,d);f.push(h);if(j.implicitIncludes){j.readAssociated(h,d)}}return f}})}}if(Ext.form&&Ext.form.Basic){Ext.form.Basic.override({reset:function(){var b=this;b.getFields().each(function(c){c.reset()});return b}})}if(Ext.data&&Ext.data.proxy&&Ext.data.proxy.Memory){Ext.data.proxy.Memory.override({updateOperation:function(b,d,c){Ext.each(b.records,function(e){e.commit()});b.setCompleted();b.setSuccessful();Ext.callback(d,c||this,[b])},create:function(){this.updateOperation.apply(this,arguments)},update:function(){this.updateOperation.apply(this,arguments)},destroy:function(){this.updateOperation.apply(this,arguments)}})}if(a.isLessThan("4.1")&&Ext.form&&Ext.form.CheckboxGroup){Ext.form.CheckboxGroup.override({resetOriginalValue:function(){var b=this;b.eachBox(function(c){c.resetOriginalValue()});b.originalValue=b.getValue();b.checkDirty()}})}};Ext.onReady(Extensible.applyOverrides);Ext.define("Extensible.lang.Number",{statics:{getOrdinalSuffix:function(a){if(!Ext.isNumber(a)){return""}switch(a){case 1:case 21:case 31:return"st";case 2:case 22:return"nd";case 3:case 23:return"rd";default:return"th"}}}},function(){Extensible.Number=Extensible.lang.Number});Ext.define("Extensible.data.Model",{extend:"Ext.data.Model",requires:["Ext.util.MixedCollection"],mappingClass:null,mappingIdProperty:null,inheritableStatics:{reconfigure:function(){var e=this.prototype,g=Ext.ClassManager.get(e.mappingClass||""),c=e.mappingIdProperty,f,b=[],d=0,a=0;if(!g){throw"The mappingClass for "+this.$className+" is undefined or invalid"}e.idProperty=c||e.idProperty||"id";for(f in g){if(g.hasOwnProperty(f)){b.push(g[f])}}e.fields.clear();a=b.length;for(;d<a;d++){e.fields.add(Ext.create("Ext.data.Field",b[d]))}return this}},clone:function(b){var c=Ext.create(this.$className),a=this.persistenceProperty;c[a]=Ext.Object.merge({},this[a]);if(b!==true){delete c[a][this.idProperty]}return c}});Ext.define("Extensible.form.recurrence.AbstractOption",{extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},layout:"hbox",defaults:{margins:"0 5 0 0"},key:undefined,dateValueFormat:"Ymd\\THis\\Z",optionDelimiter:";",initComponent:function(){var a=this;a.addEvents("change");a.startDate=a.startDate||new Date();a.items=a.getItemConfigs();a.callParent(arguments);a.initRefs();a.initField()},formatDate:function(a){return Ext.Date.format(a,this.dateValueFormat)},parseDate:function(d,b){b=b||{};try{var a=Ext.Date.parse(d,b.format||this.dateValueFormat,b.strict);if(a){return a}}catch(c){}return b.defaultValue||new Date()},afterRender:function(){this.callParent(arguments);this.updateLabel()},initRefs:Ext.emptyFn,setFrequency:function(a){this.frequency=a},setStartDate:function(a){this.startDate=a;return this},getStartDate:function(){return this.startDate||Extensible.Date.today()},getDefaultValue:function(){return""},preSetValue:function(b,a){var c=this;if(!b){b=c.getDefaultValue()}if(!a){c.on("afterrender",function(){c.setValue(b)},c,{single:true});return false}c.value=b;return true}});Ext.define("Extensible.form.recurrence.option.Duration",{extend:"Extensible.form.recurrence.AbstractOption",alias:"widget.extensible.recurrence-duration",requires:["Ext.form.Label","Ext.form.field.ComboBox","Ext.form.field.Number","Ext.form.field.Date"],minOccurrences:1,maxOccurrences:999,defaultEndDateOffset:5,minDateOffset:1,maxEndDate:new Date("12/31/9999"),endDateWidth:120,cls:"extensible-recur-duration",getItemConfigs:function(){var b=this,a=b.getStartDate();return[{xtype:"label",text:"and continuing"},{xtype:"combo",itemId:b.id+"-duration-combo",mode:"local",width:85,triggerAction:"all",forceSelection:true,value:"forever",store:["forever","for","until"],listeners:{change:Ext.bind(b.onComboChange,b)}},{xtype:"datefield",itemId:b.id+"-duration-date",showToday:false,width:b.endDateWidth,format:b.endDateFormat||Ext.form.field.Date.prototype.format,maxValue:b.maxEndDate,allowBlank:false,hidden:true,minValue:Ext.Date.add(a,Ext.Date.DAY,b.minDateOffset),value:b.getDefaultEndDate(a),listeners:{change:Ext.bind(b.onEndDateChange,b)}},{xtype:"numberfield",itemId:b.id+"-duration-num",value:5,width:55,minValue:b.minOccurrences,maxValue:b.maxOccurrences,allowBlank:false,hidden:true,listeners:{change:Ext.bind(b.onOccurrenceCountChange,b)}},{xtype:"label",itemId:b.id+"-duration-num-label",text:"occurrences",hidden:true}]},initRefs:function(){var a=this;a.untilCombo=a.down("#"+a.id+"-duration-combo");a.untilDateField=a.down("#"+a.id+"-duration-date");a.untilNumberField=a.down("#"+a.id+"-duration-num");a.untilNumberLabel=a.down("#"+a.id+"-duration-num-label")},onComboChange:function(b,a){this.toggleFields(a);this.checkChange()},toggleFields:function(a){var b=this;b.untilCombo.setValue(a);if(a==="until"){if(!b.untilDateField.getValue()){b.initUntilDate()}b.untilDateField.show()}else{b.untilDateField.hide();b.untilDateIsSet=false}if(a==="for"){b.untilNumberField.show();b.untilNumberLabel.show()}else{b.untilNumberField.hide();b.untilNumberLabel.hide()}},onOccurrenceCountChange:function(c,b,a){this.checkChange()},onEndDateChange:function(c,b,a){this.checkChange()},setStartDate:function(b){var a=this,c=a.getValue();if(b.getTime()!==a.startDate.getTime()){a.callParent(arguments);a.untilDateField.setMinValue(b);if(!c||a.untilDateField.getValue()<b){a.initUntilDate(b)}}return a},setFrequency:function(){this.callParent(arguments);this.initUntilDate();return this},initUntilDate:function(a){if(!this.untilDateIsSet){this.untilDateIsSet=true;var b=this.getDefaultEndDate(a||this.getStartDate());this.untilDateField.setValue(b)}return this},getDefaultEndDate:function(a){var b={},c;switch(this.frequency){case"WEEKLY":case"WEEKDAYS":c="weeks";break;case"MONTHLY":c="months";break;case"YEARLY":c="years";break;default:c="days"}b[c]=this.defaultEndDateOffset;return Extensible.Date.add(a,b)},getValue:function(){var a=this;if(a.untilCombo){if(a.untilNumberField.isVisible()){return"COUNT="+a.untilNumberField.getValue()}else{if(a.untilDateField.isVisible()){return"UNTIL="+a.formatDate(this.adjustUntilDateValue(a.untilDateField.getValue()))}}}return""},adjustUntilDateValue:function(a){return Extensible.Date.add(a,{days:1,seconds:-1})},setValue:function(a){var c=this;if(!c.preSetValue(a,c.untilCombo)){return c}if(!a){c.toggleFields("forever");return c}var b=Ext.isArray(a)?a:a.split(c.optionDelimiter),e=false,d;Ext.each(b,function(f){d=f.split("=");if(d[0]==="COUNT"){c.untilNumberField.setValue(d[1]);c.toggleFields("for");e=true;return}else{if(d[0]==="UNTIL"){c.untilDateField.setValue(c.parseDate(d[1]));c.untilDateField.validate();c.toggleFields("until");e=true;return}}},c);if(!e){c.toggleFields("forever")}return c}});Ext.define("Extensible.form.recurrence.option.Interval",{extend:"Extensible.form.recurrence.AbstractOption",alias:"widget.extensible.recurrence-interval",dateLabelFormat:"l, F j",unit:"day",minValue:1,maxValue:999,cls:"extensible-recur-interval",getItemConfigs:function(){var a=this;return[{xtype:"label",text:"Repeat every"},{xtype:"numberfield",itemId:a.id+"-interval",value:1,width:55,minValue:a.minValue,maxValue:a.maxValue,allowBlank:false,enableKeyEvents:true,listeners:{change:Ext.bind(a.onIntervalChange,a)}},{xtype:"label",itemId:a.id+"-date-label"}]},initRefs:function(){var a=this;a.intervalField=a.down("#"+a.id+"-interval");a.dateLabel=a.down("#"+a.id+"-date-label")},onIntervalChange:function(c,b,a){this.checkChange();this.updateLabel()},getValue:function(){if(this.intervalField){return"INTERVAL="+this.intervalField.getValue()}return""},setValue:function(a){var c=this;if(!c.preSetValue(a,c.intervalField)){return c}if(!a){c.intervalField.setValue(c.minValue);return c}var b=Ext.isArray(a)?a:a.split(c.optionDelimiter),d;Ext.each(b,function(e){d=e.split("=");if(d[0]==="INTERVAL"){c.intervalField.setValue(d[1]);c.updateLabel();return}},c);return c},setStartDate:function(a){this.startDate=a;this.updateLabel();return this},setUnit:function(a){this.unit=a;this.updateLabel();return this},updateLabel:function(c){var b=this;if(b.intervalField){var a=b.intervalField.getValue()===1?"":"s";b.unit=c?c.toLowerCase():b.unit||"day";if(b.dateLabel){b.dateLabel.update(b.unit+a+" beginning "+Ext.Date.format(b.getStartDate(),b.dateLabelFormat))}}return b}});Ext.define("Extensible.form.recurrence.option.Monthly",{extend:"Extensible.form.recurrence.AbstractOption",alias:"widget.extensible.recurrence-monthly",requires:["Ext.form.field.ComboBox","Extensible.lang.Number"],cls:"extensible-recur-monthly",nthComboWidth:150,unit:"month",afterRender:function(){this.callParent(arguments);this.isYearly=(this.unit==="year");this.initNthCombo()},getItemConfigs:function(){return[{xtype:"label",text:"on the"},{xtype:"combobox",itemId:this.id+"-nth-combo",queryMode:"local",width:this.nthComboWidth,triggerAction:"all",forceSelection:true,displayField:"text",valueField:"value",store:Ext.create("Ext.data.ArrayStore",{fields:["text","value"],idIndex:0,data:[]}),listeners:{change:Ext.bind(this.onComboChange,this)}},{xtype:"label",text:"of each "+this.unit}]},initRefs:function(){this.nthCombo=this.down("#"+this.id+"-nth-combo")},onComboChange:function(b,a){this.checkChange()},setStartDate:function(a){if(a.getTime()!==this.startDate.getTime()){this.callParent(arguments);this.initNthCombo()}return this},initNthCombo:function(){if(!this.rendered){return}var j=this,f=j.nthCombo,m=f.store,d=j.getStartDate(),o=Ext.Date.getLastDateOfMonth(d).getDate(),i=Ext.Date.format(d,"jS")+" day",e=d.getDate(),a=Math.ceil(e/7),n=Ext.Date.format(d,"D").substring(0,2).toUpperCase(),c=a+Extensible.Number.getOrdinalSuffix(a)+Ext.Date.format(d," l"),k=j.isYearly?" in "+Ext.Date.format(d,"F"):"",g=j.isYearly?"BYMONTH="+Ext.Date.format(d,"n"):"",b=j.isYearly?j.optionDelimiter:"",h=[[i+k,j.isYearly?g:"BYMONTHDAY="+e],[c+k,g+b+"BYDAY="+a+n]],l=m.find("value",f.getValue());if(o-e<7){h.push(["last "+Ext.Date.format(d,"l")+k,g+b+"BYDAY=-1"+n])}if(o===e){h.push(["last day"+k,g+b+"BYMONTHDAY=-1"])}m.removeAll();f.clearValue();m.loadData(h);if(l>h.length-1){l=h.length-1}f.setValue(m.getAt(l>-1?l:0).data.value);return j},getValue:function(){var a=this;if(a.nthCombo){return a.nthCombo.getValue()}return""},setValue:function(c){var e=this;if(!e.preSetValue(c,e.nthCombo)){return e}if(!c){var a=e.nthCombo.store.getAt(0);if(a){e.nthCombo.setValue(a.data.value)}return e}var d=Ext.isArray(c)?c:c.split(e.optionDelimiter),f,b=[];Ext.each(d,function(g){f=g.split("=");if(f[0]==="BYMONTH"){b.unshift(g)}if(f[0]==="BYMONTHDAY"||f[0]==="BYDAY"){b.push(g)}},e);if(b.length){e.nthCombo.setValue(b.join(e.optionDelimiter))}return e}});Ext.define("Extensible.form.recurrence.option.Weekly",{extend:"Extensible.form.recurrence.AbstractOption",alias:"widget.extensible.recurrence-weekly",requires:["Ext.form.field.Checkbox","Ext.form.CheckboxGroup"],dayValueDelimiter:",",cls:"extensible-recur-weekly",getItemConfigs:function(){var a=this.id;return[{xtype:"label",text:"on:"},{xtype:"checkboxgroup",itemId:a+"-days",flex:1,items:[{boxLabel:"Sun",name:"SU",id:a+"-SU"},{boxLabel:"Mon",name:"MO",id:a+"-MO"},{boxLabel:"Tue",name:"TU",id:a+"-TU"},{boxLabel:"Wed",name:"WE",id:a+"-WE"},{boxLabel:"Thu",name:"TH",id:a+"-TH"},{boxLabel:"Fri",name:"FR",id:a+"-FR"},{boxLabel:"Sat",name:"SA",id:a+"-SA"}],listeners:{change:Ext.bind(this.onSelectionChange,this)}}]},initValue:function(){this.callParent(arguments);if(!this.value){this.selectByDate()}},initRefs:function(){this.daysCheckboxGroup=this.down("#"+this.id+"-days")},onSelectionChange:function(c,b,a){this.checkChange();this.updateLabel()},selectByDate:function(b){var a=Ext.Date.format(b||this.getStartDate(),"D").substring(0,2).toUpperCase();this.setValue("BYDAY="+a)},clearValue:function(){this.value=undefined;if(this.daysCheckboxGroup){this.daysCheckboxGroup.setValue({SU:0,MO:0,TU:0,WE:0,TH:0,FR:0,SA:0})}},getValue:function(){var a=this;if(a.daysCheckboxGroup){var c=a.daysCheckboxGroup.getValue(),d=[],b;for(b in c){if(c.hasOwnProperty(b)){d.push(b)}}return d.length>0?"BYDAY="+d.join(a.dayValueDelimiter):""}return""},setValue:function(a){var c=this;if(!c.preSetValue(a,c.daysCheckboxGroup)){return c}if(!a){c.daysCheckboxGroup.setValue(null);return c}var b=Ext.isArray(a)?a:a.split(c.optionDelimiter),e={},d,f;Ext.each(b,function(g){d=g.split("=");if(d[0]==="BYDAY"){f=d[1].split(c.dayValueDelimiter);Ext.each(f,function(h){e[h]=true},c);c.daysCheckboxGroup.setValue(e);return}},c);return c}});Ext.define("Extensible.form.recurrence.option.Yearly",{extend:"Extensible.form.recurrence.option.Monthly",alias:"widget.extensible.recurrence-yearly",cls:"extensible-recur-yearly",nthComboWidth:200,unit:"year"});Ext.define("Extensible.form.recurrence.FrequencyCombo",{extend:"Ext.form.ComboBox",alias:"widget.extensible.recurrence-frequency",requires:["Ext.data.ArrayStore"],fieldLabel:"Repeats",queryMode:"local",triggerAction:"all",forceSelection:true,displayField:"pattern",valueField:"id",cls:"extensible-recur-frequency",frequencyText:{none:"Does not repeat",daily:"Daily",weekdays:"Every weekday (Mon-Fri)",weekly:"Weekly",monthly:"Monthly",yearly:"Yearly"},initComponent:function(){var a=this;a.addEvents("frequencychange");a.frequencyOptions=a.frequencyOptions||[["NONE",a.frequencyText.none],["DAILY",a.frequencyText.daily],["WEEKDAYS",a.frequencyText.weekdays],["WEEKLY",a.frequencyText.weekly],["MONTHLY",a.frequencyText.monthly],["YEARLY",a.frequencyText.yearly]];a.store=a.store||Ext.create("Ext.data.ArrayStore",{fields:["id","pattern"],idIndex:0,data:a.frequencyOptions});a.on("select",a.onSelect,a);a.callParent(arguments)},onSelect:function(b,a){this.fireEvent("frequencychange",a[0].data.id)}});Ext.define("Extensible.form.recurrence.Fieldset",{extend:"Ext.form.FieldContainer",alias:"widget.extensible.recurrencefield",mixins:{field:"Ext.form.field.Field"},requires:["Ext.form.Label","Extensible.form.recurrence.FrequencyCombo","Extensible.form.recurrence.option.Interval","Extensible.form.recurrence.option.Weekly","Extensible.form.recurrence.option.Monthly","Extensible.form.recurrence.option.Yearly","Extensible.form.recurrence.option.Duration"],options:["daily","weekly","weekdays","monthly","yearly"],displayStyle:"field",fieldLabel:"Repeats",fieldContainerWidth:400,startDate:Ext.Date.clearTime(new Date()),monitorChanges:true,cls:"extensible-recur-field",frequencyWidth:null,layout:"anchor",defaults:{anchor:"100%"},initComponent:function(){var a=this;if(!a.height||a.displayStyle==="field"){delete a.height;a.autoHeight=true}a.items=[{xtype:"extensible.recurrence-frequency",hideLabel:true,width:this.frequencyWidth,itemId:this.id+"-frequency",listeners:{frequencychange:{fn:this.onFrequencyChange,scope:this}}},{xtype:"container",itemId:this.id+"-inner-ct",cls:"extensible-recur-inner-ct",autoHeight:true,layout:"anchor",hideMode:"offsets",hidden:true,width:this.fieldContainerWidth,defaults:{hidden:true},items:[{xtype:"extensible.recurrence-interval",itemId:this.id+"-interval"},{xtype:"extensible.recurrence-weekly",itemId:this.id+"-weekly"},{xtype:"extensible.recurrence-monthly",itemId:this.id+"-monthly"},{xtype:"extensible.recurrence-yearly",itemId:this.id+"-yearly"},{xtype:"extensible.recurrence-duration",itemId:this.id+"-duration"}]}];a.callParent(arguments);a.initField()},afterRender:function(){this.callParent(arguments);this.initRefs()},initRefs:function(){var a=this,b=a.id;a.innerContainer=a.down("#"+b+"-inner-ct");a.frequencyCombo=a.down("#"+b+"-frequency");a.intervalField=a.down("#"+b+"-interval");a.weeklyField=a.down("#"+b+"-weekly");a.monthlyField=a.down("#"+b+"-monthly");a.yearlyField=a.down("#"+b+"-yearly");a.durationField=a.down("#"+b+"-duration");a.initChangeEvents()},initChangeEvents:function(){var a=this;a.intervalField.on("change",a.onChange,a);a.weeklyField.on("change",a.onChange,a);a.monthlyField.on("change",a.onChange,a);a.yearlyField.on("change",a.onChange,a);a.durationField.on("change",a.onChange,a)},onChange:function(){this.fireEvent("change",this,this.getValue())},onFrequencyChange:function(a){this.setFrequency(a);this.onChange()},initValue:function(){var a=this;a.originalValue=a.lastValue=a.value;a.suspendCheckChange++;a.setStartDate(a.startDate);if(a.value!==undefined){a.setValue(a.value)}else{if(a.frequency!==undefined){a.setValue("FREQ="+a.frequency)}else{a.setValue("")}}a.suspendCheckChange--;Ext.defer(a.doLayout,1,a);a.onChange()},setStartDate:function(b){var a=this;a.startDate=b;if(a.innerContainer){a.innerContainer.items.each(function(c){if(c.setStartDate){c.setStartDate(b)}})}else{a.on("afterrender",function(){a.setStartDate(b)},a,{single:true})}return a},getStartDate:function(){return this.startDate},isRecurring:function(){return this.getValue()!==""},getValue:function(){if(!this.innerContainer){return this.value}if(this.frequency==="NONE"){return""}var a,b;if(this.frequency==="WEEKDAYS"){a=["FREQ=WEEKLY","BYDAY=MO,TU,WE,TH,FR"]}else{a=["FREQ="+this.frequency]}this.innerContainer.items.each(function(c){if(c.isVisible()&&c.getValue){b=c.getValue();if(this.includeItemValue(b)){a.push(b)}}},this);return a.length>1?a.join(";"):a[0]},includeItemValue:function(b){if(b){if(b==="INTERVAL=1"){return false}var a=Ext.Date.format(this.startDate,"D").substring(0,2).toUpperCase();if(b===("BYDAY="+a)){return false}return true}return false},getDescription:function(){var a=this.getValue(),b="";return"Friendly text : "+b},setValue:function(b){var a=this;a.value=(!b||b==="NONE"?"":b);if(!a.frequencyCombo||!a.innerContainer){a.on("afterrender",function(){a.setValue(b)},a,{single:true});return}var c=a.value.split(";");if(a.value===""){a.setFrequency("NONE")}else{Ext.each(c,function(d){if(d.indexOf("FREQ")>-1){var e=d.split("=")[1];a.setFrequency(e);a.checkChange();return}},a)}a.innerContainer.items.each(function(d){if(d.setValue){d.setValue(a.value)}});a.checkChange();return a},setFrequency:function(b){var a=this;a.frequency=b;if(a.frequencyCombo){a.frequencyCombo.setValue(b);a.showOptions(b);this.innerContainer.items.each(function(c){c.setFrequency(b)})}else{a.on("afterrender",function(){a.frequencyCombo.setValue(b);a.showOptions(b)},a,{single:true})}return a},showOptions:function(c){var b=this,a="day";if(c==="NONE"){b.innerContainer.hide()}else{b.intervalField.show();b.durationField.show();b.innerContainer.show()}switch(c){case"DAILY":case"WEEKDAYS":b.weeklyField.hide();b.monthlyField.hide();b.yearlyField.hide();if(c==="WEEKDAYS"){a="week"}break;case"WEEKLY":b.weeklyField.show();b.monthlyField.hide();b.yearlyField.hide();a="week";break;case"MONTHLY":b.monthlyField.show();b.weeklyField.hide();b.yearlyField.hide();a="month";break;case"YEARLY":b.yearlyField.show();b.weeklyField.hide();b.monthlyField.hide();a="year";break}b.intervalField.updateLabel(a)}});Ext.define("Extensible.form.recurrence.RangeEditPanel",{extend:"Ext.form.Panel",alias:"widget.extensible.recurrence-rangeeditpanel",cls:"extensible-recur-edit-options",headerText:"There are multiple events in this series. How would you like your changes applied?",optionSingleButtonText:"Single",optionSingleDescription:"Apply to this event only. No other events in the series will be affected.",optionFutureButtonText:"Future",optionFutureDescription:"Apply to this and all following events only. Past events will be unaffected.",optionAllButtonText:"All Events",optionAllDescription:"Apply to every event in this series.",editModes:{SINGLE:"single",FUTURE:"future",ALL:"all"},border:false,layout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;a.editMode=a.editMode||a.editModes.ALL;a.items=[a.getHeaderConfig(),a.getOptionPanelConfig(),a.getSummaryConfig()];a.callParent(arguments)},getHeaderConfig:function(){return{xtype:"component",html:this.headerText,height:55,padding:15}},getSummaryConfig:function(){return{xtype:"component",itemId:this.id+"-summary",html:this.optionSingleDescription,flex:1,padding:15}},getOptionPanelConfig:function(){return{xtype:"panel",border:false,layout:{type:"hbox",pack:"center"},items:this.getOptionButtonConfigs()}},getOptionButtonConfigs:function(){var c=this,a={xtype:"button",iconAlign:"top",enableToggle:true,scale:"large",width:80,toggleGroup:"recur-toggle",toggleHandler:c.onToggle,scope:c},b=[Ext.apply({itemId:c.id+"-single",text:c.optionSingleButtonText,iconCls:"recur-edit-single",pressed:c.editMode===c.editModes.SINGLE},a),Ext.apply({itemId:c.id+"-future",text:c.optionFutureButtonText,iconCls:"recur-edit-future",pressed:c.editMode===c.editModes.FUTURE},a),Ext.apply({itemId:c.id+"-all",text:c.optionAllButtonText,iconCls:"recur-edit-all",pressed:c.editMode===c.editModes.ALL},a)];return b},getEditMode:function(){return this.editMode},showEditModes:function(e){e=e||[];var d=this,c=0,b,a=e.length;d.down("#"+d.id+"-single")[a?"hide":"show"]();d.down("#"+d.id+"-future")[a?"hide":"show"]();d.down("#"+d.id+"-all")[a?"hide":"show"]();for(;c<a;c++){b=d.down("#"+d.id+"-"+e[c]);if(b){b.show()}}},onToggle:function(a){var c=this,b=c.getComponent(c.id+"-summary").getEl();if(a.itemId===c.id+"-single"){b.update(c.optionSingleDescription);c.editMode=c.editModes.SINGLE}else{if(a.itemId===c.id+"-future"){b.update(c.optionFutureDescription);c.editMode=c.editModes.FUTURE}else{b.update(c.optionAllDescription);c.editMode=c.editModes.ALL}}}});Ext.define("Extensible.form.recurrence.RangeEditWindow",{extend:"Ext.window.Window",alias:"widget.extensible.recurrence-rangeeditwindow",singleton:true,requires:["Extensible.form.recurrence.RangeEditPanel"],title:"Recurring Event Options",width:350,height:240,saveButtonText:"Save",cancelButtonText:"Cancel",closeAction:"hide",modal:true,resizable:false,constrain:true,buttonAlign:"right",layout:"fit",formPanelConfig:{border:false},initComponent:function(){this.items=[{xtype:"extensible.recurrence-rangeeditpanel",itemId:this.id+"-recur-panel"}];this.fbar=this.getFooterBarConfig();this.callParent(arguments)},getRangeEditPanel:function(){return this.down("#"+this.id+"-recur-panel")},prompt:function(a){this.callbackFunction=Ext.bind(a.callback,a.scope||this);this.getRangeEditPanel().showEditModes(a.editModes);this.show()},getFooterBarConfig:function(){var a=["->",{text:this.saveButtonText,itemId:this.id+"-save-btn",disabled:false,handler:this.onSaveAction,scope:this},{text:this.cancelButtonText,itemId:this.id+"-cancel-btn",disabled:false,handler:this.onCancelAction,scope:this}];return a},onSaveAction:function(){var a=this.getComponent(this.id+"-recur-panel").getEditMode();this.callbackFunction(a);this.close()},onCancelAction:function(){this.callbackFunction(false);this.close()}});Ext.ns("Extensible.calendar.data");Extensible.calendar.data.EventMappings={EventId:{name:"EventId",mapping:"id",type:"int"},CalendarId:{name:"CalendarId",mapping:"calendarId",type:"string"},Category:{name:"Category",mapping:"category",type:"int"},Facility:{name:"Facility",mapping:"facility",type:"int"},BillingFacility:{name:"BillingFacility",mapping:"billing_facility",type:"int"},Patient:{name:"Patient",mapping:"patient_id",type:"int"},Title:{name:"Title",mapping:"title",type:"string"},Status:{name:"Status",mapping:"status",type:"string"},StartDate:{name:"StartDate",mapping:"start",type:"date",dateFormat:"c"},EndDate:{name:"EndDate",mapping:"end",type:"date",dateFormat:"c"},Location:{name:"Location",mapping:"loc",type:"string"},Notes:{name:"Notes",mapping:"notes",type:"string"},Url:{name:"Url",mapping:"url",type:"string"},IsAllDay:{name:"IsAllDay",mapping:"ad",type:"boolean"},Reminder:{name:"Reminder",mapping:"rem",type:"string"},RRule:{name:"RRule",mapping:"rrule",type:"string"},Duration:{name:"Duration",mapping:"duration",defaultValue:-1,type:"int"},OriginalEventId:{name:"OriginalEventId",mapping:"origid",type:"string"},RInstanceStartDate:{name:"RInstanceStartDate",mapping:"ristart",type:"date",dateFormat:"c"},REditMode:{name:"REditMode",mapping:"redit",type:"string"}};Ext.ns("Extensible.calendar.data");Extensible.calendar.data.CalendarMappings={CalendarId:{name:"CalendarId",mapping:"id",type:"string"},Title:{name:"Title",mapping:"title",type:"string"},Description:{name:"Description",mapping:"desc",type:"string"},ColorId:{name:"ColorId",mapping:"color",type:"int"},IsHidden:{name:"IsHidden",mapping:"hidden",type:"boolean"}};Ext.define("Extensible.calendar.template.BoxLayout",{extend:"Ext.XTemplate",requires:["Ext.Date"],firstWeekDateFormat:"D j",otherWeeksDateFormat:"j",singleDayDateFormat:"l, F j, Y",multiDayFirstDayFormat:"M j, Y",multiDayMonthStartFormat:"M j",constructor:function(a){Ext.apply(this,a);var b=this.showWeekLinks?'<div id="{weekLinkId}" class="ext-cal-week-link">{weekNum}</div>':"";Extensible.calendar.template.BoxLayout.superclass.constructor.call(this,'<tpl for="weeks">','<div id="{[this.id]}-wk-{[xindex-1]}" class="ext-cal-wk-ct" style="top:{[this.getRowTop(xindex, xcount)]}%; height:{[this.getRowHeight(xcount)]}%;">',b,'<table class="ext-cal-bg-tbl" cellpadding="0" cellspacing="0">',"<tbody>","<tr>",'<tpl for=".">','<td id="{[this.id]}-day-{date:date("Ymd")}" class="{cellCls}">&#160;</td>',"</tpl>","</tr>","</tbody>","</table>",'<table class="ext-cal-evt-tbl" cellpadding="0" cellspacing="0">',"<tbody>","<tr>",'<tpl for=".">','<td id="{[this.id]}-ev-day-{date:date("Ymd")}" class="{titleCls}"><div>{title}</div></td>',"</tpl>","</tr>","</tbody>","</table>","</div>","</tpl>",{getRowTop:function(c,d){return((c-1)*(100/d))},getRowHeight:function(c){return 100/c}})},applyTemplate:function(m){Ext.apply(this,m);var j=0,t="",f=true,u=false,h=false,s=false,a=false,l=false,e=m.weekendCls,n=m.prevMonthCls,r=m.nextMonthCls,b=m.todayCls,g=[[]],q=Extensible.Date.today(),k=Ext.Date.clone(this.viewStart),c=this.startDate.getMonth();for(;j<this.weekCount||this.weekCount==-1;j++){if(k>this.viewEnd){break}g[j]=[];for(var p=0;p<this.dayCount;p++){u=k.getTime()===q.getTime();h=f||(k.getDate()==1);s=(k.getMonth()<c)&&this.weekCount==-1;a=(k.getMonth()>c)&&this.weekCount==-1;l=k.getDay()%6===0;if(k.getDay()==1){g[j].weekNum=this.showWeekNumbers?Ext.Date.format(k,"W"):"&#160;";g[j].weekLinkId="ext-cal-week-"+Ext.Date.format(k,"Ymd")}if(h){if(u){t=this.getTodayText()}else{t=Ext.Date.format(k,this.dayCount==1?this.singleDayDateFormat:(f?this.multiDayFirstDayFormat:this.multiDayMonthStartFormat))}}else{var i=(j==0&&this.showHeader!==true)?this.firstWeekDateFormat:this.otherWeeksDateFormat;t=u?this.getTodayText():Ext.Date.format(k,i)}g[j].push({title:t,date:Ext.Date.clone(k),titleCls:"ext-cal-dtitle "+(u?" ext-cal-dtitle-today":"")+(j==0?" ext-cal-dtitle-first":"")+(s?" ext-cal-dtitle-prev":"")+(a?" ext-cal-dtitle-next":""),cellCls:"ext-cal-day "+(u?" "+b:"")+(p==0?" ext-cal-day-first":"")+(s?" "+n:"")+(a?" "+r:"")+(l&&e?" "+e:"")});k=Extensible.Date.add(k,{days:1});f=false}}if(Ext.getVersion().isLessThan("4.1")){return Extensible.calendar.template.BoxLayout.superclass.applyTemplate.call(this,{weeks:g})}else{return this.applyOut({weeks:g},[]).join("")}},getTodayText:function(){var b=Extensible.Date.use24HourTime?"G:i ":"g:ia ",c=this.showTodayText!==false?this.todayText:"",a=this.showTime!==false?' <span id="'+this.id+'-clock" class="ext-cal-dtitle-time" aria-live="off">'+Ext.Date.format(new Date(),b)+"</span>":"",d=c.length>0||a.length>0?" &#8212; ":"";if(this.dayCount==1){return Ext.Date.format(new Date(),this.singleDayDateFormat)+d+c+a}fmt=this.weekCount==1?this.firstWeekDateFormat:this.otherWeeksDateFormat;return c.length>0?c+a:Ext.Date.format(new Date(),fmt)+a}},function(){this.createAlias("apply","applyTemplate")});Ext.define("Extensible.calendar.template.DayHeader",{extend:"Ext.XTemplate",requires:["Extensible.calendar.template.BoxLayout"],constructor:function(a){Ext.apply(this,a);this.allDayTpl=Ext.create("Extensible.calendar.template.BoxLayout",a);this.allDayTpl.compile();Extensible.calendar.template.DayHeader.superclass.constructor.call(this,'<div class="ext-cal-hd-ct">','<table class="ext-cal-hd-days-tbl" cellspacing="0" cellpadding="0">',"<tbody>","<tr>",'<td class="ext-cal-gutter"></td>','<td class="ext-cal-hd-days-td"><div class="ext-cal-hd-ad-inner">{allDayTpl}</div></td>','<td class="ext-cal-gutter-rt"></td>',"</tr>","</tbody>","</table>","</div>")},applyTemplate:function(b){var a={allDayTpl:this.allDayTpl.apply(b)};if(Ext.getVersion().isLessThan("4.1")){return Extensible.calendar.template.DayHeader.superclass.applyTemplate.call(this,a)}else{return this.applyOut(a,[]).join("")}}},function(){this.createAlias("apply","applyTemplate")});Ext.define("Extensible.calendar.template.DayBody",{extend:"Ext.XTemplate",constructor:function(a){Ext.apply(this,a);Extensible.calendar.template.DayBody.superclass.constructor.call(this,'<table class="ext-cal-bg-tbl" cellspacing="0" cellpadding="0" style="height:{dayHeight}px;">',"<tbody>",'<tr height="1">','<td class="ext-cal-gutter"></td>','<td colspan="{dayCount}">','<div class="ext-cal-bg-rows">','<div class="ext-cal-bg-rows-inner">','<tpl for="times">','<div class="ext-cal-bg-row ext-row-{[xindex]}" style="height:{parent.hourHeight}px;">','<div class="ext-cal-bg-row-div {parent.hourSeparatorCls}" style="height:{parent.hourSeparatorHeight}px;"></div>',"</div>","</tpl>","</div>","</div>","</td>","</tr>","<tr>",'<td class="ext-cal-day-times">','<tpl for="times">','<div class="ext-cal-bg-row" style="height:{parent.hourHeight}px;">','<div class="ext-cal-day-time-inner"  style="height:{parent.hourHeight-1}px;">{.}</div>',"</div>","</tpl>","</td>",'<tpl for="days">','<td class="ext-cal-day-col">','<div class="ext-cal-day-col-inner">','<div id="{[this.id]}-day-col-{.:date("Ymd")}" class="ext-cal-day-col-gutter" style="height:{parent.dayHeight}px;"></div>',"</div>","</td>","</tpl>","</tr>","</tbody>","</table>")},applyTemplate:function(d){this.today=Extensible.Date.today();this.dayCount=this.dayCount||1;var j=0,l=[],e=Ext.Date.clone(d.viewStart);for(;j<this.dayCount;j++){l[j]=Extensible.Date.add(e,{days:j})}var a=[],b=this.viewStartHour,h=this.viewEndHour,c=this.hourIncrement,k=this.hourHeight*(h-b),f=Extensible.Date.use24HourTime?"G:i":"ga",g;e=Extensible.Date.add(new Date("5/26/1972"),{hours:b});for(j=b;j<h;j++){a.push(Ext.Date.format(e,f));e=Extensible.Date.add(e,{minutes:c})}g={days:l,dayCount:l.length,times:a,hourHeight:this.hourHeight,hourSeparatorCls:this.showHourSeparator?"":"no-sep",dayHeight:k,hourSeparatorHeight:(this.hourHeight/2)};if(Ext.getVersion().isLessThan("4.1")){return Extensible.calendar.template.DayBody.superclass.applyTemplate.call(this,g)}else{return this.applyOut(g,[]).join("")}}},function(){this.createAlias("apply","applyTemplate")});Ext.define("Extensible.calendar.template.Month",{extend:"Ext.XTemplate",requires:["Extensible.calendar.template.BoxLayout"],dayHeaderFormat:"D",dayHeaderTitleFormat:"l, F j, Y",constructor:function(a){Ext.apply(this,a);this.weekTpl=Ext.create("Extensible.calendar.template.BoxLayout",a);this.weekTpl.compile();var b=this.showWeekLinks?'<div class="ext-cal-week-link-hd">&#160;</div>':"";Extensible.calendar.template.Month.superclass.constructor.call(this,'<div class="ext-cal-inner-ct {extraClasses}">','<div class="ext-cal-hd-ct ext-cal-month-hd">',b,'<table class="ext-cal-hd-days-tbl" cellpadding="0" cellspacing="0">',"<tbody>","<tr>",'<tpl for="days">','<th class="ext-cal-hd-day{[xindex==1 ? " ext-cal-day-first" : ""]}" title="{title}">{name}</th>',"</tpl>","</tr>","</tbody>","</table>","</div>",'<div class="ext-cal-body-ct">{weeks}</div>',"</div>")},applyTemplate:function(c){var k=[],b=this.weekTpl.apply(c),e=c.viewStart,a=Extensible.Date,f;for(var h=0;h<7;h++){var j=a.add(e,{days:h});k.push({name:Ext.Date.format(j,this.dayHeaderFormat),title:Ext.Date.format(j,this.dayHeaderTitleFormat)})}var g=this.showHeader===true?"":"ext-cal-noheader";if(this.showWeekLinks){g+=" ext-cal-week-links"}f={days:k,weeks:b,extraClasses:g};if(Ext.getVersion().isLessThan("4.1")){return Extensible.calendar.template.Month.superclass.applyTemplate.call(this,f)}else{return this.applyOut(f,[]).join("")}}},function(){this.createAlias("apply","applyTemplate")});Ext.define("Ext.dd.ScrollManager",{singleton:true,requires:["Ext.dd.DragDropManager"],constructor:function(){var a=Ext.dd.DragDropManager;a.fireEvents=Ext.Function.createSequence(a.fireEvents,this.onFire,this);a.stopDrag=Ext.Function.createSequence(a.stopDrag,this.onStop,this);this.doScroll=Ext.Function.bind(this.doScroll,this);this.ddmInstance=a;this.els={};this.dragEl=null;this.proc={}},onStop:function(a){this.dragEl=null;this.clearProc()},triggerRefresh:function(){if(this.ddmInstance.dragCurrent){this.ddmInstance.refreshCache(this.ddmInstance.dragCurrent.groups)}},doScroll:function(){if(this.ddmInstance.dragCurrent){var a=this.proc,b=a.el,c=a.el.ddScrollConfig,d=c?c.increment:this.increment;if(!this.animate){if(b.scroll(a.dir,d)){this.triggerRefresh()}}else{b.scroll(a.dir,d,true,this.animDuration,this.triggerRefresh)}}},clearProc:function(){var a=this.proc;if(a.id){clearInterval(a.id)}a.id=0;a.el=null;a.dir=""},startProc:function(b,a){this.clearProc();this.proc.el=b;this.proc.dir=a;var d=b.ddScrollConfig?b.ddScrollConfig.ddGroup:undefined,c=(b.ddScrollConfig&&b.ddScrollConfig.frequency)?b.ddScrollConfig.frequency:this.frequency;if(d===undefined||this.ddmInstance.dragCurrent.ddGroup==d){this.proc.id=setInterval(this.doScroll,c)}},onFire:function(g,j){if(j||!this.ddmInstance.dragCurrent){return}if(!this.dragEl||this.dragEl!=this.ddmInstance.dragCurrent){this.dragEl=this.ddmInstance.dragCurrent;this.refreshCache()}var k=g.getXY(),l=g.getPoint(),h=this.proc,f=this.els;for(var b in f){var d=f[b],a=d._region;var i=d.ddScrollConfig?d.ddScrollConfig:this;if(a&&a.contains(l)&&d.isScrollable()){if(a.bottom-l.y<=i.vthresh){if(h.el!=d){this.startProc(d,"down")}return}else{if(a.right-l.x<=i.hthresh){if(h.el!=d){this.startProc(d,"left")}return}else{if(l.y-a.top<=i.vthresh){if(h.el!=d){this.startProc(d,"up")}return}else{if(l.x-a.left<=i.hthresh){if(h.el!=d){this.startProc(d,"right")}return}}}}}}this.clearProc()},register:function(c){if(Ext.isArray(c)){for(var b=0,a=c.length;b<a;b++){this.register(c[b])}}else{c=Ext.get(c);this.els[c.id]=c}},unregister:function(c){if(Ext.isArray(c)){for(var b=0,a=c.length;b<a;b++){this.unregister(c[b])}}else{c=Ext.get(c);delete this.els[c.id]}},vthresh:25,hthresh:25,increment:100,frequency:500,animate:true,animDuration:0.4,ddGroup:undefined,refreshCache:function(){var a=this.els,b;for(b in a){if(typeof a[b]=="object"){a[b]._region=a[b].getRegion()}}}});Ext.define("Extensible.calendar.dd.StatusProxy",{extend:"Ext.dd.StatusProxy",moveEventCls:"ext-cal-dd-move",addEventCls:"ext-cal-dd-add",renderTpl:['<div class="'+Ext.baseCSSPrefix+'dd-drop-icon"></div>','<div class="ext-dd-ghost-ct">','<div id="{id}-ghost" class="'+Ext.baseCSSPrefix+'dd-drag-ghost"></div>','<div id="{id}-message" class="ext-dd-msg"></div>',"</div>"],childEls:["ghost","message"],constructor:function(a){if(Ext.getVersion().isLessThan("4.1")){this.preComponentConstructor(a)}else{this.callParent(arguments)}},preComponentConstructor:function(a){var b=this;Ext.apply(b,a);b.id=b.id||Ext.id();b.proxy=Ext.createWidget("component",{floating:true,id:b.id||Ext.id(),html:b.renderTpl.join(""),cls:Ext.baseCSSPrefix+"dd-drag-proxy "+b.dropNotAllowed,shadow:!a||a.shadow!==false,renderTo:document.body});b.el=b.proxy.el;b.el.show();b.el.setVisibilityMode(Ext.core.Element.VISIBILITY);b.el.hide();b.ghost=Ext.get(b.el.dom.childNodes[1].childNodes[0]);b.message=Ext.get(b.el.dom.childNodes[1].childNodes[1]);b.dropStatus=b.dropNotAllowed},update:function(a){this.callParent(arguments);var b=this.ghost.dom.firstChild;if(b){Ext.fly(b).setHeight("auto")}},updateMsg:function(a){this.message.update(a)}});Ext.define("Extensible.calendar.dd.DragZone",{extend:"Ext.dd.DragZone",requires:["Extensible.calendar.dd.StatusProxy","Extensible.calendar.data.EventMappings"],ddGroup:"CalendarDD",eventSelector:".ext-cal-evt",constructor:function(b,a){if(!Extensible.calendar._statusProxyInstance){Extensible.calendar._statusProxyInstance=Ext.create("Extensible.calendar.dd.StatusProxy")}this.proxy=Extensible.calendar._statusProxyInstance;this.callParent(arguments)},getDragData:function(b){var a=b.getTarget(this.eventSelector,3);if(a){var c=this.view.getEventRecordFromEl(a);if(!c){return}return{type:"eventdrag",ddel:a,eventStart:c.data[Extensible.calendar.data.EventMappings.StartDate.name],eventEnd:c.data[Extensible.calendar.data.EventMappings.EndDate.name],proxy:this.proxy}}a=this.view.getDayAt(b.getX(),b.getY());if(a.el){return{type:"caldrag",start:a.date,proxy:this.proxy}}return null},onInitDrag:function(a,d){if(this.dragData.ddel){var b=this.dragData.ddel.cloneNode(true),c=Ext.fly(b).down("dl");Ext.fly(b).setWidth("auto");if(c){c.setHeight("auto")}this.proxy.update(b);this.onStartDrag(a,d)}else{if(this.dragData.start){this.onStartDrag(a,d)}}this.view.onInitDrag();return true},afterRepair:function(){if(Ext.enableFx&&this.dragData.ddel){Ext.Element.fly(this.dragData.ddel).highlight(this.hlColor||"c3daf9")}this.dragging=false},getRepairXY:function(a){if(this.dragData.ddel){return Ext.Element.fly(this.dragData.ddel).getXY()}},afterInvalidDrop:function(a,b){Ext.select(".ext-dd-shim").hide()},destroy:function(){this.callParent(arguments);delete Extensible.calendar._statusProxyInstance}});Ext.define("Extensible.calendar.dd.DropZone",{extend:"Ext.dd.DropZone",requires:["Ext.Layer","Extensible.calendar.data.EventMappings"],ddGroup:"CalendarDD",eventSelector:".ext-cal-evt",dateRangeFormat:"{0}-{1}",dateFormat:"n/j",shims:[],getTargetFromEvent:function(b){var a=this.dragOffset||0,f=b.getPageY()-a,c=this.view.getDayAt(b.getPageX(),f);return c.el?c:null},onNodeOver:function(c,j,h,f){var a=Extensible.Date,i=(h.ctrlKey||h.altKey)?this.copyText:this.moveText,b=f.type=="eventdrag"?c.date:a.min(f.start,c.date),d=f.type=="eventdrag"?a.add(c.date,{days:a.diffDays(f.eventStart,f.eventEnd)}):a.max(f.start,c.date);if(!this.dragStartDate||!this.dragEndDate||(a.diffDays(b,this.dragStartDate)!=0)||(a.diffDays(d,this.dragEndDate)!=0)){this.dragStartDate=b;this.dragEndDate=a.add(d,{days:1,millis:-1,clearTime:true});this.shim(b,d);var g=Ext.Date.format(b,this.dateFormat);if(a.diffDays(b,d)>0){d=Ext.Date.format(d,this.dateFormat);g=Ext.String.format(this.dateRangeFormat,g,d)}this.currentRange=g}f.proxy.updateMsg(Ext.String.format(f.type==="eventdrag"?i:this.createText,this.currentRange));return this.dropAllowed},shim:function(b,f){this.currWeek=-1;var c=Ext.Date.clone(b),g=0,e,h,a=Extensible.Date,d=a.diffDays(c,f)+1;Ext.each(this.shims,function(i){if(i){i.isActive=false}});while(g++<d){var j=this.view.getDayEl(c);if(j){var k=this.view.getWeekIndex(c),e=this.shims[k];if(!e){e=this.createShim();this.shims[k]=e}if(k!=this.currWeek){e.boxInfo=j.getBox();this.currWeek=k}else{h=j.getBox();e.boxInfo.right=h.right;e.boxInfo.width=h.right-e.boxInfo.x}e.isActive=true}c=a.add(c,{days:1})}Ext.each(this.shims,function(i){if(i){if(i.isActive){i.show();i.setBox(i.boxInfo)}else{if(i.isVisible()){i.hide()}}}})},createShim:function(){var a=this.view.ownerCalendarPanel?this.view.ownerCalendarPanel:this.view;if(!this.shimCt){this.shimCt=Ext.get("ext-dd-shim-ct-"+a.id);if(!this.shimCt){this.shimCt=document.createElement("div");this.shimCt.id="ext-dd-shim-ct-"+a.id;a.getEl().parent().appendChild(this.shimCt)}}var b=document.createElement("div");b.className="ext-dd-shim";this.shimCt.appendChild(b);return Ext.create("Ext.Layer",{shadow:false,useDisplay:true,constrain:false},b)},clearShims:function(){Ext.each(this.shims,function(a){if(a){a.hide()}})},onContainerOver:function(a,c,b){return this.dropAllowed},onCalendarDragComplete:function(){delete this.dragStartDate;delete this.dragEndDate;this.clearShims()},onNodeDrop:function(g,a,d,c){if(g&&c){if(c.type=="eventdrag"){var f=this.view.getEventRecordFromEl(c.ddel),b=Extensible.Date.copyTime(f.data[Extensible.calendar.data.EventMappings.StartDate.name],g.date);this.view.onEventDrop(f,b,(d.ctrlKey||d.altKey)?"copy":"move");this.onCalendarDragComplete();return true}if(c.type=="caldrag"){if(!this.dragEndDate){this.dragStartDate=Ext.Date.clearTime(c.start);this.dragEndDate=Extensible.Date.add(this.dragStartDate,{days:1,millis:-1,clearTime:true})}this.view.onCalendarEndDrag(this.dragStartDate,this.dragEndDate,Ext.bind(this.onCalendarDragComplete,this));return true}}this.onCalendarDragComplete();return false},onContainerDrop:function(a,c,b){this.onCalendarDragComplete();return false},destroy:function(){Ext.each(this.shims,function(a){if(a){Ext.destroy(a)}});Ext.removeNode(this.shimCt);delete this.shimCt;this.shims.length=0}});Ext.define("Extensible.calendar.dd.DayDragZone",{extend:"Extensible.calendar.dd.DragZone",ddGroup:"DayViewDD",resizeSelector:".ext-evt-rsz",getDragData:function(c){var a=c.getTarget(this.resizeSelector,2,true);if(a){var b=a.parent(this.eventSelector),d=this.view.getEventRecordFromEl(b);if(!d){return}return{type:"eventresize",xy:c.getXY(),ddel:b.dom,eventStart:d.data[Extensible.calendar.data.EventMappings.StartDate.name],eventEnd:d.data[Extensible.calendar.data.EventMappings.EndDate.name],proxy:this.proxy}}var a=c.getTarget(this.eventSelector,3);if(a){var d=this.view.getEventRecordFromEl(a);if(!d){return}return{type:"eventdrag",xy:c.getXY(),ddel:a,eventStart:d.data[Extensible.calendar.data.EventMappings.StartDate.name],eventEnd:d.data[Extensible.calendar.data.EventMappings.EndDate.name],proxy:this.proxy}}a=this.view.getDayAt(c.getX(),c.getY());if(a.el){return{type:"caldrag",dayInfo:a,proxy:this.proxy}}return null}});Ext.define("Extensible.calendar.dd.DayDropZone",{extend:"Extensible.calendar.dd.DropZone",ddGroup:"DayViewDD",dateRangeFormat:"{0}-{1}",dateFormat:"n/j",onNodeOver:function(c,m,k,h){var b,o=this.createText,g=Extensible.Date.use24HourTime?"G:i":"g:ia";if(h.type=="caldrag"){if(!this.dragStartMarker){this.dragStartMarker=c.el.parent().createChild({style:"position:absolute;"});this.dragStartMarker.setBox(h.dayInfo.timeBox);this.dragCreateDt=h.dayInfo.date}var j,i=this.dragStartMarker.getBox();i.height=Math.ceil(Math.abs(k.getY()-i.y)/c.timeBox.height)*c.timeBox.height;if(k.getY()<i.y){i.height+=c.timeBox.height;i.y=i.y-i.height+c.timeBox.height;j=Extensible.Date.add(this.dragCreateDt,{minutes:this.ddIncrement})}else{c.date=Extensible.Date.add(c.date,{minutes:this.ddIncrement})}this.shim(this.dragCreateDt,i);var l=Extensible.Date.diff(this.dragCreateDt,c.date),r=Extensible.Date.add(this.dragCreateDt,{millis:l});this.dragStartDate=Extensible.Date.min(this.dragCreateDt,r);this.dragEndDate=j||Extensible.Date.max(this.dragCreateDt,r);b=Ext.String.format(this.dateRangeFormat,Ext.Date.format(this.dragStartDate,g),Ext.Date.format(this.dragEndDate,g))}else{var q=Ext.get(h.ddel),p=q.parent().parent(),i=q.getBox();i.width=p.getWidth();if(h.type=="eventdrag"){if(this.dragOffset===undefined){var d=this.view.getDayAt(h.xy[0],h.xy[1]).timeBox;this.dragOffset=d.y-i.y}else{i.y=c.timeBox.y}b=Ext.Date.format(c.date,(this.dateFormat+" "+g));i.x=c.el.getLeft();this.shim(c.date,i);o=(k.ctrlKey||k.altKey)?this.copyText:this.moveText}if(h.type=="eventresize"){if(!this.resizeDt){this.resizeDt=c.date}i.x=p.getLeft();i.height=Math.ceil(Math.abs(k.getY()-i.y)/c.timeBox.height)*c.timeBox.height;if(k.getY()<i.y){i.y-=i.height}else{c.date=Extensible.Date.add(c.date,{minutes:this.ddIncrement})}this.shim(this.resizeDt,i);var l=Extensible.Date.diff(this.resizeDt,c.date),r=Extensible.Date.add(this.resizeDt,{millis:l}),a=Extensible.Date.min(h.eventStart,r),f=Extensible.Date.max(h.eventStart,r);h.resizeDates={StartDate:a,EndDate:f};b=Ext.String.format(this.dateRangeFormat,Ext.Date.format(a,g),Ext.Date.format(f,g));o=this.resizeText}}h.proxy.updateMsg(Ext.String.format(o,b));return this.dropAllowed},shim:function(b,a){Ext.each(this.shims,function(d){if(d){d.isActive=false;d.hide()}});var c=this.shims[0];if(!c){c=this.createShim();this.shims[0]=c}c.isActive=true;c.show();c.setBox(a)},onNodeDrop:function(f,a,c,b){if(f&&b){if(b.type=="eventdrag"){var d=this.view.getEventRecordFromEl(b.ddel);this.view.onEventDrop(d,f.date,(c.ctrlKey||c.altKey)?"copy":"move");this.onCalendarDragComplete();delete this.dragOffset;return true}if(b.type=="eventresize"){var d=this.view.getEventRecordFromEl(b.ddel);this.view.onEventResize(d,b.resizeDates);this.onCalendarDragComplete();delete this.resizeDt;return true}if(b.type=="caldrag"){Ext.destroy(this.dragStartMarker);delete this.dragStartMarker;delete this.dragCreateDt;this.view.onCalendarEndDrag(this.dragStartDate,this.dragEndDate,Ext.bind(this.onCalendarDragComplete,this));return true}}this.onCalendarDragComplete();return false}});Ext.define("Extensible.calendar.data.EventModel",{extend:"Extensible.data.Model",requires:["Extensible.calendar.data.EventMappings"],mappingClass:"Extensible.calendar.data.EventMappings",mappingIdProperty:"EventId",associations:[{type:"hasMany",model:"Extensible.calendar.data.EventModel",primaryKey:"EventId",foreignKey:"ParentId",autoLoad:true},{type:"belongsTo",model:"Extensible.calendar.data.EventModel",primaryKey:"EventId",foreignKey:"ParentId"}],inheritableStatics:{resolution:"minutes"},isRecurring:function(){var a=Extensible.calendar.data.EventMappings.RRule;if(a){var b=this.get(a.name);return(b!==undefined&&b!=="")}return false},getStartDate:function(){return this.get(Extensible.calendar.data.EventMappings.StartDate.name)},getEndDate:function(){var c=Extensible.calendar.data.EventMappings,a=c.Duration?this.get(c.Duration.name):null;if(a!==null&&a>-1){var b={};b[Extensible.calendar.data.EventModel.resolution]=a;return Extensible.Date.add(this.getStartDate(),b)}return this.get(c.EndDate.name)},clearRecurrence:function(){var a=this,b=Extensible.calendar.data.EventMappings;delete a.data[b.OriginalEventId.name];delete a.data[b.RRule.name];delete a.data[b.RInstanceStartDate.name];delete a.data[b.REditMode.name];return a}},function(){this.reconfigure()});Ext.define("Extensible.calendar.data.EventStore",{extend:"Ext.data.Store",model:"Extensible.calendar.data.EventModel",constructor:function(a){a=a||{};this.deferLoad=a.autoLoad;a.autoLoad=false;this.callParent(arguments)},load:function(a){Extensible.log("store load");a=a||{};if(a.params){delete this.initialParams}if(this.initialParams){a.params=a.params||{};Ext.apply(a.params,this.initialParams);delete this.initialParams}this.callParent(arguments)}});Ext.define("Extensible.calendar.data.CalendarModel",{extend:"Extensible.data.Model",requires:["Extensible.calendar.data.CalendarMappings"],mappingClass:"Extensible.calendar.data.CalendarMappings",mappingIdProperty:"CalendarId"},function(){this.reconfigure()});Ext.define("Extensible.calendar.data.MemoryCalendarStore",{extend:"Ext.data.Store",model:"Extensible.calendar.data.CalendarModel",requires:["Ext.data.proxy.Memory","Ext.data.reader.Json","Ext.data.writer.Json","Extensible.calendar.data.CalendarModel","Extensible.calendar.data.CalendarMappings"],proxy:{type:"memory",reader:{type:"json",root:"calendars"},writer:{type:"json"}},autoLoad:true,initComponent:function(){this.sorters=this.sorters||[{property:Extensible.calendar.data.CalendarMappings.Title.name,direction:"ASC"}];this.idProperty=this.idProperty||Extensible.calendar.data.CalendarMappings.CalendarId.name||"id";this.fields=Extensible.calendar.data.CalendarModel.prototype.fields.getRange();this.callParent(arguments)}});Ext.define("Extensible.calendar.data.MemoryEventStore",{extend:"Ext.data.Store",model:"Extensible.calendar.data.EventModel",requires:["Ext.data.proxy.Memory","Ext.data.reader.Json","Ext.data.writer.Json","Extensible.calendar.data.EventModel","Extensible.calendar.data.EventMappings"],proxy:{type:"memory",reader:{type:"json",root:"evts"},writer:{type:"json"}},idSeed:2000,constructor:function(a){a=a||{};this.callParent(arguments);this.sorters=this.sorters||[{property:Extensible.calendar.data.EventMappings.StartDate.name,direction:"ASC"}];this.idProperty=this.idProperty||Extensible.calendar.data.EventMappings.EventId.mapping||"id";this.fields=Extensible.calendar.data.EventModel.prototype.fields.getRange();if(a.autoMsg!==false){this.on("write",this.onWrite,this)}this.autoMsg=a.autoMsg;this.onCreateRecords=Ext.Function.createInterceptor(this.onCreateRecords,this.interceptCreateRecords);this.initRecs()},interceptCreateRecords:function(c,b,f){if(f){var d=0,e,a=c.length;for(;d<a;d++){c[d].data[Extensible.calendar.data.EventMappings.EventId.name]=this.idSeed++}}},initRecs:function(){this.each(function(a){a.store=this;a.phantom=false},this)},onWrite:function(b,a){var c=this;if(Extensible.example&&Extensible.example.msg){var f=a.wasSuccessful(),e=a.records[0],d=e.data[Extensible.calendar.data.EventMappings.Title.name];switch(a.action){case"create":Extensible.example.msg("Add",'Added "'+Ext.value(d,"(No title)")+'"');break;case"update":Extensible.example.msg("Update",'Updated "'+Ext.value(d,"(No title)")+'"');break;case"destroy":Extensible.example.msg("Delete",'Deleted "'+Ext.value(d,"(No title)")+'"');break}}},onProxyLoad:function(b){var d=this,e=b.wasSuccessful(),c=b.getResultSet(),a=[];if(d.data&&d.data.length>0){d.totalCount=d.data.length;a=d.data.items}else{if(c){a=c.records;d.totalCount=c.total}if(e){d.loadRecords(a,b)}}d.loading=false;d.fireEvent("load",d,a,e)}});Ext.define("Extensible.calendar.util.WeekEventRenderer",{requires:["Ext.core.DomHelper"],statics:{getEventRow:function(a,b,g){var e=1,f=Ext.get(a+"-wk-"+b),d,c;if(f){c=f.child(".ext-cal-evt-tbl",true);d=c.tBodies[0].childNodes[g+e];if(!d){d=Ext.core.DomHelper.append(c.tBodies[0],"<tr></tr>")}}return Ext.get(d)},renderEvent:function(d,j,b,c,a,f,e){var i=Extensible.calendar.data.EventMappings,m=d.data||d.event.data,n=Ext.Date.clone(f),o=Extensible.Date.add(n,{days:a-b,millis:-1}),g=this.getEventRow(e.viewId,j,c),l=(d.event||d).getEndDate(),k=Extensible.Date.diffDays(f,l)+1,h=Math.min(k,a-b);m._weekIndex=j;m._renderAsAllDay=m[i.IsAllDay.name]||d.isSpanStart;m.spanLeft=m[i.StartDate.name].getTime()<n.getTime();m.spanRight=l.getTime()>o.getTime();m.spanCls=(m.spanLeft?(m.spanRight?"ext-cal-ev-spanboth":"ext-cal-ev-spanleft"):(m.spanRight?"ext-cal-ev-spanright":""));var p={tag:"td",cls:"ext-cal-ev",cn:e.tpl.apply(e.templateDataFn(m))};if(h>1){p.colspan=h}Ext.core.DomHelper.append(g,p)},render:function(s){var u=this,v="&#160;",p=0,f=s.eventGrid,g=Ext.Date.clone(s.viewStart),j="",k=s.tpl,n=s.maxEventsPerDay!=undefined?s.maxEventsPerDay:999,q=s.weekCount<1?6:s.weekCount,l=s.weekCount==1?s.dayCount:7,r,m,a,d,e,o,c,i,h,b;for(;p<q;p++){m=0;a=f[p];for(;m<l;m++){j=Ext.Date.format(g,"Ymd");if(a&&a[m]){d=0;e=0;o=a[m];c=o.length;for(;d<c;d++){if(!o[d]){if(d>=n){continue}r=u.getEventRow(s.viewId,p,d);Ext.core.DomHelper.append(r,{tag:"td",cls:"ext-cal-ev",html:v,id:s.viewId+"-empty-"+c+"-day-"+j})}else{if(d>=n){e++;continue}i=o[d];if(!i.isSpan||i.isSpanStart){u.renderEvent(i,p,m,d,l,g,s)}}}if(e>0){r=u.getEventRow(s.viewId,p,n);Ext.core.DomHelper.append(r,{tag:"td",cls:"ext-cal-ev-more",id:"ext-cal-ev-more-"+Ext.Date.format(g,"Ymd"),cn:{tag:"a",html:Ext.String.format(s.getMoreText(e),e)}})}else{if(c<s.evtMaxCount[p]){r=u.getEventRow(s.viewId,p,c);if(r){h={tag:"td",cls:"ext-cal-ev",html:v,id:s.viewId+"-empty-"+(c+1)+"-day-"+j};var t=s.evtMaxCount[p]-c;if(t>1){h.rowspan=t}Ext.core.DomHelper.append(r,h)}}}}else{r=u.getEventRow(s.viewId,p,0);if(r){h={tag:"td",cls:"ext-cal-ev",html:v,id:s.viewId+"-empty-day-"+j};if(s.evtMaxCount[p]>1){h.rowspan=s.evtMaxCount[p]}Ext.core.DomHelper.append(r,h)}}g=Extensible.Date.add(g,{days:1})}}}}});Ext.define("Extensible.calendar.form.field.CalendarCombo",{extend:"Ext.form.field.ComboBox",alias:"widget.extensible.calendarcombo",requires:["Extensible.calendar.data.CalendarMappings"],fieldLabel:"Calendar",triggerAction:"all",queryMode:"local",forceSelection:true,selectOnFocus:true,defaultCls:"x-cal-default",hiddenCalendarCls:"ext-cal-hidden",initComponent:function(){this.valueField=Extensible.calendar.data.CalendarMappings.CalendarId.name;this.displayField=Extensible.calendar.data.CalendarMappings.Title.name;this.listConfig=Ext.apply(this.listConfig||{},{getInnerTpl:this.getListItemTpl});this.store.on("update",this.refreshColorCls,this);this.callParent(arguments)},getListItemTpl:function(a){return'<div class="x-combo-list-item x-cal-{'+Extensible.calendar.data.CalendarMappings.ColorId.name+'}"><div class="ext-cal-picker-icon">&#160;</div>{'+a+"}</div>"},afterRender:function(){this.callParent(arguments);this.wrap=this.el.down(".x-form-item-body");this.wrap.addCls("ext-calendar-picker");this.icon=Ext.core.DomHelper.append(this.wrap,{tag:"div",cls:"ext-cal-picker-icon ext-cal-picker-mainicon"})},refreshColorCls:function(){var a=this,d=Extensible.calendar.data.CalendarMappings,c="",b=a.getValue();if(!a.wrap){return a}if(a.currentStyleClss!==undefined){a.wrap.removeCls(a.currentStyleClss)}if(!Ext.isEmpty(b)){if(Ext.isArray(b)){b=b[0]}if(!b.data){b=this.store.findRecord(d.CalendarId.name,b)}c="x-cal-"+(b.data?b.data[d.ColorId.name]:b)}a.currentStyleClss=c;a.wrap.addCls(c);return a},setValue:function(a){if(!a&&this.store.getCount()>0){a=this.store.getAt(0).data[Extensible.calendar.data.CalendarMappings.CalendarId.name]}this.callParent(arguments);this.refreshColorCls()}});Ext.define("Extensible.form.field.DateRangeLayout",{extend:"Ext.layout.container.Container",alias:["layout.extensible.daterange"],onLayout:function(){var c=this,d=c.getShadowCt(),b=c.owner,a=b.isSingleLine();c.owner.suspendLayout=true;if(a){d.getComponent("row1").add(b.startDate,b.startTime,b.toLabel,b.endTime,b.endDate,b.allDay)}else{d.getComponent("row1").add(b.startDate,b.startTime,b.toLabel);d.getComponent("row2").add(b.endDate,b.endTime,b.allDay)}if(!d.rendered){d.render(c.getRenderTarget())}d.doComponentLayout();b.setHeight(d.getHeight()-5);delete c.owner.suspendLayout},getShadowCt:function(){var b=this,a=[];if(!b.shadowCt){b.shadowCt=Ext.createWidget("container",{layout:"auto",anchor:"100%",ownerCt:b.owner,items:[{xtype:"container",itemId:"row1",layout:"hbox",defaults:{margins:"0 5 0 0"}},{xtype:"container",itemId:"row2",layout:"hbox",defaults:{margins:"0 5 0 0"}}]})}return b.shadowCt},renderItems:Ext.emptyFn});Ext.define("Extensible.form.field.DateRange",{extend:"Ext.form.FieldContainer",alias:"widget.extensible.daterangefield",requires:["Ext.form.field.Date","Ext.form.field.Time","Ext.form.Label","Ext.form.field.Checkbox"],toText:"to",allDayText:"All day",singleLine:true,dateFormat:"n/j/Y",fieldLayout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},initComponent:function(){var a=this;a.timeFormat=a.timeFormat||(Extensible.Date.use24HourTime?"G:i":"g:i A");a.addCls("ext-dt-range");if(a.singleLine){a.layout=a.fieldLayout;a.items=a.getFieldConfigs()}else{a.items=[{xtype:"container",layout:a.fieldLayout,items:[a.getStartDateConfig(),a.getStartTimeConfig(),a.getDateSeparatorConfig()]},{xtype:"container",layout:a.fieldLayout,items:[a.getEndDateConfig(),a.getEndTimeConfig(),a.getAllDayConfig()]}]}a.callParent(arguments);a.initRefs()},initRefs:function(){var a=this;a.startDate=a.down("#"+a.id+"-start-date");a.startTime=a.down("#"+a.id+"-start-time");a.endTime=a.down("#"+a.id+"-end-time");a.endDate=a.down("#"+a.id+"-end-date");a.allDay=a.down("#"+a.id+"-allday");a.toLabel=a.down("#"+a.id+"-to-label")},getFieldConfigs:function(){var a=this;return[a.getStartDateConfig(),a.getStartTimeConfig(),a.getDateSeparatorConfig(),a.getEndTimeConfig(),a.getEndDateConfig(),a.getAllDayConfig()]},getLayoutItems:function(a){var b=this;return a?b.items.items:[[b.startDate,b.startTime,b.toLabel],[b.endDate,b.endTime,b.allDay]]},getStartDateConfig:function(){return{xtype:"datefield",id:this.id+"-start-date",format:this.dateFormat,width:100,listeners:{change:{fn:function(){this.onFieldChange("date","start")},scope:this}}}},getStartTimeConfig:function(){return{xtype:"timefield",id:this.id+"-start-time",hidden:this.showTimes===false,labelWidth:0,hideLabel:true,width:90,format:this.timeFormat,listeners:{select:{fn:function(){this.onFieldChange("time","start")},scope:this}}}},getEndDateConfig:function(){return{xtype:"datefield",id:this.id+"-end-date",format:this.dateFormat,hideLabel:true,width:100,listeners:{change:{fn:function(){this.onFieldChange("date","end")},scope:this}}}},getEndTimeConfig:function(){return{xtype:"timefield",id:this.id+"-end-time",hidden:this.showTimes===false,labelWidth:0,hideLabel:true,width:90,format:this.timeFormat,listeners:{select:{fn:function(){this.onFieldChange("time","end")},scope:this}}}},getAllDayConfig:function(){return{xtype:"checkbox",id:this.id+"-allday",hidden:this.showTimes===false||this.showAllDay===false,boxLabel:this.allDayText,margins:{top:2,right:5,bottom:0,left:0},handler:this.onAllDayChange,scope:this}},onAllDayChange:function(a,b){this.startTime.setVisible(!b);this.endTime.setVisible(!b)},getDateSeparatorConfig:function(){return{xtype:"label",id:this.id+"-to-label",text:this.toText,margins:{top:4,right:5,bottom:0,left:0}}},isSingleLine:function(){var c=this;if(c.calculatedSingleLine===undefined){if(c.singleLine=="auto"){var d=c.ownerCt.getEl(),a=c.ownerCt.getWidth()-d.getPadding("lr"),b=d.down(".x-panel-body");if(b){a-=b.getPadding("lr")}b=d.down(".x-form-item-label");if(b){a-=b.getWidth()-b.getPadding("lr")}singleLine=a<=c.singleLineMinWidth?false:true}else{c.calculatedSingleLine=c.singleLine!==undefined?c.singleLine:true}}return c.calculatedSingleLine},onFieldChange:function(a,b){this.checkDates(a,b);this.fireEvent("change",this,this.getValue())},checkDates:function(e,h){var g=this,f=e==="date"?"Date":"Time",d=this["start"+f],b=this["end"+f],c=g.getDT("start"),a=g.getDT("end");if(c>a){if(h=="start"){b.setValue(c)}else{d.setValue(a);g.checkDates(e,"start")}}if(e=="date"){g.checkDates("time",h)}},getValue:function(){return[this.getDT("start"),this.getDT("end"),this.allDay.getValue()]},getDT:function(d){var b=this[d+"Time"].getValue(),a=this[d+"Date"].getValue();if(Ext.isDate(a)){a=Ext.Date.format(a,this[d+"Date"].format)}else{return null}if(b&&b!=""){b=Ext.Date.format(b,this[d+"Time"].format);var c=Ext.Date.parseDate(a+" "+b,this[d+"Date"].format+" "+this[d+"Time"].format);return c}return Ext.Date.parseDate(a,this[d+"Date"].format)},setValue:function(a){if(!a){return}var c=this,b=Extensible.calendar.data.EventMappings,d=b.StartDate.name;if(Ext.isArray(a)){c.setDT(a[0],"start");c.setDT(a[1],"end");c.allDay.setValue(!!a[2])}else{if(Ext.isDate(a)){c.setDT(a,"start");c.setDT(a,"end");c.allDay.setValue(false)}else{if(a[d]){c.setDT(a[d],"start");if(!c.setDT(a[b.EndDate.name],"end")){c.setDT(a[d],"end")}c.allDay.setValue(!!a[b.IsAllDay.name])}}}},setDT:function(a,b){if(a&&Ext.isDate(a)){this[b+"Date"].setValue(a);this[b+"Time"].setValue(Ext.Date.format(a,this[b+"Time"].format));return true}},isDirty:function(){var a=false;if(this.rendered&&!this.disabled){this.items.each(function(b){if(b.isDirty()){a=true;return false}})}return a},reset:function(){this.delegateFn("reset")},delegateFn:function(a){this.items.each(function(b){if(b[a]){b[a]()}})},beforeDestroy:function(){Ext.destroy(this.fieldCt);this.callParent(arguments)},getRawValue:Ext.emptyFn,setRawValue:Ext.emptyFn});Ext.define("Extensible.calendar.form.field.ReminderCombo",{extend:"Ext.form.field.ComboBox",alias:"widget.extensible.remindercombo",requires:["Ext.data.ArrayStore"],fieldLabel:"Reminder",queryMode:"local",triggerAction:"all",forceSelection:true,displayField:"desc",valueField:"value",noneText:"None",atStartTimeText:"At start time",reminderValueFormat:"{0} {1} before start",minutesText:"minutes",hourText:"hour",hoursText:"hours",dayText:"day",daysText:"days",weekText:"week",weeksText:"weeks",initComponent:function(){this.store=this.store||Ext.create("Ext.data.ArrayStore",{fields:["value","desc"],idIndex:0,data:this.getValueList()});this.callParent(arguments)},getValueList:function(){var c=this,a=c.reminderValueFormat,b=Ext.String.format;return[["",c.noneText],["0",c.atStartTimeText],["5",b(a,"5",c.getMinutesText(5))],["15",b(a,"15",c.getMinutesText(15))],["30",b(a,"30",c.getMinutesText(30))],["60",b(a,"1",c.getHoursText(1))],["90",b(a,"1.5",c.getHoursText(1.5))],["120",b(a,"2",c.getHoursText(2))],["180",b(a,"3",c.getHoursText(3))],["360",b(a,"6",c.getHoursText(6))],["720",b(a,"12",c.getHoursText(12))],["1440",b(a,"1",c.getDaysText(1))],["2880",b(a,"2",c.getDaysText(2))],["4320",b(a,"3",c.getDaysText(3))],["5760",b(a,"4",c.getDaysText(4))],["7200",b(a,"5",c.getDaysText(5))],["10080",b(a,"1",c.getWeeksText(1))],["20160",b(a,"2",c.getWeeksText(2))]]},getMinutesText:function(a){return a===1?this.minuteText:this.minutesText},getHoursText:function(a){return a===1?this.hourText:this.hoursText},getDaysText:function(a){return a===1?this.dayText:this.daysText},getWeeksText:function(a){return a===1?this.weekText:this.weeksText},initValue:function(){if(this.value!==undefined){this.setValue(this.value)}else{this.setValue("")}this.originalValue=this.getValue()}});Ext.define("Extensible.calendar.util.ColorPicker",{extend:"Ext.picker.Color",alias:"widget.extensible.calendarcolorpicker",requires:["Ext.XTemplate"],colorCount:32,constructor:function(){this.renderTpl=Ext.create("Ext.XTemplate",'<tpl for="colors"><a href="#" class="x-cal-{.}" hidefocus="on"><em><span unselectable="on">&#160;</span></em></a></tpl>');this.callParent(arguments)},initComponent:function(){this.callParent(arguments);this.addCls("x-calendar-palette");if(this.handler){this.on("select",this.handler,this.scope||this,{delegate:"a"})}this.colors=[];for(var a=1;a<=this.colorCount;a++){this.colors.push(a)}},handleClick:function(b,a){b.preventDefault();var c=a.className.split("x-cal-")[1];this.select(c)},select:function(f,a){var c=this,e=c.selectedCls,d=c.value;if(!c.rendered){c.value=f;return}if(f!=d||c.allowReselect){var b=c.el;if(c.value){b.down(".x-cal-"+d).removeCls(e)}b.down(".x-cal-"+f).addCls(e);c.value=f;if(a!==true){c.fireEvent("select",c,f)}}}});Ext.define("Extensible.calendar.gadget.CalendarListMenu",{extend:"Ext.menu.Menu",alias:"widget.extensible.calendarlistmenu",requires:["Extensible.calendar.util.ColorPicker"],hideOnClick:true,ignoreParentClicks:true,displayOnlyThisCalendarText:"Display only this calendar",enableScrolling:false,initComponent:function(){this.addEvents("showcalendar","hidecalendar","radiocalendar","colorchange");Ext.apply(this,{items:[{text:this.displayOnlyThisCalendarText,iconCls:"extensible-cal-icon-cal-show",handler:Ext.bind(this.handleRadioCalendarClick,this)},"-",{xtype:"extensible.calendarcolorpicker",id:this.id+"-calendar-color-picker",handler:Ext.bind(this.handleColorSelect,this)}]});this.addClass("x-calendar-list-menu");this.callParent(arguments)},afterRender:function(){this.callParent(arguments);this.palette=this.down("#"+this.id+"-calendar-color-picker");if(this.colorId){this.palette.select(this.colorId,true)}},handleRadioCalendarClick:function(b,a){this.fireEvent("radiocalendar",this,this.calendarId)},handleColorSelect:function(b,a){this.fireEvent("colorchange",this,this.calendarId,a,this.colorId);this.colorId=a;this.menuHide()},setCalendar:function(b,a){this.calendarId=b;this.colorId=a;if(this.rendered){this.palette.select(a,true)}return this},menuHide:function(){if(this.hideOnClick){this.hide()}}});Ext.define("Extensible.calendar.gadget.CalendarListPanel",{extend:"Ext.panel.Panel",alias:"widget.extensible.calendarlist",requires:["Ext.XTemplate","Extensible.calendar.gadget.CalendarListMenu"],title:"Calendars",collapsible:true,autoHeight:true,layout:"fit",menuSelector:"em",width:100,initComponent:function(){this.addCls("x-calendar-list");this.callParent(arguments)},afterRender:function(b,a){this.callParent(arguments);if(this.store){this.setStore(this.store,true)}this.refresh();this.body.on("click",this.onClick,this);this.body.on("mouseover",this.onMouseOver,this,{delegate:"li"});this.body.on("mouseout",this.onMouseOut,this,{delegate:"li"})},getListTemplate:function(){if(!this.tpl){this.tpl=!(Ext.isIE||Ext.isOpera)?Ext.create("Ext.XTemplate",'<ul class="x-unselectable"><tpl for=".">','<li id="{cmpId}" class="ext-cal-evr {colorCls} {hiddenCls}">{title}<em>&#160;</em></li>',"</tpl></ul>"):Ext.create("Ext.XTemplate",'<ul class="x-unselectable"><tpl for=".">','<li id="{cmpId}" class="ext-cal-evo {colorCls} {hiddenCls}">','<div class="ext-cal-evm">','<div class="ext-cal-evi">{title}<em>&#160;</em></div>',"</div>","</li>","</tpl></ul>");this.tpl.compile()}return this.tpl},setStore:function(a,b){if(!b&&this.store){this.store.un("load",this.refresh,this);this.store.un("add",this.refresh,this);this.store.un("remove",this.refresh,this);this.store.un("update",this.onUpdate,this);this.store.un("clear",this.refresh,this)}if(a){a.on("load",this.refresh,this);a.on("add",this.refresh,this);a.on("remove",this.refresh,this);a.on("update",this.onUpdate,this);a.on("clear",this.refresh,this)}this.store=a},onUpdate:function(b,c,a){if(a==Ext.data.Record.COMMIT){this.refresh()}},refresh:function(){if(this.skipRefresh){return}var e=[],c=0,f=null,b=Extensible.calendar.data.CalendarMappings,d=this.store.getRange(),a=d.length;for(;c<a;c++){f={cmpId:this.id+"__"+d[c].data[b.CalendarId.name],title:d[c].data[b.Title.name],colorCls:this.getColorCls(d[c].data[b.ColorId.name])};if(d[c].data[b.IsHidden.name]===true){f.hiddenCls="ext-cal-hidden"}e[e.length]=f}this.getListTemplate().overwrite(this.body,e)},getColorCls:function(a){return"x-cal-"+a+"-ad"},toggleCalendar:function(e,d){var c=this.store.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,e),a=Extensible.calendar.data.CalendarMappings,b=c.data[a.IsHidden.name];c.set([a.IsHidden.name],!b);if(d!==false){c.commit()}},showCalendar:function(c,b){var a=this.store.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,c);if(a.data[Extensible.calendar.data.CalendarMappings.IsHidden.name]===true){this.toggleCalendar(c,b)}},hideCalendar:function(c,b){var a=this.store.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,c);if(a.data[Extensible.calendar.data.CalendarMappings.IsHidden.name]!==true){this.toggleCalendar(c,b)}},radioCalendar:function(f){var b=0,e,c=Extensible.calendar.data.CalendarMappings.CalendarId.name,d=this.store.getRange(),a=d.length;for(;b<a;b++){e=d[b].data[c];if(e==f){this.showCalendar(e,false)}else{this.hideCalendar(e,false)}}this.skipRefresh=true;this.store.sync();delete this.skipRefresh;this.refresh()},onMouseOver:function(b,a){Ext.fly(a).addCls("hover")},onMouseOut:function(b,a){Ext.fly(a).removeCls("hover")},getCalendarId:function(a){return a.id.split("__")[1]},getCalendarItemEl:function(a){return Ext.get(this.id+"__"+a)},onClick:function(c,a){var b;if(b=c.getTarget(this.menuSelector,3,true)){this.showEventMenu(b,c.getXY())}else{if(b=c.getTarget("li",3,true)){this.toggleCalendar(this.getCalendarId(b))}}},handleColorChange:function(d,e,c,a){var b=this.store.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,e);b.data[Extensible.calendar.data.CalendarMappings.ColorId.name]=c;b.commit()},handleRadioCalendar:function(a,b){this.radioCalendar(b)},showEventMenu:function(a,b){var d=this.getCalendarId(a.parent("li")),c=this.store.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,d);colorId=c.data[Extensible.calendar.data.CalendarMappings.ColorId.name];if(!this.menu){this.menu=Ext.create("Extensible.calendar.gadget.CalendarListMenu");this.menu.on("colorchange",this.handleColorChange,this);this.menu.on("radiocalendar",this.handleRadioCalendar,this)}this.menu.setCalendar(d,colorId);this.menu.showAt(b)}});Ext.define("Extensible.calendar.menu.Event",{extend:"Ext.menu.Menu",alias:"widget.extensible.eventcontextmenu",requires:["Ext.menu.DatePicker"],hideOnClick:true,ignoreParentClicks:true,editDetailsText:"Edit Details",deleteText:"Delete",moveToText:"Move to...",copyToText:"Copy to...",enableScrolling:false,initComponent:function(){this.addEvents("editdetails","eventdelete","eventmove","eventcopy");this.buildMenu();this.callParent(arguments)},buildMenu:function(){var a=this;if(a.rendered){return}a.dateMenu=Ext.create("Ext.menu.DatePicker",{scope:a,handler:a.onEventMoveSelected});a.copyMenu=Ext.create("Ext.menu.DatePicker",{scope:a,handler:a.onEventCopySelected});Ext.apply(a,{items:[{text:a.editDetailsText,iconCls:"extensible-cal-icon-evt-edit",scope:a,handler:function(){a.fireEvent("editdetails",a,a.rec,a.ctxEl)}},{text:a.deleteText,iconCls:"extensible-cal-icon-evt-del",scope:a,handler:function(){a.fireEvent("eventdelete",a,a.rec,a.ctxEl)}},"-",{text:a.moveToText,iconCls:"extensible-cal-icon-evt-move",menu:a.dateMenu},{text:a.copyToText,iconCls:"extensible-cal-icon-evt-copy",menu:a.copyMenu}]})},onEventMoveSelected:function(b,a){this.doCopyOrMove(a,"move")},onEventCopySelected:function(b,a){this.doCopyOrMove(a,"copy")},doCopyOrMove:function(a,b){a=Extensible.Date.copyTime(this.rec.data[Extensible.calendar.data.EventMappings.StartDate.name],a);this.fireEvent("event"+b,this,this.rec,a)},showForEvent:function(e,b,d){var c=this,a=e.data[Extensible.calendar.data.EventMappings.StartDate.name];c.rec=e;c.ctxEl=b;c.dateMenu.picker.setValue(a);c.copyMenu.picker.setValue(a);c.showAt(d)},onHide:function(){this.callParent(arguments);delete this.ctxEl}});Ext.define("Extensible.calendar.form.EventDetails",{extend:"Ext.form.Panel",alias:"widget.extensible.eventeditform",requires:["Extensible.form.field.DateRange","Extensible.calendar.form.field.ReminderCombo","Extensible.calendar.data.EventMappings","Extensible.calendar.form.field.CalendarCombo","Extensible.form.recurrence.Fieldset","Ext.layout.container.Column","Extensible.form.recurrence.RangeEditWindow"],labelWidth:65,labelWidthRightCol:65,colWidthLeft:".9",colWidthRight:".1",title:"Event Form",titleTextAdd:"Add Event",titleTextEdit:"Edit Event",titleLabelText:"Title",datesLabelText:"When",reminderLabelText:"Reminder",notesLabelText:"Notes",locationLabelText:"Location",webLinkLabelText:"Web Link",calendarLabelText:"Calendar",repeatsLabelText:"Repeats",saveButtonText:"Save",deleteButtonText:"Delete",cancelButtonText:"Cancel",bodyStyle:"padding:20px 20px 10px;",border:false,buttonAlign:"center",autoScroll:true,recurrence:false,allowDefaultAdd:true,layout:"column",initComponent:function(){this.addEvents({eventadd:true,eventupdate:true,eventdelete:true,eventcancel:true});this.titleField=Ext.create("Ext.form.TextField",{fieldLabel:this.titleLabelText,name:Extensible.calendar.data.EventMappings.Title.name,anchor:"70%"});this.dateRangeField=Ext.create("Extensible.form.field.DateRange",{fieldLabel:this.datesLabelText,singleLine:false,anchor:"70%",listeners:{change:Ext.bind(this.onDateChange,this)}});this.reminderField=Ext.create("Extensible.calendar.form.field.ReminderCombo",{name:Extensible.calendar.data.EventMappings.Reminder.name,fieldLabel:this.reminderLabelText,anchor:"70%"});this.notesField=Ext.create("Ext.form.TextArea",{fieldLabel:this.notesLabelText,name:Extensible.calendar.data.EventMappings.Notes.name,grow:true,growMax:150,anchor:"70%"});this.locationField=Ext.create("Ext.form.TextField",{fieldLabel:this.locationLabelText,name:Extensible.calendar.data.EventMappings.Location.name,anchor:"70%"});this.urlField=Ext.create("Ext.form.TextField",{fieldLabel:this.webLinkLabelText,name:Extensible.calendar.data.EventMappings.Url.name,anchor:"70%"});var c=[],b=[this.titleField,this.dateRangeField,this.reminderField,this.notesField,this.locationField,this.urlField];if(this.recurrence){this.recurrenceField=Ext.create("Extensible.form.recurrence.Fieldset",{recurrenceOptions:this.recurrence,name:Extensible.calendar.data.EventMappings.RRule.name,fieldLabel:this.repeatsLabelText,anchor:"70%"});b.splice(2,0,this.recurrenceField)}if(this.calendarStore){this.calendarField=Ext.create("Extensible.calendar.form.field.CalendarCombo",{store:this.calendarStore,fieldLabel:this.calendarLabelText,name:Extensible.calendar.data.EventMappings.CalendarId.name,anchor:"70%"});b.splice(2,0,this.calendarField)}var a=Math.max(this.labelWidthRightCol,this.labelWidth);this.items=[{id:this.id+"-left-col",columnWidth:this.colWidthLeft,layout:"anchor",fieldDefaults:{labelWidth:a},border:false,items:b},{id:this.id+"-right-col",columnWidth:this.colWidthRight,layout:"anchor",fieldDefaults:{labelWidth:a},border:false,items:c}];this.fbar=[{text:this.saveButtonText,scope:this,handler:this.onSave},{itemId:this.id+"-del-btn",text:this.deleteButtonText,scope:this,handler:this.onDelete},{text:this.cancelButtonText,scope:this,handler:this.onCancel}];this.addCls("ext-evt-edit-form");Ext.apply(this.initialConfig,{trackResetOnLoad:true});this.callParent(arguments)},onDateChange:function(a,b){if(this.recurrenceField){this.recurrenceField.setStartDate(b[0])}},loadRecord:function(c){var a=this,b=Extensible.calendar.data.EventMappings;a.form.reset().loadRecord.apply(a.form,arguments);a.activeRecord=c;a.dateRangeField.setValue(c.data);if(a.recurrenceField){a.recurrenceField.setStartDate(c.data[b.StartDate.name]);a.recurrenceField.setValue(c.data[b.RRule.name]);if(!c.data[b.RInstanceStartDate.name]){c.data[b.RInstanceStartDate.name]=c.getStartDate()}}if(a.calendarField){a.calendarField.setValue(c.data[b.CalendarId.name])}if(c.phantom){a.setTitle(a.titleTextAdd);a.down("#"+a.id+"-del-btn").hide()}else{a.setTitle(a.titleTextEdit);a.down("#"+a.id+"-del-btn").show()}a.form.getFields().each(function(d){d.resetOriginalValue()});a.titleField.focus()},updateRecord:function(f){var h=f.fields,i=this.getForm().getValues(),a=Extensible.calendar.data.EventMappings,c,e={};h.each(function(l){c=l.name;if(c in i){e[c]=i[c]}});var b=this.dateRangeField.getValue(),j=e[a.IsAllDay.name]=b[2],d=j?Extensible.Date.clearTime(b[0]):b[0],g=j?Extensible.Date.clearTime(b[1]):b[1],k={days:1};k[Extensible.calendar.data.EventModel.resolution]=-1;e[a.StartDate.name]=d;e[a.EndDate.name]=j?Extensible.Date.add(g,k):g;if(a.Duration){e[a.Duration.name]=Extensible.Date.diff(d,e[a.EndDate.name],Extensible.calendar.data.EventModel.resolution)}f.set(e);return f.dirty||(f.phantom&&this.allowDefaultAdd)},onCancel:function(){this.cleanup(true);this.fireEvent("eventcancel",this,this.activeRecord)},cleanup:function(a){if(this.activeRecord){this.activeRecord.reject()}delete this.activeRecord;if(this.form.isDirty()){this.form.reset()}},onSave:function(){var b=this,a=b.activeRecord.isRecurring();if(!b.form.isValid()&&!b.allowDefaultAdd){return}if(!b.updateRecord(b.activeRecord)){b.onCancel();return}if(b.activeRecord.phantom){b.fireEvent("eventadd",b,b.activeRecord)}else{if(a){b.onRecurrenceUpdate()}else{b.fireEvent("eventupdate",b,b.activeRecord)}}},onRecurrenceUpdate:function(){Extensible.form.recurrence.RangeEditWindow.prompt({callback:this.onRecurrenceEditModeSelected,scope:this})},onRecurrenceEditModeSelected:function(b){var a=this;if(b){a.activeRecord.data[Extensible.calendar.data.EventMappings.REditMode.name]=b;a.fireEvent("eventupdate",a,a.activeRecord,a.animateTarget)}},onDelete:function(){this.fireEvent("eventdelete",this,this.activeRecord)}});Ext.define("Extensible.calendar.form.EventWindow",{extend:"Ext.window.Window",alias:"widget.extensible.eventeditwindow",requires:["Ext.form.Panel","Extensible.calendar.data.EventModel","Extensible.calendar.data.EventMappings","Extensible.form.recurrence.RangeEditWindow"],titleTextAdd:"Add Event",titleTextEdit:"Edit Event",width:610,labelWidth:75,detailsLinkText:"Edit Details...",savingMessage:"Saving changes...",deletingMessage:"Deleting event...",saveButtonText:"Save",deleteButtonText:"Delete",cancelButtonText:"Cancel",patientLabelTex:"Patient",categoryLabelTex:"Category",facilityLabelTex:"Facility",billingLabelTex:"Billing Facility",statusLabelTex:"Status",titleLabelText:"Notes",datesLabelText:"When",calendarLabelText:"Provider",closeAction:"hide",modal:false,resizable:false,constrain:true,editDetailsLinkClass:"edit-dtl-link",enableEditDetails:true,layout:"fit",formPanelConfig:{border:false},allowDefaultAdd:true,initComponent:function(){this.addEvents({eventadd:true,eventupdate:true,eventdelete:true,eventcancel:true,editdetails:true});this.fbar=this.getFooterBarConfig();this.callParent(arguments)},getFooterBarConfig:function(){var a=[{text:this.saveButtonText,itemId:this.id+"-save-btn",disabled:false,handler:this.onSave,scope:this},{text:this.deleteButtonText,itemId:this.id+"-delete-btn",disabled:false,handler:this.onDelete,scope:this,hideMode:"offsets"},{text:this.cancelButtonText,itemId:this.id+"-cancel-btn",disabled:false,handler:this.onCancel,scope:this}];if(this.enableEditDetails!==false){a.unshift({xtype:"tbtext",itemId:this.id+"-details-btn",text:'<a href="#" class="'+this.editDetailsLinkClass+'">'+this.detailsLinkText+"</a>"})}return a},onRender:function(b,a){this.formPanel=Ext.create("Ext.FormPanel",Ext.applyIf({fieldDefaults:{labelWidth:this.labelWidth},items:this.getFormItemConfigs()},this.formPanelConfig));this.add(this.formPanel);this.callParent(arguments)},getFormItemConfigs:function(){var a=[{xtype:"patienlivetsearch",itemId:this.id+"-patient_search",name:Extensible.calendar.data.EventMappings.Patient.name,emptyText:"Search for patient",hideLabel:false,fieldLabel:this.patientLabelTex,anchor:"100%",listeners:{scope:this,select:this.onPatientLiveSearchSelect}},{xtype:"textfield",itemId:this.id+"-title",name:Extensible.calendar.data.EventMappings.Title.name,anchor:"100%",readOnly:true,fieldLabel:this.patientLabelTex},{xtype:"mitos.calcategoriescombobox",itemId:this.id+"-category",name:Extensible.calendar.data.EventMappings.Category.name,fieldLabel:this.categoryLabelTex,anchor:"100%"},{xtype:"mitos.activefacilitiescombo",itemId:this.id+"-facility",name:Extensible.calendar.data.EventMappings.BillingFacility.name,fieldLabel:this.facilityLabelTex,anchor:"100%"},{xtype:"mitos.billingfacilitiescombo",itemId:this.id+"-billingfacility",name:Extensible.calendar.data.EventMappings.Facility.name,fieldLabel:this.billingLabelTex,anchor:"100%"},{xtype:"textfield",itemId:this.id+"-notes",name:Extensible.calendar.data.EventMappings.Notes.name,fieldLabel:this.titleLabelText,anchor:"100%"},{xtype:"extensible.daterangefield",itemId:this.id+"-dates",name:"dates",anchor:"95%",fieldLabel:this.datesLabelText},{xtype:"mitos.calstatuscombobox",itemId:this.id+"-status",name:Extensible.calendar.data.EventMappings.Status.name,fieldLabel:this.statusLabelTex,anchor:"100%"}];if(this.calendarStore){a.push({xtype:"extensible.calendarcombo",itemId:this.id+"-calendar",name:Extensible.calendar.data.EventMappings.CalendarId.name,anchor:"100%",fieldLabel:this.calendarLabelText,store:this.calendarStore})}return a},onPatientLiveSearchSelect:function(c){var a=c.up("form").getComponent(this.id+"-title"),b=c.rawValue;a.setValue(b)},afterRender:function(){this.callParent(arguments);this.el.addCls("ext-cal-event-win");this.initRefs();var a=this.getDockedItems("toolbar")[0].items.items[0];if(a.el.hasCls("x-component-default")){Ext.destroy(a)}},initRefs:function(){this.saveButton=this.down("#"+this.id+"-save-btn");this.deleteButton=this.down("#"+this.id+"-delete-btn");this.cancelButton=this.down("#"+this.id+"-cancel-btn");this.detailsButton=this.down("#"+this.id+"-details-btn");if(this.detailsButton){this.detailsButton.getEl().on("click",this.onEditDetailsClick,this)}this.titleField=this.down("#"+this.id+"-title");this.dateRangeField=this.down("#"+this.id+"-dates");this.calendarField=this.down("#"+this.id+"-calendar")},onEditDetailsClick:function(a){a.stopEvent();this.updateRecord(this.activeRecord,true);this.fireEvent("editdetails",this,this.activeRecord,this.animateTarget)},show:function(g,f){var c=this,e=Extensible.calendar.data.EventMappings,b,d;c.animateTarget=(Ext.isIE8&&Ext.isStrict)?null:f;c.callParent([c.animateTarget,function(){c.titleField.focus(false,100)},c]);b=c.formPanel.form;c.deleteButton[g.data&&g.data[e.EventId.name]?"show":"hide"]();if(g.data){d=g;c.formPanel.getComponent(this.id+"-patient_search").hide();c.formPanel.getComponent(this.id+"-title").show();c.setTitle(d.phantom?c.titleTextAdd:c.titleTextEdit);b.loadRecord(d)}else{c.formPanel.getComponent(this.id+"-patient_search").show();c.formPanel.getComponent(this.id+"-title").hide();c.setTitle(c.titleTextAdd);var h=g[e.StartDate.name],a=g[e.EndDate.name]||Extensible.Date.add(h,{hours:1});d=Ext.create("Extensible.calendar.data.EventModel");d.data[e.StartDate.name]=h;d.data[e.EndDate.name]=a;d.data[e.IsAllDay.name]=!!g[e.IsAllDay.name]||(h.getDate()!==Extensible.Date.add(a,{millis:1}).getDate());d.data[e.CalendarId.name]=c.calendarStore?c.calendarStore.getAt(0).data[Extensible.calendar.data.CalendarMappings.CalendarId.name]:"";if(e.Duration){d.data[e.Duration.name]=Extensible.Date.diff(h,a,Extensible.calendar.data.EventModel.resolution)}b.reset();b.loadRecord(d)}d.data[e.RInstanceStartDate.name]=d.getStartDate();c.dateRangeField.setValue(d.data);c.activeRecord=d;b.getFields().each(function(i){i.resetOriginalValue()});return c},roundTime:function(b,c){c=c||15;var a=parseInt(b.getMinutes(),10);return b.add("mi",c-(a%c))},onCancel:function(){this.cleanup(true);this.fireEvent("eventcancel",this,this.activeRecord,this.animateTarget)},cleanup:function(a){if(this.activeRecord){this.activeRecord.reject()}delete this.activeRecord;if(a===true){this.hide()}},updateRecord:function(f,m){var h=f.fields,j=this.formPanel.getForm().getValues(),a=Extensible.calendar.data.EventMappings,c,e={},i;h.each(function(n){c=n.name;if(c in j){e[c]=j[c]}});var b=this.dateRangeField.getValue(),k=e[a.IsAllDay.name]=b[2],d=k?Extensible.Date.clearTime(b[0]):b[0],g=k?Extensible.Date.clearTime(b[1]):b[1],l={days:1};l[Extensible.calendar.data.EventModel.resolution]=-1;e[a.StartDate.name]=d;e[a.EndDate.name]=k?Extensible.Date.add(g,l):g;if(a.Duration){e[a.Duration.name]=Extensible.Date.diff(d,e[a.EndDate.name],Extensible.calendar.data.EventModel.resolution)}f.beginEdit();f.set(e);if(!m||!i){f.endEdit()}return f.dirty||(f.phantom&&this.allowDefaultAdd)},onSave:function(){var c=this,b=c.formPanel.form,a=c.activeRecord.isRecurring();if(!b.isDirty()&&!c.allowDefaultAdd){c.onCancel();return}if(!b.isValid()){return}if(!c.updateRecord(c.activeRecord)){c.onCancel();return}if(c.activeRecord.phantom){c.fireEvent("eventadd",c,c.activeRecord,c.animateTarget)}else{if(a){c.onRecurrenceUpdate()}else{c.fireEvent("eventupdate",c,c.activeRecord,c.animateTarget)}}},onRecurrenceUpdate:function(){Extensible.form.recurrence.RangeEditWindow.prompt({callback:this.onRecurrenceEditModeSelected,scope:this})},onRecurrenceEditModeSelected:function(b){var a=this;if(b){a.activeRecord.data[Extensible.calendar.data.EventMappings.REditMode.name]=b;a.fireEvent("eventupdate",a,a.activeRecord,a.animateTarget)}},onDelete:function(){this.fireEvent("eventdelete",this,this.activeRecord,this.animateTarget)}});Ext.define("Extensible.calendar.view.AbstractCalendar",{extend:"Ext.Component",requires:["Ext.CompositeElement","Extensible.calendar.form.EventDetails","Extensible.calendar.form.EventWindow","Extensible.calendar.menu.Event","Extensible.calendar.dd.DragZone","Extensible.calendar.dd.DropZone","Extensible.form.recurrence.RangeEditWindow"],recurrence:false,recurrenceOptions:{expansionMode:"remote",expansionParam:{name:"singleEvents",value:true}},startDay:0,spansHavePriority:false,trackMouseOver:true,enableFx:true,enableAddFx:true,enableUpdateFx:false,enableRemoveFx:true,enableDD:true,enableContextMenus:true,suppressBrowserContextMenu:false,monitorResize:true,todayText:"Today",ddCreateEventText:"Create event for {0}",ddCopyEventText:"Copy event to {0}",ddMoveEventText:"Move event to {0}",ddResizeEventText:"Update event to {0}",defaultEventTitleText:"(No title)",dateParamStart:"startDate",dateParamEnd:"endDate",dateParamFormat:"Y-m-d",editModal:false,enableEditDetails:true,weekendCls:"ext-cal-day-we",prevMonthCls:"ext-cal-day-prev",nextMonthCls:"ext-cal-day-next",todayCls:"ext-cal-day-today",hideMode:"offsets",notifyOnExceptionTitle:"Server Error",notifyOnExceptionText:"The action failed with the following response:",notifyOnExceptionDefaultMessage:"An unknown error occurred",weekCount:1,dayCount:1,eventSelector:".ext-cal-evt",eventOverClass:"ext-evt-over",eventElIdDelimiter:"-evt-",dayElIdDelimiter:"-day-",recurringInstanceIdDelimiter:"-rid-",getEventBodyMarkup:Ext.emptyFn,getEventTemplate:Ext.emptyFn,initComponent:function(){this.setStartDate(this.startDate||new Date());this.callParent(arguments);if(this.readOnly===true){this.addCls("ext-cal-readonly")}this.addEvents({eventsrendered:true,eventclick:true,eventover:true,eventout:true,beforedatechange:true,datechange:true,rangeselect:true,beforeeventcopy:true,eventcopy:true,beforeeventmove:true,eventmove:true,initdrag:true,dayover:true,dayout:true,editdetails:true,eventadd:true,eventupdate:true,eventcancel:true,beforeeventdelete:true,eventdelete:true,eventexception:true})},afterRender:function(){this.callParent(arguments);this.renderTemplate();if(this.store){this.setStore(this.store,true);if(this.store.deferLoad){this.reloadStore(this.store.deferLoad);delete this.store.deferLoad}else{this.store.initialParams=this.getStoreParams()}}if(this.calendarStore){this.setCalendarStore(this.calendarStore,true)}this.on("resize",this.onResize,this);this.el.on({mouseover:this.onMouseOver,mouseout:this.onMouseOut,click:this.onClick,scope:this});if(this.enableContextMenus&&this.readOnly!==true){this.el.on("contextmenu",this.onContextMenu,this)}this.el.unselectable();if(this.enableDD&&this.readOnly!==true&&this.initDD){this.initDD()}this.on("eventsrendered",this.onEventsRendered);Ext.defer(this.forceSize,100,this)},getStoreDateParams:function(){var a={};a[this.dateParamStart]=Ext.Date.format(this.viewStart,this.dateParamFormat);a[this.dateParamEnd]=Ext.Date.format(this.viewEnd,this.dateParamFormat);return a},getStoreParams:function(){var a=this.getStoreDateParams();return a},reloadStore:function(b){Extensible.log("reloadStore");var a=this.recurrenceOptions;b=Ext.isObject(b)?b:{};b.params=b.params||{};Ext.apply(b.params,this.getStoreParams());if(this.recurrence&&a.expansionParam&&a.expansionMode==="remote"){b.params[a.expansionParam.name]=a.expansionParam.value}this.store.load(b)},onEventsRendered:function(){this.forceSize()},forceSize:function(){var b=this.el;if(b&&b.down){var e=b.down(".ext-cal-hd-ct"),c=b.down(".ext-cal-body-ct");if(!c||!e){return}var a=e.getHeight(),d=b.parent().getSize();c.setHeight(d.height-a)}},refresh:function(a){if(!this.isActiveView()){Extensible.log("refresh (AbstractCalendar), skipped for non-active view ("+this.id+")");return}Extensible.log("refresh (AbstractCalendar), reload = "+a);if(a===true){this.reloadStore()}else{this.prepareData();this.renderTemplate();this.renderItems()}},getWeekCount:function(){var a=Extensible.Date.diffDays(this.viewStart,this.viewEnd);return Math.ceil(a/this.dayCount)},prepareData:function(){var c=Ext.Date.getLastDateOfMonth(this.startDate),g=0,e=0,j=0,f=Ext.Date.clone(this.viewStart),a=this.weekCount<1?6:this.weekCount;this.eventGrid=[[]];this.allDayGrid=[[]];this.evtMaxCount=[];var b=this.store.queryBy(function(d){return this.isEventVisible(d.data)},this);var i=function(n){var m=Extensible.calendar.data.EventMappings,k=Ext.Date.clearTime(n.data[m.StartDate.name],true),l=f.getTime()===k.getTime(),d=(g===0&&e===0&&(f>n.data[m.StartDate.name]));return l||d};for(;g<a;g++){this.evtMaxCount[g]=this.evtMaxCount[g]||0;if(this.weekCount===-1&&f>c){break}this.eventGrid[g]=this.eventGrid[g]||[];this.allDayGrid[g]=this.allDayGrid[g]||[];for(e=0;e<this.dayCount;e++){if(b.getCount()>0){var h=b.filterBy(i,this);this.sortEventRecordsForDay(h);this.prepareEventGrid(h,g,e)}f=Extensible.Date.add(f,{days:1})}}this.currentWeekCount=g},prepareEventGrid:function(b,a,h){var f=this,g=0,e=Ext.Date.clone(f.viewStart),c;b.each(function(i){var j=Extensible.calendar.data.EventMappings;if(Extensible.Date.diffDays(i.data[j.StartDate.name],i.data[j.EndDate.name])>0){var d=Extensible.Date.diffDays(Extensible.Date.max(f.viewStart,i.data[j.StartDate.name]),Extensible.Date.min(f.viewEnd,i.data[j.EndDate.name]))+1;f.prepareEventGridSpans(i,f.eventGrid,a,h,d);f.prepareEventGridSpans(i,f.allDayGrid,a,h,d,true)}else{g=f.findEmptyRowIndex(a,h);f.eventGrid[a][h]=f.eventGrid[a][h]||[];f.eventGrid[a][h][g]=i;if(i.data[j.IsAllDay.name]){g=f.findEmptyRowIndex(a,h,true);f.allDayGrid[a][h]=f.allDayGrid[a][h]||[];f.allDayGrid[a][h][g]=i}}f.setMaxEventsForDay(a,h);return true},f)},setMaxEventsForDay:function(d,c){var a=(this.maxEventsPerDay+1)||999;var b=this[this.isHeaderView?"allDayGrid":"eventGrid"][d][c]||[];this.evtMaxCount[d]=this.evtMaxCount[d]||0;if(b.length&&this.evtMaxCount[d]<b.length){this.evtMaxCount[d]=Math.min(a,b.length)}},prepareEventGridSpans:function(i,a,h,g,j,k){var f=h,b=g,l=this.findEmptyRowIndex(h,g,k),e=Ext.Date.clone(this.viewStart);var c={event:i,isSpan:true,isSpanStart:true,spanLeft:false,spanRight:(g===6)};a[h][g]=a[h][g]||[];a[h][g][l]=c;this.setMaxEventsForDay(h,g);while(--j){e=Extensible.Date.add(e,{days:1});if(e>this.viewEnd){break}if(++b>6){b=0;f++;l=this.findEmptyRowIndex(f,0)}a[f]=a[f]||[];a[f][b]=a[f][b]||[];a[f][b][l]={event:i,isSpan:true,isSpanStart:(b===0),spanLeft:(f>h)&&(b%7===0),spanRight:(b===6)&&(j>1)};this.setMaxEventsForDay(f,b)}},findEmptyRowIndex:function(c,h,b){var g=b?this.allDayGrid:this.eventGrid,e=g[c]?g[c][h]||[]:[],f=0,a=e.length;for(;f<a;f++){if(e[f]===null){return f}}return a},renderTemplate:function(){if(this.tpl){this.tpl.overwrite(this.el,this.getTemplateParams());this.lastRenderStart=Ext.Date.clone(this.viewStart);this.lastRenderEnd=Ext.Date.clone(this.viewEnd)}},getTemplateParams:function(){return{viewStart:this.viewStart,viewEnd:this.viewEnd,startDate:this.startDate,dayCount:this.dayCount,weekCount:this.weekCount,weekendCls:this.weekendCls,prevMonthCls:this.prevMonthCls,nextMonthCls:this.nextMonthCls,todayCls:this.todayCls}},disableStoreEvents:function(){this.monitorStoreEvents=false;return this},enableStoreEvents:function(a){this.monitorStoreEvents=true;if(a===true){this.refresh()}return this},onResize:function(){this.refresh(false)},onInitDrag:function(){this.fireEvent("initdrag",this)},onEventDrop:function(c,a,b){this[(b||"move")+"Event"](c,a)},onCalendarEndDrag:function(e,a,d){this.dragPending=true;var c={},b=Ext.bind(this.onCalendarEndDragComplete,this,[d]);c[Extensible.calendar.data.EventMappings.StartDate.name]=e;c[Extensible.calendar.data.EventMappings.EndDate.name]=a;if(this.fireEvent("rangeselect",this,c,b)!==false){this.showEventEditor(c,null);if(this.editWin){this.editWin.on("hide",b,this,{single:true})}else{b()}}else{this.onCalendarEndDragComplete(b)}},onCalendarEndDragComplete:function(a){a();this.dragPending=false},storeReloadRequired:function(b,a){return a.records[0].isRecurring()},onUpdate:function(c,b,a){if(this.hidden===true||this.monitorStoreEvents===false){return}if(a===Ext.data.Record.COMMIT){Extensible.log("onUpdate");this.dismissEventEditor();this.refresh(this.storeReloadRequired("update",b));var d=b.records[0];if(this.enableFx&&this.enableUpdateFx){this.doUpdateFx(this.getEventEls(d.data[Extensible.calendar.data.EventMappings.EventId.name]),{scope:this})}}},doUpdateFx:function(a,b){this.highlightEvent(a,null,b)},onAdd:function(b,a){var c=a.records[0];if(this.hidden===true||this.monitorStoreEvents===false){return}Extensible.log("onAdd");this.dismissEventEditor();this.refresh(this.storeReloadRequired("create",a))},doAddFx:function(a,b){a.fadeIn(Ext.apply(b,{duration:2000}))},onRemove:function(b,a){if(this.hidden===true||this.monitorStoreEvents===false){return}Extensible.log("onRemove");this.dismissEventEditor();var d=this.storeReloadRequired("delete",a),c=a.records[0];if(this.enableFx&&this.enableRemoveFx){this.doRemoveFx(this.getEventEls(c.data[Extensible.calendar.data.EventMappings.EventId.name]),{remove:true,scope:this,callback:Ext.bind(this.refresh,this,[d])})}else{this.getEventEls(c.data[Extensible.calendar.data.EventMappings.EventId.name]).remove();this.refresh(d)}},doRemoveFx:function(a,b){if(a.getCount()===0&&Ext.isFunction(b.callback)){b.callback.call(b.scope||this)}else{a.fadeOut(b)}},highlightEvent:function(c,b,d){if(this.enableFx){if(Ext.isIE||Ext.isOpera){var a;c.each(function(f){f.highlight(b,Ext.applyif({attr:"color"},d));var e=f.down(".ext-cal-evm");if(e){e.highlight(b,d)}},this)}else{c.highlight(b,d)}}},getEventIdFromEl:function(c){c=Ext.get(c);var d,e="",a,b=c.dom.className.split(" ");Ext.each(b,function(f){d=f.split(this.eventElIdDelimiter);if(d.length>1){e=d[1];return false}},this);return e},getEventId:function(a){if(a===undefined&&this.tempEventId){a=this.tempEventId}return a},getEventSelectorCls:function(c,a){var d=a?".":"",e=this.getEventId(c),b=d+this.id+this.eventElIdDelimiter+e;return b},getEventEls:function(b){var a=this.el.select(this.getEventSelectorCls(this.getEventId(b),true),false);return Ext.create("Ext.CompositeElement",a)},isToday:function(){var a=Ext.Date.clearTime(new Date()).getTime();return this.viewStart.getTime()<=a&&this.viewEnd.getTime()>=a},isEventVisible:function(c){var h=Extensible.calendar.data.EventMappings,e=c.data||c,b=this.calendarStore?this.calendarStore.findRecord(h.CalendarId.name,c[h.CalendarId.name]):null;if(b&&b.data[Extensible.calendar.data.CalendarMappings.IsHidden.name]===true){return false}var g=this.viewStart.getTime(),a=this.viewEnd.getTime(),f=e[h.StartDate.name].getTime(),d=e[h.EndDate.name].getTime();return Extensible.Date.rangesOverlap(g,a,f,d)},isOverlapping:function(k,j){var i=k.data?k.data:k,h=j.data?j.data:j,e=Extensible.calendar.data.EventMappings,c=i[e.StartDate.name].getTime(),f=Extensible.Date.add(i[e.EndDate.name],{seconds:-1}).getTime(),b=h[e.StartDate.name].getTime(),d=Extensible.Date.add(h[e.EndDate.name],{seconds:-1}).getTime(),g=Extensible.Date.diff(i[e.StartDate.name],h[e.StartDate.name],"m");if(f<c){f=c}if(d<b){d=b}var m=Extensible.Date.rangesOverlap(c,f,b,d),l=this.minEventDisplayMinutes||0,a=l>0&&(g>-l&&g<l);return(m||a)},isEventSpanning:function(a){var d=Extensible.calendar.data.EventMappings,b=a.data||a,c;c=Extensible.Date.diffDays(b[d.StartDate.name],b[d.EndDate.name]);return c>0},getDayEl:function(a){return Ext.get(this.getDayId(a))},getDayId:function(a){if(Ext.isDate(a)){a=Ext.Date.format(a,"Ymd")}return this.id+this.dayElIdDelimiter+a},getStartDate:function(){return this.startDate},setStartDate:function(h,f){var e=this;Extensible.log("setStartDate (base) "+Ext.Date.format(h,"Y-m-d"));var c=Ext.Date.clone,b=e.startDate?c(e.startDate):null,d=c(h),a=e.viewStart?c(e.viewStart):null,g=e.viewEnd?c(e.viewEnd):null;if(e.fireEvent("beforedatechange",e,b,d,a,g)!==false){e.startDate=Ext.Date.clearTime(h);e.setViewBounds(h);if(e.ownerCalendarPanel&&e.ownerCalendarPanel.startDate!==e.startDate){e.ownerCalendarPanel.startDate=e.startDate}if(e.rendered){e.refresh(f)}e.fireEvent("datechange",e,c(e.startDate),c(e.viewStart),c(e.viewEnd))}},setViewBounds:function(a){var c=this,f=a||c.startDate,e=f.getDay()-c.startDay,d=Extensible.Date;if(e<0){e+=7}switch(this.weekCount){case 0:case 1:c.viewStart=c.dayCount<7&&!c.startDayIsStatic?f:d.add(f,{days:-e,clearTime:true});c.viewEnd=d.add(c.viewStart,{days:c.dayCount||7,seconds:-1});return;case -1:f=Ext.Date.getFirstDateOfMonth(f);e=f.getDay()-c.startDay;if(e<0){e+=7}c.viewStart=d.add(f,{days:-e,clearTime:true});var b=d.add(f,{months:1,seconds:-1});e=c.startDay;if(e>b.getDay()){e-=7}c.viewEnd=d.add(b,{days:6-b.getDay()+e});return;default:c.viewStart=d.add(f,{days:-e,clearTime:true});c.viewEnd=d.add(c.viewStart,{days:c.weekCount*7,seconds:-1})}},getViewBounds:function(){return{start:this.viewStart,end:this.viewEnd}},sortEventRecordsForDay:function(a){if(a.length<2){return}a.sortBy(Ext.bind(function(f,e){var d=f.data,c=e.data,h=Extensible.calendar.data.EventMappings;if(d[h.IsAllDay.name]){return -1}else{if(c[h.IsAllDay.name]){return 1}}if(this.spansHavePriority){var g=Extensible.Date.diffDays;if(g(d[h.StartDate.name],d[h.EndDate.name])>0){if(g(c[h.StartDate.name],c[h.EndDate.name])>0){if(d[h.StartDate.name].getTime()===c[h.StartDate.name].getTime()){return c[h.EndDate.name].getTime()-d[h.EndDate.name].getTime()}return d[h.StartDate.name].getTime()-c[h.StartDate.name].getTime()}return -1}else{if(g(c[h.StartDate.name],c[h.EndDate.name])>0){return 1}}return d[h.StartDate.name].getTime()-c[h.StartDate.name].getTime()}else{return d[h.StartDate.name].getTime()-c[h.StartDate.name].getTime()}},this))},moveTo:function(b,a){if(Ext.isDate(b)){this.setStartDate(b,a);return this.startDate}return b},moveNext:function(a){return this.moveTo(Extensible.Date.add(this.viewEnd,{days:1}),a)},movePrev:function(a){var b=Extensible.Date.diffDays(this.viewStart,this.viewEnd)+1;return this.moveDays(-b,a)},moveMonths:function(b,a){return this.moveTo(Extensible.Date.add(this.startDate,{months:b}),a)},moveWeeks:function(b,a){return this.moveTo(Extensible.Date.add(this.startDate,{days:b*7}),a)},moveDays:function(b,a){return this.moveTo(Extensible.Date.add(this.startDate,{days:b}),a)},moveToday:function(a){return this.moveTo(new Date(),a)},setStore:function(a,b){var c=this.store;if(!b&&c){c.un("load",this.onEventStoreLoad,this);c.un("clear",this.refresh,this);c.un("write",this.onWrite,this);c.getProxy().un("exception",this.onException,this)}if(a){a.on("load",this.onEventStoreLoad,this);a.on("clear",this.refresh,this);a.on("write",this.onWrite,this);a.getProxy().on("exception",this.onException,this)}this.store=a},onEventStoreLoad:function(a,b,c){Extensible.log("AbstractCalendar.onEventStoreLoad: store loaded");this.refresh(false)},onDataChanged:this.onEventStoreLoad,onException:function(c,b,a){Ext.each(a.records,function(d){if(d.dirty){if(d.phantom){d.unjoin(this.eventStore)}else{d.reject()}}},this);if(this.fireEvent("eventexception",this,b,a)!==false){this.notifyOnException(b,a)}},getExceptionMessage:function(a){var b="";if(a.responseText){b+="<br><b>responseText</b>: "+Ext.decode(a.responseText).message}if(a.message){b+="<br><b>message</b>: "+a.message}if(a.status){b+="<br><b>status</b>: "+a.status}if(a.statusText){b+="<br><b>statusText</b>: "+a.statusText}return b||("<br>"+this.notifyOnExceptionDefaultMessage)},notifyOnException:function(b,a){Ext.Msg.alert(this.notifyOnExceptionTitle,this.notifyOnExceptionText+"<br>"+this.getExceptionMessage(b))},setCalendarStore:function(a,b){if(!b&&this.calendarStore){this.calendarStore.un("datachanged",this.refresh,this);this.calendarStore.un("add",this.refresh,this);this.calendarStore.un("remove",this.refresh,this);this.calendarStore.un("update",this.refresh,this)}if(a){a.on("datachanged",this.refresh,this);a.on("add",this.refresh,this);a.on("remove",this.refresh,this);a.on("update",this.refresh,this)}this.calendarStore=a},getEventRecord:function(b){var a=this.store.find(Extensible.calendar.data.EventMappings.EventId.name,b,0,false,true,true);return this.store.getAt(a)},getEventRecordFromEl:function(a){return this.getEventRecord(this.getEventIdFromEl(a))},getEventEditor:function(){this.editWin=this.editWin||Ext.WindowMgr.get("ext-cal-editwin");if(!this.editWin){this.editWin=Ext.create("Extensible.calendar.form.EventWindow",{id:"ext-cal-editwin",calendarStore:this.calendarStore,modal:this.editModal,enableEditDetails:this.enableEditDetails,listeners:{eventadd:{fn:function(c,d,b,a){c.currentView.onEventEditorAdd(null,d,a)},scope:this},eventupdate:{fn:function(c,d,b,a){c.currentView.onEventEditorUpdate(null,d,a)},scope:this},eventdelete:{fn:function(c,d,b,a){c.currentView.onEventEditorDelete(null,d,a)},scope:this},editdetails:{fn:function(c,d,b,a){c.animateTarget=null;c.hide();c.currentView.fireEvent("editdetails",c.currentView,d)},scope:this},eventcancel:{fn:function(b,c,a){this.dismissEventEditor(null,a);b.currentView.onEventEditorCancel()},scope:this}}})}this.editWin.currentView=this;return this.editWin},showEventEditor:function(b,a){this.getEventEditor().show(b,a,this);return this},dismissEventEditor:function(b,c){if(this.newRecord&&this.newRecord.phantom){this.store.remove(this.newRecord)}delete this.newRecord;var a=Ext.WindowMgr.get("ext-cal-editwin");if(a){a[b?b:"hide"](c)}return this},save:function(){if(!this.store.autoSync){this.store.sync()}},onWrite:function(b,a){if(a.wasSuccessful()){switch(a.action){case"create":this.onAdd(b,a);break;case"update":this.onUpdate(b,a,Ext.data.Record.COMMIT);break;case"destroy":this.onRemove(b,a);break}}},onEventEditorAdd:function(a,b){this.newRecord=b;if(this.store.indexOf(b)===-1){this.store.add(b)}this.save();this.fireEvent("eventadd",this,b)},onEventEditorUpdate:function(a,b){this.save();this.fireEvent("eventupdate",this,b)},onEventEditorDelete:function(a,b){b._deleting=true;this.deleteEvent(b)},onEventEditorCancel:function(a,b){this.fireEvent("eventcancel",this,b)},onDayClick:function(c,b,a){if(this.readOnly===true){return}if(this.fireEvent("dayclick",this,Ext.Date.clone(c),b,a)!==false){var e=Extensible.calendar.data.EventMappings,d={};d[e.StartDate.name]=c;d[e.IsAllDay.name]=b;this.showEventEditor(d,a)}},showEventMenu:function(a,c){var b=this;if(!b.eventMenu){b.eventMenu=Ext.create("Extensible.calendar.menu.Event",{listeners:{editdetails:Ext.bind(b.onEditDetails,b),eventdelete:Ext.bind(b.onDeleteEvent,b),eventmove:Ext.bind(b.onMoveEvent,b),eventcopy:Ext.bind(b.onCopyEvent,b)}})}b.eventMenu.showForEvent(b.getEventRecordFromEl(a),a,c);b.menuActive=true},onCopyEvent:function(c,b,a){this.menuActive=false;this.shiftEvent(b,a,"copy")},onMoveEvent:function(c,b,a){this.menuActive=false;this.shiftEvent(b,a,"move")},copyEvent:function(b,a){this.shiftEvent(b,a,"copy")},moveEvent:function(b,a){this.shiftEvent(b,a,"move")},shiftEvent:function(d,c,e){var b=this,a;if(e==="move"){if(Extensible.Date.compare(d.getStartDate(),c)===0){return}a=d}else{a=d.clone()}if(b.fireEvent("beforeevent"+e,b,a,Ext.Date.clone(c))!==false){if(a.isRecurring()){b.onRecurrenceEditModeSelected("single",a,c,e)}else{b.doShiftEvent(a,c,e)}}},onRecurrenceEditModeSelected:function(b,d,a,e){var c=Extensible.calendar.data.EventMappings;if(b){if(e==="copy"){d.clearRecurrence()}d.data[c.REditMode.name]=b;d.data[c.RInstanceStartDate.name]=d.getStartDate();this.doShiftEvent(d,a,e)}},doShiftEvent:function(e,b,f){var d=Extensible.calendar.data.EventMappings,c=b.getTime()-e.getStartDate().getTime(),a={};a[d.StartDate.name]=b;a[d.EndDate.name]=Extensible.Date.add(e.getEndDate(),{millis:c});e.set(a);if(e.phantom){this.store.add(e)}this.save();this.fireEvent("event"+f,this,e)},onEditDetails:function(c,b,a){this.fireEvent("editdetails",this,b,a);this.menuActive=false},onDeleteEvent:function(c,b,a){b._deleting=true;this.deleteEvent(b,a);this.menuActive=false},deleteEvent:function(c,a){var b=this;if(b.fireEvent("beforeeventdelete",b,c,a)!==false){if(c.isRecurring()){Extensible.form.recurrence.RangeEditWindow.prompt({callback:Ext.bind(b.onRecurrenceDeleteModeSelected,b,[c,a],true),scope:b})}else{b.doDeleteEvent(c,a)}}},onRecurrenceDeleteModeSelected:function(b,c,a){if(b){c.data[Extensible.calendar.data.EventMappings.REditMode.name]=b;c.data[Extensible.calendar.data.EventMappings.RInstanceStartDate.name]=c.getStartDate();this.doDeleteEvent(c,a)}},doDeleteEvent:function(b,a){this.store.remove(b);this.save();this.fireEvent("eventdelete",this,b,a)},onContextMenu:function(d,b){var c=d.getTarget(this.eventSelector,5,true),a=false;if(c){this.dismissEventEditor().showEventMenu(c,d.getXY());a=true}if(a||this.suppressBrowserContextMenu===true){d.preventDefault()}},onClick:function(d,a){var c=this,b=d.getTarget(c.eventSelector,5);if(c.dropZone){c.dropZone.clearShims()}if(c.menuActive===true){c.menuActive=false;return true}if(b){var g=c.getEventIdFromEl(b),f=c.getEventRecord(g);if(f&&c.fireEvent("eventclick",c,f,b)!==false){if(c.readOnly!==true){c.showEventEditor(f,b)}}return true}},onMouseOver:function(b,a){if(this.trackMouseOver!==false&&(this.dragZone===undefined||!this.dragZone.dragging)){if(!this.handleEventMouseEvent(b,a,"over")){this.handleDayMouseEvent(b,a,"over")}}},onMouseOut:function(b,a){if(this.trackMouseOver!==false&&(this.dragZone===undefined||!this.dragZone.dragging)){if(!this.handleEventMouseEvent(b,a,"out")){this.handleDayMouseEvent(b,a,"out")}}},handleEventMouseEvent:function(g,c,f){var d=g.getTarget(this.eventSelector,5,true);if(d){var a=Ext.get(g.getRelatedTarget());if(d===a||d.contains(a)){return true}var h=this.getEventIdFromEl(d);if(this.eventOverClass!==""){var b=this.getEventEls(h);b[f==="over"?"addCls":"removeCls"](this.eventOverClass)}this.fireEvent("event"+f,this,this.getEventRecord(h),d);return true}return false},getDateFromId:function(c,b){var a=c.split(b);return a[a.length-1]},handleDayMouseEvent:function(i,d,g){d=i.getTarget("td",3);if(d){if(d.id&&d.id.indexOf(this.dayElIdDelimiter)>-1){var h=this.getDateFromId(d.id,this.dayElIdDelimiter),a=Ext.get(i.getRelatedTarget()),c,b;if(a){c=a.is("td")?a:a.up("td",3);b=c&&c.id?this.getDateFromId(c.id,this.dayElIdDelimiter):""}if(!a||h!==b){var f=this.getDayEl(h);if(f&&this.dayOverClass!==""){f[g==="over"?"addCls":"removeCls"](this.dayOverClass)}this.fireEvent("day"+g,this,Ext.Date.parseDate(h,"Ymd"),f)}}}},renderItems:function(){throw"This method must be implemented by a subclass"},isActiveView:function(){var a=this.ownerCalendarPanel;return(a&&a.getActiveView().id===this.id)},destroy:function(){this.callParent(arguments);if(this.el){this.el.un("contextmenu",this.onContextMenu,this)}Ext.destroy(this.editWin,this.eventMenu,this.dragZone,this.dropZone)}});Ext.define("Extensible.calendar.view.MonthDayDetail",{extend:"Ext.Component",alias:"widget.extensible.monthdaydetailview",requires:["Ext.XTemplate","Extensible.calendar.view.AbstractCalendar"],initComponent:function(){this.callParent(arguments);this.addEvents({eventsrendered:true})},afterRender:function(){this.tpl=this.getTemplate();this.callParent(arguments);this.el.on({click:this.view.onClick,mouseover:this.view.onMouseOver,mouseout:this.view.onMouseOut,scope:this.view})},getTemplate:function(){if(!this.tpl){this.tpl=Ext.create("Ext.XTemplate",'<div class="ext-cal-mdv x-unselectable">','<table class="ext-cal-mvd-tbl" cellpadding="0" cellspacing="0">',"<tbody>",'<tpl for=".">','<tr><td class="ext-cal-ev">{markup}</td></tr>',"</tpl>","</tbody>","</table>","</div>")}this.tpl.compile();return this.tpl},update:function(a){this.date=a;this.refresh()},refresh:function(){if(!this.rendered){return}var a=this.view.getEventTemplate(),b=[];evts=this.store.queryBy(function(d){var f=Ext.Date.clearTime(this.date,true).getTime(),i=Extensible.calendar.data.EventMappings,h=Ext.Date.clearTime(d.data[i.StartDate.name],true).getTime(),e=(f==h),g=false,k=d.data[i.CalendarId.name],c=this.calendarStore?this.calendarStore.getById(k):null;if(c&&c.data[Extensible.calendar.data.CalendarMappings.IsHidden.name]===true){return false}if(!e){var j=Ext.Date.clearTime(d.data[i.EndDate.name],true).getTime();g=h<f&&j>=f}return e||g},this);Extensible.calendar.view.AbstractCalendar.prototype.sortEventRecordsForDay.call(this,evts);evts.each(function(c){var d=c.data,e=Extensible.calendar.data.EventMappings;d._renderAsAllDay=d[e.IsAllDay.name]||Extensible.Date.diffDays(d[e.StartDate.name],d[e.EndDate.name])>0;d.spanLeft=Extensible.Date.diffDays(d[e.StartDate.name],this.date)>0;d.spanRight=Extensible.Date.diffDays(this.date,d[e.EndDate.name])>0;d.spanCls=(d.spanLeft?(d.spanRight?"ext-cal-ev-spanboth":"ext-cal-ev-spanleft"):(d.spanRight?"ext-cal-ev-spanright":""));b.push({markup:a.apply(this.getTemplateEventData(d))})},this);this.tpl.overwrite(this.el,b);this.fireEvent("eventsrendered",this,this.date,evts.getCount())},getTemplateEventData:function(a){var b=this.view.getTemplateEventData(a);b._elId="dtl-"+b._elId;return b}});Ext.define("Extensible.calendar.view.Month",{extend:"Extensible.calendar.view.AbstractCalendar",alias:"widget.extensible.monthview",requires:["Ext.XTemplate","Extensible.calendar.template.Month","Extensible.calendar.util.WeekEventRenderer","Extensible.calendar.view.MonthDayDetail"],moreText:"+{0} more...",detailsTitleDateFormat:"F j",showTime:true,showTodayText:true,showHeader:false,showWeekLinks:false,showWeekNumbers:false,weekLinkOverClass:"ext-week-link-over",morePanelMinWidth:220,daySelector:".ext-cal-day",moreSelector:".ext-cal-ev-more",weekLinkSelector:".ext-cal-week-link",weekCount:-1,dayCount:7,moreElIdDelimiter:"-more-",weekLinkIdDelimiter:"ext-cal-week-",initComponent:function(){this.callParent(arguments);this.addEvents({dayclick:true,weekclick:true,dayover:true,dayout:true})},initDD:function(){var a={view:this,createText:this.ddCreateEventText,copyText:this.ddCopyEventText,moveText:this.ddMoveEventText,ddGroup:this.ddGroup||this.id+"-MonthViewDD"};this.dragZone=Ext.create("Extensible.calendar.dd.DragZone",this.el,a);this.dropZone=Ext.create("Extensible.calendar.dd.DropZone",this.el,a)},onDestroy:function(){Ext.destroy(this.ddSelector);Ext.destroy(this.dragZone);Ext.destroy(this.dropZone);this.callParent(arguments)},afterRender:function(){if(!this.tpl){this.tpl=Ext.create("Extensible.calendar.template.Month",{id:this.id,showTodayText:this.showTodayText,todayText:this.todayText,showTime:this.showTime,showHeader:this.showHeader,showWeekLinks:this.showWeekLinks,showWeekNumbers:this.showWeekNumbers});this.tpl.compile()}this.addCls("ext-cal-monthview ext-cal-ct");this.callParent(arguments)},onResize:function(){if(this.monitorResize){this.maxEventsPerDay=this.getMaxEventsPerDay();this.refresh(false)}},forceSize:function(){if(this.showWeekLinks&&this.el){var e=this.el.down(".ext-cal-hd-days-tbl"),d=this.el.select(".ext-cal-bg-tbl"),c=this.el.select(".ext-cal-evt-tbl"),b=this.el.down(".ext-cal-week-link").getWidth(),a=this.el.getWidth()-b;e.setWidth(a);d.setWidth(a);c.setWidth(a)}this.callParent(arguments)},initClock:function(){if(Ext.fly(this.id+"-clock")!==null){this.prevClockDay=new Date().getDay();if(this.clockTask){Ext.TaskManager.stop(this.clockTask)}this.clockTask=Ext.TaskManager.start({run:function(){var b=Ext.fly(this.id+"-clock"),a=new Date();if(a.getDay()==this.prevClockDay){if(b){b.update(Ext.Date.format(a,Extensible.Date.use24HourTime?"G:i":"g:ia"))}}else{this.prevClockDay=a.getDay();this.moveTo(a)}},scope:this,interval:1000})}},getMoreText:function(a){return this.moreText},getEventBodyMarkup:function(){if(!this.eventBodyMarkup){this.eventBodyMarkup=["{Title}",'<tpl if="_isReminder">','<i class="ext-cal-ic ext-cal-ic-rem">&#160;</i>',"</tpl>",'<tpl if="_isRecurring">','<i class="ext-cal-ic ext-cal-ic-rcr">&#160;</i>',"</tpl>",'<tpl if="spanLeft">','<i class="ext-cal-spl">&#160;</i>',"</tpl>",'<tpl if="spanRight">','<i class="ext-cal-spr">&#160;</i>',"</tpl>"].join("")}return this.eventBodyMarkup},getEventTemplate:function(){if(!this.eventTpl){var b,a=this.getEventBodyMarkup();b=!(Ext.isIE||Ext.isOpera)?Ext.create("Ext.XTemplate",'<div class="{_extraCls} {spanCls} ext-cal-evt ext-cal-evr">',a,"</div>"):Ext.create("Ext.XTemplate",'<tpl if="_renderAsAllDay">','<div class="{_extraCls} {spanCls} ext-cal-evt ext-cal-evo">','<div class="ext-cal-evm">','<div class="ext-cal-evi">',"</tpl>",'<tpl if="!_renderAsAllDay">','<div class="{_extraCls} ext-cal-evt ext-cal-evr">',"</tpl>",a,'<tpl if="_renderAsAllDay">',"</div>","</div>","</tpl>","</div>");b.compile();this.eventTpl=b}return this.eventTpl},getTemplateEventData:function(i){var g=Extensible.calendar.data.EventMappings,e=[this.getEventSelectorCls(i[g.EventId.name])],f={},b=i[g.RRule.name]!="",a="x-cal-default",h=i[g.Title.name],c=Extensible.Date.use24HourTime?"G:i ":"g:ia ";if(this.calendarStore&&i[g.CalendarId.name]){var d=this.calendarStore.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,i[g.CalendarId.name]);if(d){a="x-cal-"+d.data[Extensible.calendar.data.CalendarMappings.ColorId.name]}}a+=(i._renderAsAllDay?"-ad":"");e.push(a);if(i._renderAsAllDay){e.push("ext-evt-block")}if(this.getEventClass){var d=this.getEventRecord(i[g.EventId.name]),j=this.getEventClass(d,!!i._renderAsAllDay,f,this.store);e.push(j)}f._extraCls=e.join(" ");f._isRecurring=i[g.RRule.name]&&i[g.RRule.name]!="";f._isReminder=i[g.Reminder.name]&&i[g.Reminder.name]!="";f.Title=(i[g.IsAllDay.name]?"":Ext.Date.format(i[g.StartDate.name],c))+(!h||h.length==0?this.defaultEventTitleText:h);return Ext.applyIf(f,i)},refresh:function(a){Extensible.log("refresh (MonthView)");if(this.detailPanel){this.detailPanel.hide()}this.callParent(arguments);if(this.showTime!==false){this.initClock()}},renderItems:function(){Extensible.calendar.util.WeekEventRenderer.render({eventGrid:this.allDayOnly?this.allDayGrid:this.eventGrid,viewStart:this.viewStart,tpl:this.getEventTemplate(),maxEventsPerDay:this.maxEventsPerDay,viewId:this.id,templateDataFn:Ext.bind(this.getTemplateEventData,this),evtMaxCount:this.evtMaxCount,weekCount:this.weekCount,dayCount:this.dayCount,getMoreText:Ext.bind(this.getMoreText,this)});this.fireEvent("eventsrendered",this)},getDayEl:function(a){return Ext.get(this.getDayId(a))},getDayId:function(a){if(Ext.isDate(a)){a=Ext.Date.format(a,"Ymd")}return this.id+this.dayElIdDelimiter+a},getWeekIndex:function(b){var a=this.getDayEl(b).up(".ext-cal-wk-ct");return parseInt(a.id.split("-wk-")[1])},getDaySize:function(f){var c=this.el.getBox(),e=this.getViewPadding(),a=(c.width-e.width)/this.dayCount,b=(c.height-e.height)/this.getWeekCount();if(f){var d=this.el.select(".ext-cal-dtitle").last().parent("tr");b=d?b-d.getHeight(true):b}return{height:b,width:a}},getEventHeight:function(){if(!this.eventHeight){var a=this.el.select(".ext-cal-evt").first();if(a){this.eventHeight=a.parent("td").getHeight()}else{return 16}}return this.eventHeight},getMaxEventsPerDay:function(){var b=this.getDaySize(true).height,c=this.getEventHeight(),a=Math.max(Math.floor((b-c)/c),0);return a},getViewPadding:function(d){var d=d||"tlbr",f=d.indexOf("t")>-1,e=d.indexOf("l")>-1,b=d.indexOf("r")>-1,a=this.showHeader&&f?this.el.select(".ext-cal-hd-days-tbl").first().getHeight():0,c=0;if(this.isHeaderView){if(e){c=this.el.select(".ext-cal-gutter").first().getWidth()}if(b){c+=this.el.select(".ext-cal-gutter-rt").first().getWidth()}}else{if(this.showWeekLinks&&e){c=this.el.select(".ext-cal-week-link").first().getWidth()}}return{height:a,width:c}},getDayAt:function(h,e){var c=this.el.getBox(),f=this.getViewPadding("tl"),g=this.getDaySize(),d=Math.floor(((h-c.x-f.width)/g.width)),b=Math.floor(((e-c.y-f.height)/g.height)),i=(b*7)+d,a=Extensible.Date.add(this.viewStart,{days:i});return{date:a,el:this.getDayEl(a)}},moveNext:function(){return this.moveMonths(1,true)},movePrev:function(){return this.moveMonths(-1,true)},onInitDrag:function(){this.callParent(arguments);Ext.select(this.daySelector).removeCls(this.dayOverClass);if(this.detailPanel){this.detailPanel.hide()}},onMoreClick:function(a){if(!this.detailPanel){this.detailPanel=Ext.create("Ext.Panel",{id:this.id+"-details-panel",title:Ext.Date.format(a,this.detailsTitleDateFormat),layout:"fit",floating:true,renderTo:Ext.getBody(),hideMode:"offsets",tools:[{type:"close",handler:function(d,b,c){c.ownerCt.hide()}}],items:{xtype:"extensible.monthdaydetailview",id:this.id+"-details-view",date:a,view:this,store:this.store,calendarStore:this.calendarStore,listeners:{eventsrendered:Ext.bind(this.onDetailViewUpdated,this)}}});if(this.enableContextMenus&&this.readOnly!==true){this.detailPanel.body.on("contextmenu",this.onContextMenu,this)}}else{this.detailPanel.setTitle(Ext.Date.format(a,this.detailsTitleDateFormat))}this.detailPanel.getComponent(this.id+"-details-view").update(a)},onDetailViewUpdated:function(i,b,j){var a=this.detailPanel,g=this.getDayEl(b),f=g.getBox(),m=a.el.down(".ext-cal-mdv").getHeight(),e=a.getDockedItems("header")[0],d=a.frameSize||{top:0,bottom:0},c=d.top+d.bottom+e.getHeight(),l=m+c+5,k=Ext.getBody().getHeight()-20,h=Math.min(l,k);if(h===k){a.body.addCls("ext-cal-overflow-y")}else{a.body.removeCls("ext-cal-overflow-y")}a.setWidth(Math.max(f.width,this.morePanelMinWidth));a.setHeight(h);a.show();a.getPositionEl().alignTo(g,"t-t?")},onHide:function(){this.callParent(arguments);if(this.detailPanel){this.detailPanel.hide()}},onClick:function(d,a){if(this.detailPanel){this.detailPanel.hide()}if(el=d.getTarget(this.moreSelector,3)){var b=el.id.split(this.moreElIdDelimiter)[1];this.onMoreClick(Ext.Date.parseDate(b,"Ymd"));return}if(el=d.getTarget(this.weekLinkSelector,3)){var b=el.id.split(this.weekLinkIdDelimiter)[1];this.fireEvent("weekclick",this,Ext.Date.parseDate(b,"Ymd"));return}if(Extensible.calendar.view.Month.superclass.onClick.apply(this,arguments)){return}if(el=d.getTarget("td",3)){if(el.id&&el.id.indexOf(this.dayElIdDelimiter)>-1){var c=el.id.split(this.dayElIdDelimiter),b=c[c.length-1];this.onDayClick(Ext.Date.parseDate(b,"Ymd"),false,Ext.get(this.getDayId(b)));return}}},handleDayMouseEvent:function(d,a,c){var b=d.getTarget(this.weekLinkSelector,3,true);if(b){b[c=="over"?"addCls":"removeCls"](this.weekLinkOverClass);return}this.callParent(arguments)},destroy:function(){this.callParent(arguments);if(this.detailsPanel){this.detailPanel.body.un("contextmenu",this.onContextMenu,this)}}});Ext.define("Extensible.calendar.view.DayHeader",{extend:"Extensible.calendar.view.Month",alias:"widget.extensible.dayheaderview",requires:["Extensible.calendar.template.DayHeader"],weekCount:1,dayCount:1,allDayOnly:true,monitorResize:false,isHeaderView:true,afterRender:function(){if(!this.tpl){this.tpl=Ext.create("Extensible.calendar.template.DayHeader",{id:this.id,showTodayText:this.showTodayText,todayText:this.todayText,showTime:this.showTime})}this.tpl.compile();this.addCls("ext-cal-day-header");this.callParent(arguments)},forceSize:Ext.emptyFn,refresh:function(a){Extensible.log("refresh (DayHeaderView)");this.callParent(arguments);this.recalcHeaderBox()},recalcHeaderBox:function(){var b=this.el.down(".ext-cal-evt-tbl"),a=b.getHeight();this.el.setHeight(a+7);this.el.down(".ext-cal-hd-ad-inner").setHeight(a+5);this.el.down(".ext-cal-bg-tbl").setHeight(a+5)},moveNext:function(){return this.moveDays(this.dayCount,false)},movePrev:function(){return this.moveDays(-this.dayCount,false)},onClick:function(d,a){if(el=d.getTarget("td",3)){if(el.id&&el.id.indexOf(this.dayElIdDelimiter)>-1){var c=el.id.split(this.dayElIdDelimiter),b=c[c.length-1];this.onDayClick(Ext.Date.parseDate(b,"Ymd"),true,Ext.get(this.getDayId(b,true)));return}}this.callParent(arguments)},isActiveView:function(){var a=this.ownerCalendarPanel;return(a&&a.getActiveView().isDayView)}});Ext.define("Extensible.calendar.view.DayBody",{extend:"Extensible.calendar.view.AbstractCalendar",alias:"widget.extensible.daybodyview",requires:["Ext.XTemplate","Extensible.calendar.template.DayBody","Extensible.calendar.data.EventMappings","Extensible.calendar.dd.DayDragZone","Extensible.calendar.dd.DayDropZone"],dayColumnElIdDelimiter:"-day-col-",hourIncrement:60,initComponent:function(){this.callParent(arguments);if(this.readOnly===true){this.enableEventResize=false}this.incrementsPerHour=this.hourIncrement/this.ddIncrement;this.minEventHeight=this.minEventDisplayMinutes/(this.hourIncrement/this.hourHeight);this.addEvents({beforeeventresize:true,eventresize:true,dayclick:true})},initDD:function(){var a={view:this,createText:this.ddCreateEventText,copyText:this.ddCopyEventText,moveText:this.ddMoveEventText,resizeText:this.ddResizeEventText,ddIncrement:this.ddIncrement,ddGroup:this.ddGroup||this.id+"-DayViewDD"};this.el.ddScrollConfig={vthresh:Ext.isIE||Ext.isOpera?100:40,hthresh:-1,frequency:50,increment:100,ddGroup:this.ddGroup||this.id+"-DayViewDD"};this.dragZone=Ext.create("Extensible.calendar.dd.DayDragZone",this.el,Ext.apply({},a));this.dropZone=Ext.create("Extensible.calendar.dd.DayDropZone",this.el,a)},refresh:function(a){Extensible.log("refresh (DayBodyView)");var b=this.el.getScroll().top;this.callParent(arguments);if(this.scrollReady){this.scrollTo(b)}},scrollTo:function(b,a){a=a||(Ext.isIE||Ext.isOpera);if(a){Ext.defer(function(){this.el.scrollTo("top",b);this.scrollReady=true},10,this)}else{this.el.scrollTo("top",b);this.scrollReady=true}},afterRender:function(){if(!this.tpl){this.tpl=Ext.create("Extensible.calendar.template.DayBody",{id:this.id,dayCount:this.dayCount,showTodayText:this.showTodayText,todayText:this.todayText,showTime:this.showTime,showHourSeparator:this.showHourSeparator,viewStartHour:this.viewStartHour,viewEndHour:this.viewEndHour,hourIncrement:this.hourIncrement,hourHeight:this.hourHeight})}this.tpl.compile();this.addCls("ext-cal-body-ct");this.callParent(arguments);var b=Math.max(this.scrollStartHour,this.viewStartHour),a=Math.max(0,b-this.viewStartHour);if(a>0){this.scrollTo(a*this.hourHeight)}},forceSize:Ext.emptyFn,onEventResize:function(e,b){var a=this,d=Extensible.calendar.data.EventMappings,c=Extensible.Date.compare;if(c(e.getStartDate(),b[d.StartDate.name])===0&&c(e.getEndDate(),b[d.EndDate.name])===0){return}if(a.fireEvent("beforeeventresize",a,e,b)!==false){if(e.isRecurring()){if(a.recurrenceOptions.editSingleOnResize){a.onRecurrenceResizeModeSelected("single",e,b)}else{Extensible.form.recurrence.RangeEditWindow.prompt({callback:Ext.bind(a.onRecurrenceResizeModeSelected,a,[e,b],true),scope:a})}}else{a.doEventResize(e,b)}}},onRecurrenceResizeModeSelected:function(b,d,a){var c=Extensible.calendar.data.EventMappings;if(b){d.data[c.REditMode.name]=b;d.data[c.RInstanceStartDate.name]=d.getStartDate();this.doEventResize(d,a)}},doEventResize:function(e,c){var d=Extensible.calendar.data.EventMappings,b=d.StartDate.name,f=d.EndDate.name,a={};a[b]=c[b];a[f]=c[f];if(d.Duration){a[d.Duration.name]=Extensible.Date.diff(c[b],c[f],Extensible.calendar.data.EventModel.resolution)}e.set(a);this.save();this.fireEvent("eventupdate",this,e);this.fireEvent("eventresize",this,e)},getEventBodyMarkup:function(){if(!this.eventBodyMarkup){this.eventBodyMarkup=["{Title}",'<tpl if="_isReminder">','<i class="ext-cal-ic ext-cal-ic-rem">&#160;</i>',"</tpl>",'<tpl if="_isRecurring">','<i class="ext-cal-ic ext-cal-ic-rcr">&#160;</i>',"</tpl>"].join("")}return this.eventBodyMarkup},getEventTemplate:function(){if(!this.eventTpl){this.eventTpl=!(Ext.isIE||Ext.isOpera)?Ext.create("Ext.XTemplate",'<div id="{_elId}" class="{_extraCls} ext-cal-evt ext-cal-evr" ','style="left: {_left}%; width: {_width}%; top: {_top}px; height: {_height}px;">','<div class="ext-evt-bd">',this.getEventBodyMarkup(),"</div>",this.enableEventResize?'<div class="ext-evt-rsz"><div class="ext-evt-rsz-h">&#160;</div></div>':"","</div>"):Ext.create("Ext.XTemplate",'<div id="{_elId}" class="ext-cal-evt {_extraCls}" ','style="left: {_left}%; width: {_width}%; top: {_top}px;">','<div class="ext-cal-evb">&#160;</div>','<dl style="height: {_height}px;" class="ext-cal-evdm">','<dd class="ext-evt-bd">',this.getEventBodyMarkup(),"</dd>",this.enableEventResize?'<div class="ext-evt-rsz"><div class="ext-evt-rsz-h">&#160;</div></div>':"","</dl>",'<div class="ext-cal-evb">&#160;</div>',"</div>");this.eventTpl.compile()}return this.eventTpl},getEventAllDayTemplate:function(){if(!this.eventAllDayTpl){var b,a=this.getEventBodyMarkup();b=!(Ext.isIE||Ext.isOpera)?Ext.create("Ext.XTemplate",'<div class="{_extraCls} {spanCls} ext-cal-evt ext-cal-evr" ','style="left: {_left}%; width: {_width}%; top: {_top}px; height: {_height}px;">',a,"</div>"):Ext.create("Ext.XTemplate",'<div class="ext-cal-evt" ','style="left: {_left}%; width: {_width}%; top: {_top}px; height: {_height}px;">','<div class="{_extraCls} {spanCls} ext-cal-evo">','<div class="ext-cal-evm">','<div class="ext-cal-evi">',a,"</div>","</div>","</div>","</div>");b.compile();this.eventAllDayTpl=b}return this.eventAllDayTpl},getTemplateEventData:function(i){var g=Extensible.calendar.data.EventMappings,e=[this.getEventSelectorCls(i[g.EventId.name])],f={},a="x-cal-default",h=i[g.Title.name],c=Extensible.Date.use24HourTime?"G:i ":"g:ia ",b=i[g.RRule.name]!=="",d;this.getTemplateEventBox(i);if(this.calendarStore&&i[g.CalendarId.name]){d=this.calendarStore.findRecord(Extensible.calendar.data.CalendarMappings.CalendarId.name,i[g.CalendarId.name]);if(d){a="x-cal-"+d.data[Extensible.calendar.data.CalendarMappings.ColorId.name]}}a+=(i._renderAsAllDay?"-ad":"")+(Ext.isIE||Ext.isOpera?"-x":"");e.push(a);e.push("ext-evt-block");if(this.getEventClass){d=this.getEventRecord(i[g.EventId.name]);var j=this.getEventClass(d,!!i._renderAsAllDay,f,this.store);e.push(j)}f._extraCls=e.join(" ");f._isRecurring=i[g.RRule.name]&&i[g.RRule.name]!=="";f._isReminder=i[g.Reminder.name]&&i[g.Reminder.name]!=="";f.Title=(i[g.IsAllDay.name]?"":Ext.Date.format(i[g.StartDate.name],c))+(!h||h.length===0?this.defaultEventTitleText:h);return Ext.applyIf(f,i)},getEventPositionOffsets:function(){return{top:0,height:-1}},getTemplateEventBox:function(i){var c=this.hourHeight/this.hourIncrement,b=i[Extensible.calendar.data.EventMappings.StartDate.name],d=i[Extensible.calendar.data.EventMappings.EndDate.name],g=Math.max(b.getHours()-this.viewStartHour,0),h=Math.min(d.getHours()-this.viewStartHour,this.viewEndHour-this.viewStartHour),a=g*this.hourIncrement,e=h*this.hourIncrement,j=Extensible.Date.add(Ext.Date.clone(d),{hours:this.viewEndHour,clearTime:true}),f=this.getEventPositionOffsets();if(b.getHours()>=this.viewStartHour){a+=b.getMinutes()}if(d<=j){e+=d.getMinutes()}i._left=0;i._width=100;i._top=a*c+f.top;i._height=Math.max(((e-a)*c),this.minEventHeight)+f.height},renderItems:function(){var q=0,k,e=[];for(;q<this.dayCount;q++){var v=0,a=0,y=0,w=this.eventGrid[0][q],c=w?w.length:0;for(;v<c;v++){k=w[v];if(!k){continue}var u=k.data||k.event.data,f=Extensible.calendar.data.EventMappings,x=u[f.IsAllDay.name]===true,p=this.isEventSpanning(k.event||k),g=x||p;if(g){continue}Ext.apply(u,{cls:"ext-cal-ev",_positioned:true});e.push({data:this.getTemplateEventData(u),date:Extensible.Date.add(this.viewStart,{days:q})})}}var r=0,o=0,s=[],m=e.length,b,n,h;for(;r<m;r++){k=e[r].data;n=null;h=k[Extensible.calendar.data.EventMappings.StartDate.name].getDate();for(o=0;o<m;o++){if(r===o){continue}n=e[o].data;if(this.isOverlapping(k,n)){k._overlap=k._overlap===undefined?1:k._overlap+1;if(r<o){if(k._overcol===undefined){k._overcol=0}n._overcol=k._overcol+1;s[h]=s[h]?Math.max(s[h],n._overcol):n._overcol}}}}for(r=0;r<m;r++){k=e[r].data;h=k[Extensible.calendar.data.EventMappings.StartDate.name].getDate();if(k._overlap!==undefined){var z=100/(s[h]+1),B=100-(z*k._overlap);k._width=z;k._left=z*k._overcol}var t=this.getEventTemplate().apply(k),A=this.id+"-day-col-"+Ext.Date.format(e[r].date,"Ymd");Ext.core.DomHelper.append(A,t)}this.fireEvent("eventsrendered",this)},getDayEl:function(a){return Ext.get(this.getDayId(a))},getDayId:function(a){if(Ext.isDate(a)){a=Ext.Date.format(a,"Ymd")}return this.id+this.dayColumnElIdDelimiter+a},getDaySize:function(){var a=this.el.down(".ext-cal-day-col-inner").getBox();return{height:a.height,width:a.width}},getDayAt:function(m,i){var e=".ext-cal-body-ct",g=this.el.down(".ext-cal-day-times").getWidth(),q=this.el.getBox(),l=this.getDaySize(false),n=m-q.x-g,a=Math.floor(n/l.width),k=this.el.getScroll(),p=this.el.down(".ext-cal-bg-row"),o=p.getHeight()/this.incrementsPerHour,j=i-q.y-o+k.top,h=Math.max(0,Math.ceil(j/o)),b=h*(this.hourIncrement/this.incrementsPerHour),d=Extensible.Date.add(this.viewStart,{days:a,minutes:b,hours:this.viewStartHour}),c=this.getDayEl(d),f=m;if(c){f=c.getLeft()}return{date:d,el:c,timeBox:{x:f,y:(h*this.hourHeight/this.incrementsPerHour)+q.y-k.top,width:l.width,height:o}}},onClick:function(f,b){if(this.dragPending||Extensible.calendar.view.DayBody.superclass.onClick.apply(this,arguments)){return}if(f.getTarget(".ext-cal-day-times",3)!==null){return}var c=f.getTarget("td",3);if(c){if(c.id&&c.id.indexOf(this.dayElIdDelimiter)>-1){var d=this.getDateFromId(c.id,this.dayElIdDelimiter);this.onDayClick(Ext.Date.parseDate(d,"Ymd"),true,Ext.get(this.getDayId(d)));return}}var a=this.getDayAt(f.getX(),f.getY());if(a&&a.date){this.onDayClick(a.date,false,null)}},isActiveView:function(){var a=this.ownerCalendarPanel;return(a&&a.getActiveView().isDayView)}});Ext.define("Extensible.calendar.view.Day",{extend:"Ext.Container",alias:"widget.extensible.dayview",requires:["Extensible.calendar.view.AbstractCalendar","Extensible.calendar.view.DayHeader","Extensible.calendar.view.DayBody"],showTime:true,showTodayText:true,dayCount:1,enableEventResize:true,ddIncrement:30,minEventDisplayMinutes:30,showHourSeparator:true,viewStartHour:0,viewEndHour:24,scrollStartHour:7,hourHeight:42,hideMode:"offsets",minBodyHeight:150,isDayView:true,initComponent:function(){this.ddCreateEventText=this.ddCreateEventText||Extensible.calendar.view.AbstractCalendar.prototype.ddCreateEventText;this.ddMoveEventText=this.ddMoveEventText||Extensible.calendar.view.AbstractCalendar.prototype.ddMoveEventText;this.dayCount=this.dayCount>7?7:(this.dayCount<1?1:this.dayCount);var b=Ext.apply({},this.initialConfig);b.showTime=this.showTime;b.showTodayText=this.showTodayText;b.todayText=this.todayText;b.dayCount=this.dayCount;b.weekCount=1;b.readOnly=this.readOnly;b.ddIncrement=this.ddIncrement;b.minEventDisplayMinutes=this.minEventDisplayMinutes;var c=Ext.applyIf({xtype:"extensible.dayheaderview",id:this.id+"-hd",ownerCalendarPanel:this.ownerCalendarPanel},b);var a=Ext.applyIf({xtype:"extensible.daybodyview",enableEventResize:this.enableEventResize,showHourSeparator:this.showHourSeparator,viewStartHour:this.viewStartHour,viewEndHour:this.viewEndHour,scrollStartHour:this.scrollStartHour,hourHeight:this.hourHeight,id:this.id+"-bd",ownerCalendarPanel:this.ownerCalendarPanel},b);this.items=[c,a];this.addCls("ext-cal-dayview ext-cal-ct");this.callParent(arguments)},afterRender:function(){this.callParent(arguments);this.header=Ext.getCmp(this.id+"-hd");this.body=Ext.getCmp(this.id+"-bd");this.body.on("eventsrendered",this.forceSize,this);this.on("resize",this.onResize,this)},refresh:function(a){Extensible.log("refresh (DayView)");if(a===undefined){a=false}this.header.refresh(a);this.body.refresh(a)},forceSize:function(){var a=this;Ext.defer(function(){var b=a.el.up(".x-panel-body"),d=a.el.down(".ext-cal-day-header"),c=b?b.getHeight()-d.getHeight():false;if(c){if(c<a.minBodyHeight){c=a.minBodyHeight;a.addCls("ext-cal-overflow-y")}else{a.removeCls("ext-cal-overflow-y")}a.el.down(".ext-cal-body-ct").setHeight(c-1)}},Ext.isIE?1:0,a)},onResize:function(){this.forceSize();Ext.defer(this.refresh,Ext.isIE?1:0,this)},doHide:function(){this.header.doHide.apply(this,arguments);this.body.doHide.apply(this,arguments)},getViewBounds:function(){return this.header.getViewBounds()},getStartDate:function(){return this.header.getStartDate()},setStartDate:function(a){this.header.setStartDate(a,false);this.body.setStartDate(a,true)},renderItems:function(){this.header.renderItems();this.body.renderItems()},isToday:function(){return this.header.isToday()},moveTo:function(a){var a=this.header.moveTo(a,false);this.body.moveTo(a,true);this.forceSize();return a},moveNext:function(){var a=this.header.moveNext(false);this.body.moveNext(true);this.forceSize();return a},movePrev:function(b){var a=this.header.movePrev(false);this.body.movePrev(true);this.forceSize();return a},moveDays:function(b){var a=this.header.moveDays(b,false);this.body.moveDays(b,true);this.forceSize();return a},moveToday:function(){var a=this.header.moveToday(false);this.body.moveToday(true);this.forceSize();return a},showEventEditor:function(b,a){return Extensible.calendar.view.AbstractCalendar.prototype.showEventEditor.apply(this,arguments)},dismissEventEditor:function(a){return Extensible.calendar.view.AbstractCalendar.prototype.dismissEventEditor.apply(this,arguments)}});Ext.define("Extensible.calendar.view.MultiDay",{extend:"Extensible.calendar.view.Day",alias:"widget.extensible.multidayview",dayCount:3,startDayIsStatic:false,moveNext:function(a){return this.moveDays(this.startDayIsStatic?7:this.dayCount,a)},movePrev:function(a){return this.moveDays(this.startDayIsStatic?-7:-this.dayCount,a)}});Ext.define("Extensible.calendar.view.Week",{extend:"Extensible.calendar.view.MultiDay",alias:"widget.extensible.weekview",dayCount:7});Ext.define("Extensible.calendar.view.MultiWeek",{extend:"Extensible.calendar.view.Month",alias:"widget.extensible.multiweekview",weekCount:2,moveNext:function(){return this.moveWeeks(this.weekCount,true)},movePrev:function(){return this.moveWeeks(-this.weekCount,true)}});Ext.define("Extensible.calendar.CalendarPanel",{extend:"Ext.panel.Panel",alias:"widget.extensible.calendarpanel",requires:["Ext.layout.container.Card","Extensible.calendar.view.Day","Extensible.calendar.view.Week","Extensible.calendar.view.Month","Extensible.calendar.view.MultiDay","Extensible.calendar.view.MultiWeek"],recurrence:false,showDayView:true,showMultiDayView:false,showWeekView:true,showMultiWeekView:true,showMonthView:true,showNavBar:true,todayText:"Today",showTodayText:true,showTime:true,readOnly:false,showNavToday:true,showNavJump:true,showNavNextPrev:true,jumpToText:"Jump to:",goText:"Go",dayText:"Day",multiDayText:"{0} Days",weekText:"Week",multiWeekText:"{0} Weeks",monthText:"Month",editModal:false,enableEditDetails:true,layout:{type:"card",deferredRender:true},startDate:new Date(),initComponent:function(){this.tbar={cls:"ext-cal-toolbar",border:true,items:[]};this.viewCount=0;var h,b=(this.multiDayViewCfg&&this.multiDayViewCfg.dayCount)||3,f=(this.multiWeekViewCfg&&this.multiWeekViewCfg.weekCount)||2;if(this.showNavToday){this.tbar.items.push({id:this.id+"-tb-today",text:this.todayText,handler:this.onTodayClick,scope:this})}if(this.showNavNextPrev){this.tbar.items.push({id:this.id+"-tb-prev",handler:this.onPrevClick,scope:this,iconCls:"x-tbar-page-prev"});this.tbar.items.push({id:this.id+"-tb-next",handler:this.onNextClick,scope:this,iconCls:"x-tbar-page-next"})}if(this.showNavJump){this.tbar.items.push(this.jumpToText);this.tbar.items.push({id:this.id+"-tb-jump-dt",xtype:"datefield",width:120,showToday:false});this.tbar.items.push({id:this.id+"-tb-jump",text:this.goText,handler:this.onJumpClick,scope:this})}this.tbar.items.push("->");if(this.showDayView){this.tbar.items.push({id:this.id+"-tb-day",text:this.dayText,handler:this.onDayNavClick,scope:this,toggleGroup:this.id+"-tb-views"});this.viewCount++}if(this.showMultiDayView){h=Ext.String.format(this.getMultiDayText(b),b);this.tbar.items.push({id:this.id+"-tb-multiday",text:h,handler:this.onMultiDayNavClick,scope:this,toggleGroup:this.id+"-tb-views"});this.viewCount++}if(this.showWeekView){this.tbar.items.push({id:this.id+"-tb-week",text:this.weekText,handler:this.onWeekNavClick,scope:this,toggleGroup:this.id+"-tb-views"});this.viewCount++}if(this.showMultiWeekView){h=Ext.String.format(this.getMultiWeekText(f),f);this.tbar.items.push({id:this.id+"-tb-multiweek",text:h,handler:this.onMultiWeekNavClick,scope:this,toggleGroup:this.id+"-tb-views"});this.viewCount++}if(this.showMonthView||this.viewCount===0){this.tbar.items.push({id:this.id+"-tb-month",text:this.monthText,handler:this.onMonthNavClick,scope:this,toggleGroup:this.id+"-tb-views"});this.viewCount++;this.showMonthView=true}var g=this.viewCount-1;this.activeItem=(this.activeItem===undefined?g:(this.activeItem>g?g:this.activeItem));if(this.showNavBar===false){delete this.tbar;this.addCls("x-calendar-nonav")}this.callParent(arguments);this.addEvents({eventadd:true,eventupdate:true,beforeeventdelete:true,eventdelete:true,eventcancel:true,viewchange:true,editdetails:true});this.addCls("x-cal-panel");if(this.eventStore){this.store=this.eventStore;delete this.eventStore}this.setStore(this.store);var i={showToday:this.showToday,todayText:this.todayText,showTodayText:this.showTodayText,showTime:this.showTime,readOnly:this.readOnly,recurrence:this.recurrence,store:this.store,calendarStore:this.calendarStore,editModal:this.editModal,enableEditDetails:this.enableEditDetails,ownerCalendarPanel:this};if(this.showDayView){var e=Ext.apply({xtype:"extensible.dayview",title:this.dayText},i);e=Ext.apply(Ext.apply(e,this.viewConfig),this.dayViewCfg);e.id=this.id+"-day";this.initEventRelay(e);this.add(e)}if(this.showMultiDayView){var a=Ext.apply({xtype:"extensible.multidayview",title:this.getMultiDayText(b)},i);a=Ext.apply(Ext.apply(a,this.viewConfig),this.multiDayViewCfg);a.id=this.id+"-multiday";this.initEventRelay(a);this.add(a)}if(this.showWeekView){var j=Ext.applyIf({xtype:"extensible.weekview",title:this.weekText},i);j=Ext.apply(Ext.apply(j,this.viewConfig),this.weekViewCfg);j.id=this.id+"-week";this.initEventRelay(j);this.add(j)}if(this.showMultiWeekView){var d=Ext.applyIf({xtype:"extensible.multiweekview",title:this.getMultiWeekText(f)},i);d=Ext.apply(Ext.apply(d,this.viewConfig),this.multiWeekViewCfg);d.id=this.id+"-multiweek";this.initEventRelay(d);this.add(d)}if(this.showMonthView){var c=Ext.applyIf({xtype:"extensible.monthview",title:this.monthText,listeners:{weekclick:{fn:function(l,k){this.showWeek(k)},scope:this}}},i);c=Ext.apply(Ext.apply(c,this.viewConfig),this.monthViewCfg);c.id=this.id+"-month";this.initEventRelay(c);this.add(c)}this.add(Ext.applyIf({xtype:"extensible.eventeditform",id:this.id+"-edit",calendarStore:this.calendarStore,recurrence:this.recurrence,listeners:{eventadd:{scope:this,fn:this.onEventAdd},eventupdate:{scope:this,fn:this.onEventUpdate},eventdelete:{scope:this,fn:this.onEventDelete},eventcancel:{scope:this,fn:this.onEventCancel}}},this.editViewCfg))},initEventRelay:function(a){a.listeners=a.listeners||{};a.listeners.afterrender={fn:function(b){this.relayEvents(b,["eventsrendered","eventclick","dayclick","eventover","eventout","beforedatechange","datechange","rangeselect","beforeeventcopy","eventcopy","beforeeventmove","eventmove","initdrag","dayover","dayout","beforeeventresize","eventresize","eventadd","eventupdate","beforeeventdelete","eventdelete","eventcancel","eventexception"]);b.on("editdetails",this.onEditDetails,this)},scope:this,single:true}},afterRender:function(){this.callParent(arguments);this.body.addCls("x-cal-body");this.updateNavState();this.setActiveView()},getMultiDayText:function(a){return this.multiDayText},getMultiWeekText:function(a){return this.multiWeekText},setStore:function(a,b){var c=this.store;if(!b&&c){c.un("write",this.onWrite,this)}if(a){a.on("write",this.onWrite,this)}this.store=a},onStoreAdd:function(c,b,a){this.hideEditForm()},onStoreUpdate:function(b,c,a){if(a===Ext.data.Record.COMMIT){this.hideEditForm()}},onStoreRemove:function(a,b){this.hideEditForm()},onWrite:function(b,a){var c=a.records[0];switch(a.action){case"create":this.onStoreAdd(b,c);break;case"update":this.onStoreUpdate(b,c,Ext.data.Record.COMMIT);break;case"destroy":this.onStoreRemove(b,c);break}},onEditDetails:function(b,c,a){if(this.fireEvent("editdetails",this,b,c,a)!==false){this.showEditForm(c)}},save:function(){if(!this.store.autoSync){this.store.sync()}},onEventAdd:function(a,b){if(!b.store){this.store.add(b);this.save()}this.fireEvent("eventadd",this,b)},onEventUpdate:function(a,b){this.save();this.fireEvent("eventupdate",this,b)},onEventDelete:function(a,b){this.store.remove(b);this.save();this.fireEvent("eventdelete",this,b)},onEventCancel:function(a,b){this.hideEditForm();this.fireEvent("eventcancel",this,b)},showEditForm:function(a){this.preEditView=this.layout.getActiveItem().id;this.setActiveView(this.id+"-edit");this.layout.getActiveItem().loadRecord(a);return this},hideEditForm:function(){if(this.preEditView){this.setActiveView(this.preEditView);delete this.preEditView}return this},setActiveView:function(f,a){var e=this,d=e.layout,b=e.id+"-edit",c;if(a){e.startDate=a}if(f!==d.getActiveItem().id){c=e.getDockedItems("toolbar")[0];if(c){c[f===b?"hide":"show"]()}d.setActiveItem(f||e.activeItem);e.doComponentLayout();e.activeView=d.getActiveItem();if(f!==b){if(f&&f!==e.preEditView){d.activeItem.setStartDate(e.startDate,true)}e.updateNavState()}e.fireViewChange()}},fireViewChange:function(){if(this.layout&&this.layout.getActiveItem){var a=this.layout.getActiveItem(),b=Ext.Date.clone;if(a){var d;if(a.getViewBounds){var c=a.getViewBounds();d={viewStart:b(c.start),viewEnd:b(c.end),activeDate:b(a.getStartDate())}}if(a.dismissEventEditor){a.dismissEventEditor()}this.fireEvent("viewchange",this,a,d)}}},updateNavState:function(){var b=this,d=b.layout.activeItem;if(d&&b.showNavBar!==false){var c=d.id.split(b.id+"-")[1],a=Ext.getCmp(b.id+"-tb-"+c);if(b.showNavToday){Ext.getCmp(b.id+"-tb-today").setDisabled(d.isToday())}a.toggle(true)}},setStartDate:function(a){Extensible.log("setStartDate (CalendarPanel");this.startDate=a;this.layout.activeItem.setStartDate(a,true);this.updateNavState();this.fireViewChange();return this},showWeek:function(a){this.setActiveView(this.id+"-week",a)},onTodayClick:function(){this.startDate=this.layout.activeItem.moveToday(true);this.updateNavState();this.fireViewChange()},onJumpClick:function(){var a=Ext.getCmp(this.id+"-tb-jump-dt").getValue();if(a!==""){this.startDate=this.layout.activeItem.moveTo(a,true);this.updateNavState();this.fireViewChange()}},onPrevClick:function(){this.startDate=this.layout.activeItem.movePrev(true);this.updateNavState();this.fireViewChange()},onNextClick:function(){this.startDate=this.layout.activeItem.moveNext(true);this.updateNavState();this.fireViewChange()},onDayNavClick:function(){this.setActiveView(this.id+"-day")},onMultiDayNavClick:function(){this.setActiveView(this.id+"-multiday")},onWeekNavClick:function(){this.setActiveView(this.id+"-week")},onMultiWeekNavClick:function(){this.setActiveView(this.id+"-multiweek")},onMonthNavClick:function(){this.setActiveView(this.id+"-month")},getActiveView:function(){return this.layout.activeItem}});Ext.define("App.view.calendar.Calendar",{extend:"App.classes.RenderPanel",id:"panelCalendar",pageTitle:i18n.calendar_events,constructor:function(){this.callParent(arguments);this.calendarStore=Ext.create("Extensible.calendar.data.MemoryCalendarStore",{autoLoad:true,proxy:{type:"direct",api:{read:Calendar.getCalendars},noCache:false,reader:{type:"json",root:"calendars"}}});this.eventStore=Ext.create("Extensible.calendar.data.EventStore",{autoLoad:true,proxy:{type:"direct",api:{read:Calendar.getEvents,create:Calendar.addEvent,update:Calendar.updateEvent,destroy:Calendar.deleteEvent},noCache:false,reader:{type:"json",root:"data"},writer:{type:"json",nameProperty:"mapping"},listeners:{exception:function(b,a){var c=a.message?a.message:Ext.decode(a.responseText).message;Ext.Msg.alert("Server Error",c)}}},listeners:{scope:this,write:function(b,a){say(b);say(a);var c=Ext.value(a.records[0].data[Extensible.calendar.data.EventMappings.Title.name],"(No title)");if(a.action=="create"){this.msg(i18n.add,'Added "'+c+'"')}else{if(a.action=="update"){this.msg(i18n.update,'Updated "'+c+'"')}else{if(a.action=="destroy"){this.msg(i18n["delete"],'Deleted "'+c+'"')}}}}}});this.pageBody=[{xtype:"panel",layout:"border",border:true,items:[{id:"app-west",region:"west",width:179,border:false,items:[{xtype:"datepicker",id:"app-nav-picker",cls:"ext-cal-nav-picker",listeners:{select:{fn:function(b,a){say(a);Ext.getCmp("app-calendar").setStartDate(a)},scope:this}}},{xtype:"extensible.calendarlist",id:"app-calendarlist",store:this.calendarStore,collapsible:true,border:false,width:178}]},{xtype:"extensible.calendarpanel",eventStore:this.eventStore,calendarStore:this.calendarStore,border:false,id:"app-calendar",region:"center",activeItem:3,viewConfig:{enableFx:false,viewStartHour:8,viewEndHour:21,minEventDisplayMinutes:15,showTime:false},monthViewCfg:{showHeader:true,showWeekLinks:true,showWeekNumbers:true},multiWeekViewCfg:{},enableEditDetails:false,listeners:{eventclick:{fn:function(){this.clearMsg()},scope:this},eventover:function(){},eventout:function(){},eventadd:{fn:function(a,b){this.showMsg(i18n.event+" "+b.data[Extensible.calendar.data.EventMappings.Title.name]+" "+i18n.was_updated)},scope:this},eventupdate:{fn:function(a,b){this.showMsg(i18n.event+" "+b.data[Extensible.calendar.data.EventMappings.Title.name]+" "+i18n.was_updated)},scope:this},eventcancel:{fn:function(){},scope:this},viewchange:{fn:function(c,a,b){if(b){}},scope:this},dayclick:{fn:function(){this.clearMsg()},scope:this},rangeselect:{fn:function(){this.clearMsg()},scope:this},eventmove:{fn:function(a,c){var d=Extensible.calendar.data.EventMappings,b=c.data[d.IsAllDay.name]?"":" \\a\\t g:i a";c.commit();this.showMsg(i18n.event+" "+c.data[d.Title.name]+" "+i18n.was_moved_to+" "+Ext.Date.format(c.data[d.StartDate.name],("F jS"+b)))},scope:this},eventresize:{fn:function(a,b){b.commit();this.showMsg(i18n.event+" "+b.data[Extensible.calendar.data.EventMappings.Title.name]+" "+i18n.was_updated)},scope:this},eventdelete:{fn:function(a,b){this.eventStore.remove(b);this.showMsg(i18n.event+" "+b.data[Extensible.calendar.data.EventMappings.Title.name]+" "+i18n.was_deleted)},scope:this},initdrag:{fn:function(){},scope:this}}}]}];this.callParent()},onActive:function(d){var c=this,b=Ext.getCmp("app-calendar"),a=Ext.getCmp("app-calendarlist");b.getActiveView().refresh(true);c.calendarStore.load({callback:function(){a.doLayout()}});d(true)},showMsg:function(a){Ext.fly("app-msg").update(a).removeCls("x-hidden")},clearMsg:function(){Ext.fly("app-msg").update("").addCls("x-hidden")}});Ext.define("App.view.messages.Messages",{extend:"App.classes.RenderPanel",id:"panelMessages",pageTitle:i18n.messages+" ("+i18n.inbox+")",pageLayout:"border",defaults:{split:true},uses:["App.classes.GridPanel","App.classes.LivePatientSearch","App.classes.combo.MsgStatus","App.classes.combo.MsgNoteType","App.classes.combo.Users"],initComponent:function(){var a=this;Ext.define("MessagesModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"date",type:"string"},{name:"body",type:"string"},{name:"pid",type:"string"},{name:"patient_name",type:"string"},{name:"from_user",type:"string"},{name:"to_user",type:"string"},{name:"subject",type:"string"},{name:"facility_id",type:"string"},{name:"authorized",type:"string"},{name:"to_id",type:"string"},{name:"from_id",type:"string"},{name:"message_status",type:"string"},{name:"note_type",type:"string"}]});a.storeMsgs=Ext.create("Ext.data.Store",{model:"MessagesModel",proxy:{type:"direct",api:{read:Messages.getMessages,create:Messages.sendNewMessage,update:Messages.replyMessage,destroy:Messages.deleteMessage},reader:{type:"json",root:"messages",totalProperty:"totals"}},autoLoad:false});a.msgGrid=Ext.create("App.classes.GridPanel",{store:a.storeMsgs,region:"center",border:true,viewConfig:{forceFit:true,stripeRows:true},listeners:{scope:this,itemclick:this.onItemClick},columns:[{header:i18n.status,sortable:true,dataIndex:"message_status",width:70},{header:i18n.from,sortable:true,dataIndex:"from_user",width:200},{header:i18n.to,sortable:true,dataIndex:"to_user",width:200},{header:i18n.patient,sortable:true,dataIndex:"patient_name",width:200},{header:i18n.subject,sortable:true,dataIndex:"subject",flex:1},{header:i18n.type,sortable:true,dataIndex:"note_type",width:100}],tbar:Ext.create("Ext.PagingToolbar",{store:a.storeMsgs,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{text:i18n["delete"],cls:"winDelete",iconCls:"delete",itemId:"deleteMsg",disabled:true,scope:a,handler:a.onDelete},"-",{text:i18n.inbox,action:"inbox",enableToggle:true,toggleGroup:"message",pressed:true,scope:a,handler:a.messagesType},"-",{text:i18n.sent,action:"sent",enableToggle:true,toggleGroup:"message",scope:a,handler:a.messagesType},"-",{text:i18n.trash,action:"trash",enableToggle:true,toggleGroup:"message",scope:a,handler:a.messagesType},"-"]}),bbar:[{text:i18n.new_message,iconCls:"newMessage",itemId:"newMsg",handler:function(){a.onNewMessage()}},"-",{text:i18n.reply,iconCls:"edit",itemId:"replyMsg",disabled:true,handler:function(){a.action("reply")}},"-"]});a.msgForm=Ext.create("Ext.form.Panel",{region:"south",height:340,cls:"msgForm",layout:{type:"vbox",align:"stretch"},fieldDefaults:{labelWidth:60,margin:5,anchor:"100%"},items:[{xtype:"container",height:95,cls:"message-form-header",padding:"5 0",layout:"anchor",items:[{xtype:"container",layout:"column",items:[{xtype:"container",layout:"anchor",columnWidth:".50",items:[{xtype:"patienlivetsearch",fieldLabel:i18n.patient,emptyText:i18n.no_patient_selected,itemId:"patientCombo",name:"pid",hideLabel:false},{xtype:"textfield",fieldLabel:i18n.patient,itemId:"patientField",name:"patient_name",readOnly:true,hidden:true},{xtype:"userscombo",name:"to_id",fieldLabel:i18n.to,validateOnChange:false,allowBlank:false}]},{xtype:"container",layout:"anchor",columnWidth:".50",items:[{xtype:"msgnotetypecombo",name:"note_type",fieldLabel:i18n.type,listeners:{scope:a,select:a.onChange}},{xtype:"msgstatuscombo",name:"message_status",fieldLabel:i18n.status,listeners:{scope:a,select:a.onChange}}]}]},{xtype:"textfield",fieldLabel:i18n.subject,name:"subject",margin:"0 5 5 5"}]},{xtype:"htmleditor",name:"body",itemId:"bodyMsg",flex:1,readOnly:true,allowBlank:false},{xtype:"textfield",hidden:true,name:"id"},{xtype:"textfield",hidden:true,name:"pid"},{xtype:"textfield",hidden:true,name:"reply_id"}],bbar:[{text:i18n.send,iconCls:"save",itemId:"sendMsg",scope:a,handler:a.onSend},"-",{text:i18n["delete"],cls:"winDelete",iconCls:"delete",itemId:"deleteMsg",margin:"0 3 0 0",disabled:true,scope:a,handler:a.onDelete}],listeners:{scope:a,afterrender:a.onFormRender}});a.pageBody=[a.msgGrid,a.msgForm];a.callParent(arguments)},messagesType:function(a){this.updateTitle("Messages ("+Ext.String.capitalize(a.action)+")");this.storeMsgs.proxy.extraParams={get:a.action};this.storeMsgs.load()},onFormRender:function(){this.msgForm.getComponent("bodyMsg").setReadOnly(true);this.onNewMessage()},onNewMessage:function(){var c=this.msgForm;c.getForm().reset();var a=Ext.ModelManager.getModel("MessagesModel"),b=Ext.ModelManager.create({message_status:i18n["new"],note_type:i18n.unassigned},a);c.getForm().loadRecord(b);this.action("new")},onSend:function(d){var e=d.up("form").getForm(),c=this.storeMsgs;if(e.isValid()){var a=e.getRecord(),b=e.getValues(),f=c.indexOf(a);if(f==-1){c.add(b)}else{a.set(b)}c.sync();c.load();this.onNewMessage();this.msg("Sweet!",i18n.message_sent)}else{this.msg("Oops!",i18n.please_complete_all_required_fields+".")}},onDelete:function(){var b=this.msgForm.getForm(),a=this.storeMsgs;Ext.Msg.show({title:i18n.please_confirm+"...",icon:Ext.MessageBox.QUESTION,msg:i18n.are_you_sure_to_delete_this_message,buttons:Ext.Msg.YESNO,scope:this,fn:function(d){if(d=="yes"){var c=b.getRecord();a.remove(c);a.destroy();this.onNewMessage();this.msg("Sweet!",i18n.sent_to_trash)}}})},onChange:function(e,a){var d=this,c=e.up("form").getForm();if(c.isValid()){var h=c.getRecord().data.id,b=e.name,g=a[0].data.option_id,f={id:h,col:b,val:g};Messages.updateMessage(f,function(){d.storeMsgs.load()})}},onItemClick:function(b,a){a.data.to_id=a.data.from_id;this.msgForm.getForm().loadRecord(a);this.action("old")},action:function(g){var f=this.msgGrid.getSelectionModel(),b=this.msgForm,l=b.query('combo[itemId="patientCombo"]')[0],i=b.query('textfield[itemId="patientField"]')[0],h=b.getComponent("bodyMsg"),e=b.getComponent("currMsg"),c=this.query('button[itemId="deleteMsg"]')[0],a=this.query('button[itemId="deleteMsg"]')[1],k=this.query('button[itemId="replyMsg"]')[0],j=this.query('button[itemId="sendMsg"]')[0];if(g=="new"){h.setReadOnly(false);l.show();i.hide();c.disable();a.disable();k.disable();j.enable();f.deselectAll()}else{if(g=="old"){h.setReadOnly(true);l.hide();i.show();c.enable();a.enable();k.enable();j.disable()}else{if(g=="reply"){var d=h.getValue();h.setValue('<br><br><br><qoute style="margin-left: 10px; padding-left: 10px; border-left: solid 3px #cccccc; display: block;">'+d+"</quote>");h.setReadOnly(false);j.enable();l.hide();i.show()}}}},onActive:function(a){this.storeMsgs.load();a(true)}});Ext.define("App.view.areas.FloorPlan",{id:"panelAreaFloorPlan",extend:"App.classes.RenderPanel",pageTitle:i18n.area_floor_plan,floorPlanId:null,initComponent:function(){var a=this;a.floorPlanZonesStore=Ext.create("App.store.administration.FloorPlanZones");a.floorPlan=Ext.create("Ext.panel.Panel",{title:i18n.floor_plans,layout:"absolute",tbar:["->",{xtype:"floorplanareascombo",fieldLabel:i18n.area,labelWidth:40,listeners:{scope:a,select:a.onFloorPlanSelect}}],tools:[{type:"refresh",scope:a,handler:a.setZones}]});a.pageBody=[a.floorPlan];a.callParent(arguments)},loadZone:function(b){var d=this,a,c;a=Ext.create("Ext.button.Split",{text:b.data.title,scale:"medium",x:b.data.x,y:b.data.y,itemId:b.data.id,scope:d,handler:d.onZoneClicked,pid:null,zoneId:b.data.id,priority:null,patientZoneId:null,menu:[c=Ext.create("Ext.form.Panel",{bodyPadding:"5 5 0 5",items:[{xtype:"textfield",fieldLabel:i18n.patient_name,labelWidth:80,name:"patient_name"},{xtype:"button",text:i18n.remove_patient,handler:function(){d.unSetZone(a)}}]})],tooltip:i18n.patient_name+": [empty]",listeners:{scope:d,render:d.initializeZone}});d.floorPlan.add(a);c.getForm().loadRecord(b)},onZoneClicked:function(a){say(a);app.setPatient(a.data.pid,a.data.name,function(){a.data.eid?app.openEncounter(a.data.eid):app.openPatientSummary()})},onFloorPlanSelect:function(c,a){var b=this;b.floorPlanId=a[0].data.id;b.loadZones(function(){b.setZones()})},loadZones:function(b){var a=this;a.floorPlan.removeAll();a.floorPlanZonesStore.load({params:{floor_plan_id:this.floorPlanId},scope:a,callback:function(d,c,f){for(var e=0;e<d.length;e++){a.loadZone(d[e])}b()}})},initializeZone:function(a){var b=this;a.dragZone=Ext.create("Ext.dd.DragZone",a.getEl(),{ddGroup:"patientPoolAreas",getDragData:function(f){var c=a.btnEl.dom,g;if(c){g=c.cloneNode(true);g.id=Ext.id();return a.dragData={sourceEl:c,repairXY:Ext.fly(c).getXY(),ddel:g,patientData:a.data,zone:a}}},getRepairXY:function(c){return this.dragData.repairXY},b4MouseDown:function(c){this.autoOffset(c.getPageX(),c.getPageY())}});a.dragZone.lock();a.dropZone=Ext.create("Ext.dd.DropZone",a.getEl(),{ddGroup:"patientPoolAreas",notifyOver:function(c,f,d){if(a.pid==null){return Ext.dd.DropZone.prototype.dropAllowed}else{return Ext.dd.DropZone.prototype.dropNotAllowed}},notifyDrop:function(c,f,d){a.data=d.patientData;if(d.zone){b.unAssignPatient(d.zone,a.data)}b.assignPatient(a,a.data)}})},assignPatient:function(a,c){var b=this,d={zone_id:a.zoneId,pid:c.pid};FloorPlans.setPatientToZone(d,function(f,e){c.patientZoneId=e.result.data.patientZoneId;b.msg("Sweet!",c.name+i18n.successfully_moved+".");b.setZone(a,c)})},unAssignPatient:function(a,c){var b=this;FloorPlans.unSetPatientZoneByPatientZoneId(c.patientZoneId,function(){b.unSetZone(a)})},setZone:function(a,b){a.pid=b.pid;a.priority=b.priority;a.patientZoneId=b.patientZoneId;a.dropZone.lock();a.dragZone.unlock();a.setTooltip(i18n.patient_name+":"+b.name);a.addCls(b.priority)},unSetZone:function(a){a.pid=null;a.data=null;a.dropZone.unlock();a.dragZone.lock();a.setTooltip(i18n.patient_name+": [empty]");a.removeCls(a.priority)},setZones:function(){var c=this,b,a,d;FloorPlans.getPatientsZonesByFloorPlanId(c.floorPlanId,function(h,e){a=c.floorPlan.items.items;d=e.result;for(var f=0;f<a.length;f++){c.unSetZone(a[f])}for(var g=0;g<d.length;g++){b=c.floorPlan.getComponent(d[g].zoneId);b.data=d[g];c.setZone(b,d[g])}})},setFloorPlan:function(a){},onActive:function(b){var a=this;if(a.floorPlanId==null){a.floorPlanId=1;a.floorPlan.query("floorplanareascombo")[0].setValue(a.floorPlanId);a.loadZones(function(){a.setZones()})}else{a.setZones()}b(true)}});Ext.define("App.view.areas.PatientPoolDropZone",{id:"panelPoolArea",extend:"App.classes.RenderPanel",pageTitle:i18n.patient_pool_areas,initComponent:function(){var a=this;a.pageBody=Ext.create("Ext.container.Container",{defaults:{flex:1,margin:5,frame:false},layout:{type:"hbox",align:"stretch"}});a.listeners={beforerender:a.getPoolAreas};a.callParent(arguments)},onPatientDrop:function(e,g,f,c,d){var b=(g.records[0].data)?g.records[0].data.name:g.records[0].name,a=(g.records[0].data)?g.records[0].data.pid:g.records[0].pid,h;app.msg("Sweet!",b+" "+i18n.sent_to+" "+this.panel.title);h={pid:a,sendTo:this.panel.action};PoolArea.sendPatientToPoolArea(h,function(){app.unsetPatient();Ext.getCmp("panelPoolArea").reloadStores()})},getPoolAreas:function(){var c=this,a=c.getPageBody().down("container"),b;c.stores=[];PoolArea.getActivePoolAreas(function(g,e){b=e.result;for(var f=0;f<b.length;f++){var d=Ext.create("Ext.data.Store",{model:"App.model.areas.PoolDropAreas",proxy:{type:"direct",api:{read:PoolArea.getPoolAreaPatients},extraParams:{area_id:b[f].id}}});c.stores.push(d);a.add({xtype:"grid",title:b[f].title,action:b[f].id,store:d,floorPlanId:b[f].floor_plan_id,columns:[{header:i18n.record+" #",width:100,dataIndex:"pid"},{header:i18n.patient_name,flex:1,dataIndex:"name"}],viewConfig:{loadMask:false,plugins:{ptype:"gridviewdragdrop",dragGroup:"patientPoolAreas",dropGroup:"patientPoolAreas"},listeners:{drop:c.onPatientDrop}},listeners:{scope:c,itemdblclick:c.onPatientDblClick}})}})},onPatientDblClick:function(b,a){var c=a.data;app.setPatient(c.pid,c.name,function(){app.openPatientSummary()})},reloadStores:function(){if(this.stores){for(var a=0;a<this.stores.length;a++){this.stores[a].load()}}},onActive:function(a){this.reloadStores();a(true)}});Ext.define("App.view.patient.charts.BPPulseTemp",{extend:"Ext.container.Container",layout:{type:"vbox",align:"stretch"},style:"background-color:#fff",defaults:{xtype:"panel",layout:"fit",flex:1},initComponent:function(){var a=this;a.items=[{title:i18n.blood_pressure,margin:5,items:[{xtype:"chart",style:"background:#fff",store:a.store,animate:false,shadow:true,legend:{position:"right"},axes:[{title:i18n.blood_pressure,type:"Numeric",position:"left",fields:["bp_systolic","bp_diastolic","bp_systolic_normal","bp_diastolic_normal"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":0.5}}},{title:i18n.date,type:"Time",dateFormat:"Y-m-d h:i:s a",position:"bottom",fields:["date"]}],series:[{title:i18n.systolic,type:"line",axis:"left",xField:"date",yField:"bp_systolic",smooth:true,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:true,renderer:function(c,b){this.update("Date: "+Ext.Date.format(c.get("date"),"Y-m-d h:i:s a")+"<br>Systolic: "+c.get("bp_systolic"))}}},{title:i18n.diastolic,type:"line",axis:"left",xField:"date",yField:"bp_diastolic",smooth:true,highlight:{size:5,radius:5},markerConfig:{type:"cross",size:5,radius:5,"stroke-width":0},tips:{trackMouse:true,renderer:function(c,b){this.update(i18n.date+": "+Ext.Date.format(c.get("date"),"Y-m-d h:i:s a")+"<br>"+i18n.diastolic+": "+c.get("bp_diastolic"))}}},{type:"line",showMarkers:false,axis:"left",xField:"date",yField:"bp_diastolic_normal",style:{stroke:"#000000","stroke-width":1}},{type:"line",showMarkers:false,axis:"left",xField:"date",yField:"bp_systolic_normal",style:{stroke:"#000000","stroke-width":1}}]}]},{title:"Pulse",margin:"0 5 5 5",items:[{xtype:"chart",style:"background:#fff",store:a.store,animate:false,shadow:true,legend:{position:"right"},axes:[{title:i18n.pulse_per_min,type:"Numeric",position:"left",fields:["pulse"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":0.5}}},{title:i18n.date,type:"Time",dateFormat:"Y-m-d h:i:s a",position:"bottom",fields:["date"]}],series:[{title:i18n.pulse,type:"line",axis:"left",xField:"date",yField:"pulse",smooth:true,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:true,renderer:function(c,b){this.update(i18n.date+": "+Ext.Date.format(c.get("date"),"Y-m-d h:i:s a")+"<br>"+i18n.pulse_per_min+": "+c.get("pulse"))}}}]}]},{title:i18n.temperature,margin:"0 5 5 5",items:[{xtype:"chart",store:a.store,animate:false,shadow:true,legend:{position:"right"},axes:[{title:i18n.temp_fahrenheits,type:"Numeric",position:"left",fields:["temp_f"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":0.5}}},{title:i18n.date,type:"Time",dateFormat:"Y-m-d h:i:s a",position:"bottom",fields:["date"]}],series:[{title:i18n.temp_fahrenheits,type:"line",axis:"left",xField:"date",yField:"temp_f",smooth:true,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:true,renderer:function(c,b){this.update(i18n.date+": "+Ext.Date.format(c.get("date"),"Y-m-d h:i:s a")+"<br>"+i18n.temp_fahrenheits+": "+c.get("temp_f"))}}}]}]}];a.callParent(arguments)}});Ext.define("App.view.patient.charts.HeadCircumference",{extend:"Ext.panel.Panel",layout:"fit",margin:5,initComponent:function(){var a=this;a.items=[{xtype:"chart",store:a.store,animate:false,shadow:false,legend:{position:"right"},axes:[{title:a.xTitle,type:"Numeric",position:"left",fields:["PP","P3","P5","P10","P25","P50","P75","P90","P95","P97"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":0.5}},minimum:a.xMinimum,maximum:a.xMaximum},{title:a.yTitle,type:"Numeric",position:"bottom",fields:["age"],minimum:a.yMinimum,maximum:a.yMaximum}],series:[{title:i18n.circumference_cm,type:"scatter",axis:"left",xField:"age",yField:"PP",smooth:true,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:true,renderer:function(c,b){this.update(a.yTitle+" : "+c.get("age")+"<br>"+a.xTitle+": "+c.get("PP"))}}},{title:"97%",type:"line",axis:"left",xField:"age",yField:"P97",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"95%",type:"line",axis:"left",xField:"age",yField:"P95",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"75%",type:"line",axis:"left",xField:"age",yField:"P75",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"50%",type:"line",axis:"left",xField:"age",yField:"P50",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":3,opacity:0.5},highlight:{stroke:"#FF9900",size:4}},{title:"25%",type:"line",axis:"left",xField:"age",yField:"P25",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"10%",type:"line",axis:"left",xField:"age",yField:"P10",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"5%",type:"line",axis:"left",xField:"age",yField:"P5",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"3%",type:"line",axis:"left",xField:"age",yField:"P3",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}}]}];a.callParent(arguments)}});Ext.define("App.view.patient.charts.HeightForStature",{extend:"Ext.panel.Panel",layout:"fit",margin:5,title:i18n.weight_for_age,initComponent:function(){var a=this;a.items=[{xtype:"chart",store:a.store,animate:false,shadow:false,legend:{position:"right"},axes:[{title:i18n.weight_kg,type:"Numeric",position:"left",fields:["PP","P3","P5","P10","P25","P50","P75","P85","P90","P95","P97"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":0.5}}},{title:i18n.length_cm,type:"Numeric",position:"bottom",fields:["height"]}],series:[{title:i18n.weight_kg,type:"scatter",axis:"left",xField:"height",yField:"PP",smooth:true,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:true,renderer:function(c,b){this.update(i18n.length_cm+": "+c.get("height")+"<br>"+i18n.weightArray+": "+c.get("PP"))}}},{title:"97%",type:"line",axis:"left",xField:"height",yField:"P97",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"95%",type:"line",axis:"left",xField:"height",yField:"P95",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"85%",type:"line",axis:"left",xField:"height",yField:"P85",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"75%",type:"line",axis:"left",xField:"height",yField:"P75",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"50%",type:"line",axis:"left",xField:"height",yField:"P50",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":3,opacity:0.5},highlight:{stroke:"#FF9900",size:4}},{title:"25%",type:"line",axis:"left",xField:"height",yField:"P25",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"10%",type:"line",axis:"left",xField:"height",yField:"P10",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"5%",type:"line",axis:"left",xField:"height",yField:"P5",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}},{title:"3%",type:"line",axis:"left",xField:"height",yField:"P3",smooth:true,showMarkers:false,style:{stroke:"#000000","stroke-width":1,opacity:0.3},highlight:{stroke:"#FF9900",size:2}}]}];a.callParent(arguments)}});Ext.define("App.view.patient.encounter.CurrentProceduralTerminology",{extend:"Ext.panel.Panel",alias:"widget.currentproceduralterminology",autoScroll:true,border:false,bodyBorder:false,bodyPadding:5,bodyStyle:"background-color:#fff",layout:"border",pid:null,eid:null,initComponent:function(){var a=this;a.referenceCptStore=Ext.create("App.store.patient.QRCptCodes");a.encounterCptStore=Ext.create("Ext.data.Store",{model:"App.model.patient.CptCodes",autoSync:true,listeners:{scope:a,beforesync:a.beforesync}});a.cptFormEdit=Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,enableRemove:true,formItems:[{fieldLabel:i18n.full_description,xtype:"displayfield",name:"code_text",anchor:"100%"},{xtype:"container",layout:"column",items:[{xtype:"fieldcontainer",layout:"anchor",columnWidth:0.5,margin:"0 3 0 0",defaults:{xtype:"textfield"},items:[{fieldLabel:i18n.place_of_service,name:"place_of_service",anchor:"100%"},{xtype:"checkbox",labelWidth:105,fieldLabel:i18n.emergency+"?",name:"emergency"},{fieldLabel:i18n.charges,name:"charge",anchor:"100%"}]},{xtype:"fieldcontainer",layout:"anchor",columnWidth:0.5,margin:"0 0 0 3",defaults:{xtype:"textfield",anchor:"100%",labelWidth:110},items:[{fieldLabel:i18n.days_of_units,name:"days_of_units"},{fieldLabel:i18n.essdt_fam_plan,name:"essdt_plan"},{fieldLabel:i18n.modifiers,xtype:"livecptsearch",hideLabel:false,name:"modifiers"}]}]},{xtype:"liveicdxsearch",fieldLabel:i18n.diagnosis,hideLabel:false,name:"diagnosis"}],listeners:{scope:a,afterremove:a.onCompleteRemove}});a.items=[{xtype:"panel",title:i18n.cpt_search,itemId:"leftCol",region:"west",width:450,hidden:true,titleCollapse:true,margin:"0 5 0 0",bodyStyle:"background-color:#fff",layout:{type:"vbox",align:"stretch",padding:5},items:[{xtype:"fieldset",title:i18n.cpt_quick_reference_options,padding:"10 15",margin:"0 0 3 0",layout:"anchor",items:{xtype:"combobox",anchor:"100%",editable:false,queryMode:"local",valueField:"value",displayField:"name",store:Ext.create("Ext.data.Store",{fields:["name","value"],data:[{name:i18n.show_related_cpt_for_current_diagnostics,value:0},{name:i18n.show_cpt_history_for_this_patient,value:1},{name:i18n.show_cpt_commonly_used_by_clinic,value:2}]}),listeners:{scope:a,change:a.onQuickReferenceOption}}},Ext.create("Ext.ux.LiveSearchGridPanel",{margins:0,flex:1,store:a.referenceCptStore,viewConfig:{copy:true,stripRows:true,loadMask:true,plugins:[{ptype:"gridviewdragdrop",dragGroup:"CPTGridDDGroup"}]},columns:[{text:i18n.code,width:70,sortable:true,dataIndex:"code"},{text:i18n.description,flex:1,sortable:true,dataIndex:"code_text_medium"}]})],listeners:{scope:a,collapse:a.onQuickReferenceCollapsed}},{xtype:"panel",title:i18n.encounter_cpts,region:"center",itemId:"rightCol",bodyStyle:"background-color:#fff",layout:{type:"vbox",align:"stretch",padding:5},items:[{xtype:"fieldset",title:i18n.cpt_live_sarch,padding:"10 15",margin:"0 0 3 0",layout:"anchor",items:{xtype:"livecptsearch",listeners:{scope:a,select:a.onLiveCptSelect}}},{xtype:"grid",flex:1,margins:0,store:a.encounterCptStore,columns:[{text:i18n.code,width:70,sortable:true,dataIndex:"code"},{text:i18n.description,flex:1,sortable:true,dataIndex:"code_text"},{text:i18n.status,width:50,sortable:true,dataIndex:"status",renderer:a.status}],tbar:[{text:i18n.quick_reference,action:"referenceCptBtn",enableToggle:true,scope:a,toggleHandler:a.onQuickReferenceToggle},"->",{text:i18n.reload,handler:function(){a.encounterCptStoreLoad(null)}}],viewConfig:{itemId:"view",plugins:{ptype:"gridviewdragdrop",dropGroup:"CPTGridDDGroup"},listeners:{scope:a,drop:a.onCptDropped}},plugins:a.cptFormEdit}]}];a.callParent(arguments)},status:function(a){if(a=="0"){return'<img style="padding-left: 10px" src="resources/images/icons/no.gif" />'}else{if(a=="1"){return'<img style="padding-left: 10px" src="resources/images/icons/yes.gif" />'}else{if(a=="2"){return'<img style="padding-left: 10px" src="resources/images/icons/icohelp.png" />'}}}return a},onQuickReferenceCollapsed:function(){var a=this.query('button[action="referenceCptBtn"]');if(a[0].pressed){a[0].toggle(false)}},onQuickReferenceToggle:function(a,b){if(b){this.getComponent("leftCol").show()}else{this.getComponent("leftCol").hide()}},onQuickReferenceOption:function(b,a){this.loadCptQuickReferenceGrid(a)},onCompleteRemove:function(){app.msg("Sweet!",i18n.cpt_removed_from_this_encounter)},onLiveCptSelect:function(b,a){var c=this;b.reset();delete a[0].data.id;a[0].data.eid=c.eid;c.encounterCptStore.add(a[0].data)},loadCptQuickReferenceGrid:function(a){this.referenceCptStore.load({params:{pid:this.pid,eid:this.eid,filter:a}})},beforesync:function(a){if(a.create){a.create[0].data.eid=this.eid}},onCptDropped:function(g,h,f,e,d){app.msg("Sweet!",i18n.cpt_added_to_this_encounter);this.cptFormEdit.cancelEdit();var b=f.store,a=b.indexOf(f),c=e=="before"?a-1:a+1;this.cptFormEdit.startEdit(c,0)},setDefaultQRCptCodes:function(){var a=this.down("combobox");if(a.getValue()!=1){a.setValue(1)}else{this.loadCptQuickReferenceGrid(1)}},encounterCptStoreLoad:function(b,a,c){this.pid=b?b:this.pid;this.eid=a?a:this.eid;this.encounterCptStore.proxy.extraParams={eid:this.eid,filter:null};this.encounterCptStore.load({callback:function(){c?c():null}})}});Ext.define("App.view.patient.encounter.HealthCareFinancingAdministrationOptions",{extend:"Ext.form.Panel",alias:"widget.hcafaoptions",mixins:{functions:"App.classes.AbstractPanel"},pid:null,eid:null,initComponent:function(){var a=this;a.listeners={afterrender:a.afterPanelRender};a.callParent(arguments)},afterPanelRender:function(){this.mixins.functions.getFormItems(this,10)}});Ext.define("App.view.patient.encounter.ICDs",{extend:"Ext.form.FieldSet",alias:"widget.icdsfieldset",title:i18n.icds_live_search,padding:"10 15",margin:"0 0 3 0",layout:"anchor",requires:["App.classes.LiveICDXSearch"],initComponent:function(){var a=this;Ext.define("Ext.ux.CustomTrigger",{extend:"Ext.form.field.Trigger",alias:"widget.customtrigger",hideLabel:true,triggerTip:i18n.click_to_clear_selection,qtip:i18n.clearable_combo_box,trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",onTriggerClick:function(){this.destroy()},onRender:function(d,b){this.callParent(arguments);var e=this.getId();this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+e,name:"trigger2"+e,cls:"x-form-trigger "+this.trigger2Class}]};this.triggerEl.replaceWith(this.triggerConfig);this.triggerEl.on("mouseup",function(){this.onTriggerClick()},this);var c=Ext.get("trigger2"+e);c.addClsOnOver("x-form-trigger-over")}});a.items=[{xtype:"liveicdxsearch",itemId:"liveicdxsearch",emptyText:a.emptyText,name:"icdxCodes",listeners:{scope:a,select:a.onLiveIcdSelect,blur:function(b){b.reset()}}},{xtype:"container",itemId:"idcsContainer",action:"idcsContainer"}];a.callParent(arguments)},onLiveIcdSelect:function(b,a){this.addIcd(a[0].data.code,a[0].data.code_text);b.reset()},removeIcds:function(){this.getIcdContainer().removeAll()},loadIcds:function(a){var c=this,d=c.getIcdLiveSearch();c.removeIcds();for(var b=0;b<a.length;b++){c.addIcd(a[b].code,a[b].long_desc)}d.reset()},addIcd:function(b,a){this.getIcdContainer().add({xtype:"customtrigger",value:b,width:100,style:"float:left",margin:"0 5 0 0",name:"icdxCodes",listeners:{afterrender:function(c){Ext.create("Ext.tip.ToolTip",{target:c.id,html:a});c.setEditable(false)}}})},getIcdContainer:function(){return this.getComponent("idcsContainer")},getIcdLiveSearch:function(){return this.getComponent("liveicdxsearch")}});Ext.define("App.view.patient.ItemsToReview",{extend:"Ext.panel.Panel",alias:"widget.itemstoreview",layout:"column",frame:true,bodyPadding:5,bodyBorder:true,bodyStyle:"background-color:white",eid:null,initComponent:function(){var a=this;a.patientImmuListStore=Ext.create("App.store.patient.PatientImmunization");a.patientAllergiesListStore=Ext.create("App.store.patient.Allergies");a.patientMedicalIssuesStore=Ext.create("App.store.patient.MedicalIssues");a.patientSurgeryStore=Ext.create("App.store.patient.Surgery");a.patientDentalStore=Ext.create("App.store.patient.Dental");a.patientMedicationsStore=Ext.create("App.store.patient.Medications");a.column1=Ext.create("Ext.container.Container",{columnWidth:0.3333,defaults:{xtype:"grid",margin:"0 5 5 0"},items:[{title:i18n.immunizations,frame:true,height:180,store:a.patientImmuListStore,columns:[{header:i18n.immunization,width:250,dataIndex:"immunization_name"},{header:i18n.date,width:90,xtype:"datecolumn",format:"Y-m-d",dataIndex:"administered_date"},{header:i18n.notes,flex:1,dataIndex:"note"}]},{title:i18n.allergies,frame:true,height:180,store:a.patientAllergiesListStore,columns:[{header:i18n.type,width:100,dataIndex:"allergy_type"},{header:i18n.name,width:100,dataIndex:"allergy"},{header:i18n.severity,flex:1,dataIndex:"severity"}]}]});a.column2=Ext.create("Ext.container.Container",{columnWidth:0.3333,defaults:{xtype:"grid",margin:"0 5 5 0"},items:[{title:i18n.active_problems,frame:true,height:180,store:a.patientMedicalIssuesStore,columns:[{header:i18n.problem,width:250,dataIndex:"code"},{xtype:"datecolumn",header:i18n.begin_date,width:90,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,flex:1,format:"Y-m-d",dataIndex:"end_date"}]},{title:i18n.surgery,frame:true,height:180,store:a.patientSurgeryStore,columns:[{header:i18n.type,width:250,dataIndex:"type"},{xtype:"datecolumn",header:i18n.begin_date,width:90,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,flex:1,format:"Y-m-d",dataIndex:"end_date"}]}]});a.column3=Ext.create("Ext.container.Container",{columnWidth:0.3333,defaults:{xtype:"grid",margin:"0 0 5 0"},items:[{title:i18n.dental,frame:true,height:180,store:a.patientDentalStore,columns:[{header:i18n.title,width:250,dataIndex:"title"},{xtype:"datecolumn",header:i18n.begin_date,width:90,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,flex:1,format:"Y-m-d",dataIndex:"end_date"}]},{title:i18n.medications,frame:true,height:180,store:a.patientMedicationsStore,columns:[{header:i18n.medication,width:250,dataIndex:"medication"},{xtype:"datecolumn",header:i18n.begin_date,width:90,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,flex:1,format:"Y-m-d",dataIndex:"end_date"}]}]});a.column4=Ext.create("Ext.form.Panel",{columnWidth:0.3333,border:false,items:[{fieldLabel:i18n.smoking_status,xtype:"mitos.smokingstatuscombo",labelWidth:100,width:325,name:"review_smoke"},{fieldLabel:i18n.alcohol,xtype:"mitos.yesnocombo",labelWidth:100,width:325,name:"review_alcohol"},{fieldLabel:i18n.pregnant,xtype:"mitos.yesnonacombo",labelWidth:100,width:325,name:"review_pregnant"}]});a.items=[a.column1,a.column2,a.column3,a.column4];a.buttons=[{text:i18n.review_all,name:"review",scope:a,handler:a.onSave}];a.listeners={show:a.storesLoad};a.callParent(arguments)},storesLoad:function(){var a=this;a.patientImmuListStore.load({params:{pid:app.patient.pid}});a.patientAllergiesListStore.load({params:{pid:app.patient.pid}});a.patientMedicalIssuesStore.load({params:{pid:app.patient.pid}});a.patientSurgeryStore.load({params:{pid:app.patient.pid}});a.patientDentalStore.load({params:{pid:app.patient.pid}});a.patientMedicationsStore.load({params:{pid:app.patient.pid}});Medical.getEncounterReviewByEid(app.patient.eid,function(c,b){a.column4.getForm().setValues(b.result)})},onSave:function(){var d=this,a=d.down("form"),c=a.getForm(),b=c.getFieldValues(),e={eid:app.patient.eid};b.eid=app.patient.eid;Medical.reviewAllMedicalWindowEncounter(e,function(g,f){});if(c.isValid()){Encounter.onSaveItemsToReview(b,function(g,f){if(f.result.success){app.msg("Sweet!",i18n.items_to_review_save_and_review)}else{app.msg("Oops!",i18n.items_to_review_entry_error)}})}}});Ext.define("App.view.patient.EncounterDocumentsGrid",{extend:"Ext.grid.Panel",alias:"widget.documentsimplegrid",title:i18n.documents,split:true,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.PatientDocuments");a.columns=[{xtype:"actioncolumn",width:26,items:[{icon:"resources/images/icons/preview.png",tooltip:i18n.view_document,handler:a.onDocumentView,getClass:function(){return"x-grid-icon-padding"}}]},{header:i18n.type,flex:1,dataIndex:"docType"}];a.callParent(arguments)},onDocumentView:function(a,d){var c=a.getStore().getAt(d),b=c.data.url;app.onDocumentView(b)},loadDocs:function(a){this.store.load({params:{eid:a}})}});Ext.define("App.view.patient.encounter.ICDs",{extend:"Ext.form.FieldSet",alias:"widget.icdsfieldset",title:i18n.icds_live_search,padding:"10 15",margin:"0 0 3 0",layout:"anchor",requires:["App.classes.LiveICDXSearch"],initComponent:function(){var a=this;Ext.define("Ext.ux.CustomTrigger",{extend:"Ext.form.field.Trigger",alias:"widget.customtrigger",hideLabel:true,triggerTip:i18n.click_to_clear_selection,qtip:i18n.clearable_combo_box,trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",onTriggerClick:function(){this.destroy()},onRender:function(d,b){this.callParent(arguments);var e=this.getId();this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+e,name:"trigger2"+e,cls:"x-form-trigger "+this.trigger2Class}]};this.triggerEl.replaceWith(this.triggerConfig);this.triggerEl.on("mouseup",function(){this.onTriggerClick()},this);var c=Ext.get("trigger2"+e);c.addClsOnOver("x-form-trigger-over")}});a.items=[{xtype:"liveicdxsearch",itemId:"liveicdxsearch",emptyText:a.emptyText,name:"icdxCodes",listeners:{scope:a,select:a.onLiveIcdSelect,blur:function(b){b.reset()}}},{xtype:"container",itemId:"idcsContainer",action:"idcsContainer"}];a.callParent(arguments)},onLiveIcdSelect:function(b,a){this.addIcd(a[0].data.code,a[0].data.code_text);b.reset()},removeIcds:function(){this.getIcdContainer().removeAll()},loadIcds:function(a){var c=this,d=c.getIcdLiveSearch();c.removeIcds();for(var b=0;b<a.length;b++){c.addIcd(a[b].code,a[b].long_desc)}d.reset()},addIcd:function(b,a){this.getIcdContainer().add({xtype:"customtrigger",value:b,width:100,style:"float:left",margin:"0 5 0 0",name:"icdxCodes",listeners:{afterrender:function(c){Ext.create("Ext.tip.ToolTip",{target:c.id,html:a});c.setEditable(false)}}})},getIcdContainer:function(){return this.getComponent("idcsContainer")},getIcdLiveSearch:function(){return this.getComponent("liveicdxsearch")}});Ext.define("App.view.patient.CheckoutAlertsView",{extend:"Ext.view.View",alias:"widget.checkoutalertsview",trackOver:true,cls:"checkoutalert",itemSelector:"div.alert-div",loadMask:true,singleSelect:true,emptyText:'<span style="color: #616161; font-size: 12px;">Sweet! '+i18n.no_alerts_found+".</span>",initComponent:function(){var a=this;a.tpl='  <table>           <tpl for=".">               <tr class="alert-div>               <div class="alert-div">                   <img class="alert-img" src="{icon}" />                   <div class="alert-msg">{alert}</div>               </div>               </tr>           </tpl>       </table>';a.callParent(arguments)}});Ext.define("App.view.patient.Vitals",{extend:"Ext.view.View",alias:"widget.vitalsdataview",trackOver:true,cls:"vitals",itemSelector:"table.vitals-column",overItemCls:"vitals-column-over",selectedItemCls:"vitals-column-selected",loadMask:true,singleSelect:true,emptyText:'<div class="view_empty_text"><span>'+i18n.no_vitals_to_display+"</span></div>",initComponent:function(){var a=this;a.tpl='<table>   <tbody>       <tr>       <tpl for=".">           <td>               <table class="x-grid-table x-grid-table-vitals vitals-column {[ (values.auth_uid == null || values.auth_uid == 0 ) ? "vitals-column-caution" : ""]}">                   <tbody>                       <tr class="x-grid-row">                           <td class="x-grid-cell x-grid-table-vitals-date">                               <div class="x-grid-cell-inner ">{[Ext.Date.format(values.date, "Y-m-d")]}<br>{[Ext.Date.format(values.date, "h:i:s a")]}</div>                           </td>                       </tr>                       <tr class="x-grid-row first">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.weight_lbs || "-"]}</div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.weight_kg || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.height_in || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.height_cm || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.bp_systolic || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.bp_diastolic || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.pulse || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.respiration || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.temp_f || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.temp_c || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.temp_location ? values.temp_location.toUpperCase() : "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.oxygen_saturation || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.head_circumference_in || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.head_circumference_cm || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.waist_circumference_in || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.waist_circumference_cm || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.bmi || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.bmi_status || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row x-grid-row-alt">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[values.other_notes || "-"]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[(values.administer_by == null || values.administer_by == " ") ? "-" : values.administer_by]}<div>                           </td>                       </tr>                       <tr class="x-grid-row ">                           <td class="x-grid-cell">                               <div class="x-grid-cell-inner ">{[(values.authorized_by == null || values.authorized_by == " ") ? "-" : values.authorized_by]}<div>                           </td>                       </tr>                   </tbody>               </table>           </td>       </tpl>       </tr>   </tbody></table>';a.callParent(arguments)}});Ext.define("App.view.patient.NewPatient",{extend:"App.classes.RenderPanel",id:"panelNewPatient",pageTitle:i18n.patient_entry_form,uses:["App.classes.PhotoIdWindow"],initComponent:function(){var a=this;a.formTitle=i18n.demographics;a.formToRender=1;a.form=Ext.create("Ext.form.Panel",{title:a.formTitle,bodyStyle:"padding: 5px",layout:"anchor",fieldDefaults:{msgTarget:"side"},dockedItems:{xtype:"toolbar",dock:"top",items:[{text:i18n.create_new_patient,iconCls:"save",scope:a,handler:a.onSave}]}});a.pageBody=[a.form];a.listeners={beforerender:a.beforePanelRender};a.callParent(arguments)},onSave:function(){var d=this,c,a,b;b=d.form.add({xtype:"textfield",name:"date_created",hidden:true,value:Ext.Date.format(new Date(),"Y-m-d H:i:s")});c=d.form.getForm();a=c.getFieldValues();if(c.isValid()){Patient.createNewPatient(a,function(h,g){var f=g.result.patient.pid,e=g.result.patient.fullname;if(g.result.success){d.msg("Sweet!",i18n.patient+' "'+e+'" '+i18n.created+"... ");app.setPatient(f,e,function(i){if(i){app.openPatientSummary()}})}else{Ext.Msg.alert("Opps!",i18n.something_went_wrong_saving_the_patient)}})}d.form.remove(b)},confirmationWin:function(a){Ext.Msg.show({title:i18n.please_confirm+"...",msg:i18n.do_you_want_to_create_a_new_patient,icon:Ext.MessageBox.QUESTION,buttons:Ext.Msg.YESNO,scope:this,fn:function(b){a(b)}})},beforePanelRender:function(){var a=this;a.getFormItems(this.form,this.formToRender,function(c,d){var e=c.getForm().findField("primary_subscriber_relationship");e.on("select",a.copyData,a);var b=c.getForm().findField("secondary_subscriber_relationship");b.on("select",a.copyData,a);var f=c.getForm().findField("tertiary_subscriber_relationship");f.on("select",a.copyData,a)})},copyData:function(e,c){var d=e.up("form").getForm();if(e.value=="self"){var b=d.getValues(),a={primary_subscriber_title:b.title,primary_subscriber_fname:b.fname,primary_subscriber_mname:b.mname,primary_subscriber_lname:b.lname,primary_subscriber_street:b.address,primary_subscriber_city:b.city,primary_subscriber_state:b.state,primary_subscriber_country:b.country,primary_subscriber_zip_code:b.zipcode,primary_subscriber_phone:b.home_phone,primary_subscriber_employer:b.employer_name,primary_subscriber_employer_street:b.employer_address,primary_subscriber_employer_city:b.employer_city,primary_subscriber_employer_state:b.employer_state,primary_subscriber_employer_country:b.employer_country,primary_subscriber_employer_zip_code:b.employer_postal_code};d.setValues(a)}},onActive:function(a){this.confirmationWin(function(b){if(b=="yes"){app.unsetPatient();a(true)}else{a(false)}})}});Ext.define("App.view.patient.Summary",{extend:"App.classes.RenderPanel",id:"panelSummary",pageTitle:i18n.patient_summary,pageLayout:{type:"hbox",align:"stretch"},pid:null,demographicsData:null,initComponent:function(){var a=this;a.stores=[];a.stores.push(a.immuCheckListStore=Ext.create("App.store.patient.ImmunizationCheck"));a.stores.push(a.patientAllergiesListStore=Ext.create("App.store.patient.Allergies"));a.stores.push(a.patientMedicalIssuesStore=Ext.create("App.store.patient.MedicalIssues"));a.stores.push(a.patientSurgeryStore=Ext.create("App.store.patient.Surgery"));a.stores.push(a.patientDentalStore=Ext.create("App.store.patient.Dental"));a.stores.push(a.patientMedicationsStore=Ext.create("App.store.patient.Medications"));a.stores.push(a.patientCalendarEventsStore=Ext.create("App.store.patient.PatientCalendarEvents"));a.pageBody=[a.tabPanel=Ext.create("Ext.tab.Panel",{flex:1,margin:"3 0 0 0",bodyPadding:0,frame:false,border:false,plain:true,itemId:"centerPanel"}),{xtype:"panel",width:250,bodyPadding:0,frame:false,border:false,bodyBorder:true,margin:"0 0 0 5",defaults:{layout:"fit",margin:"5 5 0 5"},listeners:{scope:a,render:a.rightColRender},items:[{xtype:"grid",title:i18n.active_medications,itemId:"MedicationsPanel",hideHeaders:true,store:a.patientMedicationsStore,columns:[{header:i18n.name,dataIndex:"medication",flex:1},{text:i18n.alert,width:55,dataIndex:"alert",renderer:a.boolRenderer}]},{xtype:"grid",title:i18n.immunizations,itemId:"ImmuPanel",hideHeaders:true,store:a.immuCheckListStore,region:"center",columns:[{header:i18n.name,dataIndex:"immunization_name",flex:1},{text:i18n.alert,width:55,dataIndex:"alert",renderer:a.alertRenderer}]},{xtype:"grid",title:i18n.allergies,itemId:"AllergiesPanel",hideHeaders:true,store:a.patientAllergiesListStore,region:"center",columns:[{header:i18n.name,dataIndex:"allergy",flex:1},{text:i18n.alert,width:55,dataIndex:"alert",renderer:a.boolRenderer}]},{xtype:"grid",title:i18n.active_problems,itemId:"IssuesPanel",hideHeaders:true,store:a.patientMedicalIssuesStore,columns:[{header:i18n.name,dataIndex:"code",flex:1},{text:i18n.alert,width:55,dataIndex:"alert",renderer:a.boolRenderer}]},{xtype:"grid",title:i18n.dental,itemId:"DentalPanel",hideHeaders:true,store:a.patientDentalStore,columns:[{header:i18n.name,dataIndex:"title",flex:1}]},{xtype:"grid",title:i18n.surgeries,itemId:"SurgeryPanel",hideHeaders:true,store:a.patientSurgeryStore,columns:[{dataIndex:"surgery",flex:1}]},{xtype:"grid",title:i18n.appointments,itemId:"AppointmentsPanel",hideHeaders:true,disableSelection:true,store:a.patientCalendarEventsStore,columns:[{xtype:"datecolumn",format:"F j, Y, g:i a",dataIndex:"start",flex:1}]}]}];if(acl.access_demographics){a.stores.push(a.patientAlertsStore=Ext.create("App.store.patient.MeaningfulUseAlert"));a.tabPanel.add({xtype:"form",title:i18n.demographics,action:"demoFormPanel",itemId:"demoFormPanel",border:false,dockedItems:[{xtype:"toolbar",dock:"bottom",items:["->",{xtype:"button",action:"readOnly",text:i18n.save,minWidth:75,scope:a,handler:a.formSave},"-",{xtype:"button",text:i18n.cancel,action:"readOnly",minWidth:75,scope:a,handler:a.formCancel}]}]})}if(acl.access_patient_disclosures){a.stores.push(a.patientDisclosuresStore=Ext.create("App.store.patient.Disclosures",{autoSync:true}));a.tabPanel.add({xtype:"grid",title:i18n.disclosures,itemId:"disclosuresPanel",bodyPadding:0,store:a.patientDisclosuresStore,plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,errorSummary:false,clicksToEdit:2}),columns:[{xtype:"datecolumn",format:"Y-m-d",text:i18n.date,dataIndex:"date"},{text:i18n.recipient_name,dataIndex:"recipient",width:150,editor:{xtype:"textfield"}},{header:i18n.type,dataIndex:"type",editor:{xtype:"textfield"}},{text:i18n.description,dataIndex:"description",flex:1,editor:{xtype:"textfield"}},{text:i18n.active,dataIndex:"active",width:50,renderer:a.boolRenderer,editor:{xtype:"checkbox"}}],tbar:[{text:i18n.disclosure,iconCls:"icoAdd",handler:a.addDisclosure}]})}if(acl.access_patient_notes){a.stores.push(a.patientNotesStore=Ext.create("App.store.patient.Notes",{autoSync:true}));a.tabPanel.add({title:i18n.notes,itemId:"notesPanel",xtype:"grid",bodyPadding:0,store:a.patientNotesStore,plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,errorSummary:false,clicksToEdit:2}),columns:[{xtype:"datecolumn",text:i18n.date,format:"Y-m-d",dataIndex:"date"},{header:i18n.type,dataIndex:"type",editor:{xtype:"textfield"}},{text:i18n.note,dataIndex:"body",flex:1,editor:{xtype:"textfield"}},{text:i18n.user,width:225,dataIndex:"user_name"}],tbar:[{text:i18n.add_note,iconCls:"icoAdd",handler:a.addNote}]})}if(acl.access_patient_reminders){a.stores.push(a.patientRemindersStore=Ext.create("App.store.patient.Reminders",{autoSync:true}));a.tabPanel.add({title:i18n.reminders,itemId:"remindersPanel",xtype:"grid",bodyPadding:0,store:a.patientRemindersStore,plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,errorSummary:false,clicksToEdit:2}),columns:[{xtype:"datecolumn",text:i18n.date,format:"Y-m-d",dataIndex:"date"},{header:i18n.type,dataIndex:"type",editor:{xtype:"textfield"}},{text:i18n.note,dataIndex:"body",flex:1,editor:{xtype:"textfield"}},{text:i18n.user,width:225,dataIndex:"user_name"}],tbar:[{text:i18n.add_reminder,iconCls:"icoAdd",handler:a.addReminder}]})}if(acl.access_patient_vitals){a.stores.push(a.vitalsStore=Ext.create("App.store.patient.Vitals"));a.tabPanel.add({title:i18n.vitals,autoScroll:true,bodyPadding:0,items:{xtype:"vitalsdataview",store:a.vitalsStore}})}if(acl.access_patient_history){a.stores.push(a.encounterEventHistoryStore=Ext.create("App.store.patient.Encounters"));a.tabPanel.add({title:i18n.history,xtype:"grid",store:a.encounterEventHistoryStore,columns:[{header:i18n.date,dataIndex:"start_date"},{header:i18n.event,dataIndex:"brief_description",flex:true},{header:i18n.visit_category,dataIndex:"visit_category"}]})}if(acl.access_patient_documents){a.stores.push(a.patientDocumentsStore=Ext.create("App.store.patient.PatientDocuments"));a.tabPanel.add({title:i18n.documents,xtype:"grid",store:a.patientDocumentsStore,columns:[{xtype:"actioncolumn",width:26,items:[{icon:"resources/images/icons/preview.png",tooltip:i18n.view_document,handler:a.onDocumentView,getClass:function(){return"x-grid-icon-padding"}}]},{header:i18n.type,dataIndex:"docType"},{xtype:"datecolumn",header:i18n.date,dataIndex:"date",format:"Y-m-d"},{header:i18n.title,dataIndex:"title",flex:true,editor:{xtype:"textfield",action:"title"}}],plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:true,errorSummary:false,clicksToEdit:2}),tbar:[{xtype:"mitos.templatescombo",fieldLabel:i18n.available_documents,width:320,labelWidth:145,margin:"10 0 0 10"},"-",{text:i18n.add_document,iconCls:"icoAdd",scope:a,handler:a.newDoc},"->",{text:i18n.upload_document,scope:a,handler:a.uploadADocument},{xtype:"panel",action:"upload",region:"center",items:[a.uploadWin=Ext.create("Ext.window.Window",{draggable:false,closable:false,closeAction:"hide",items:[{xtype:"form",bodyPadding:10,width:400,items:[{xtype:"filefield",name:"filePath",buttonText:i18n.select_a_file+"...",anchor:"100%"}],api:{submit:DocumentHandler.uploadDocument}}],buttons:[{text:i18n.cancel,handler:function(){a.uploadWin.close()}},{text:i18n.upload,scope:a,handler:a.onDocUpload}]})]}]})}if(acl.access_patient_preventive_care_alerts){a.stores.push(a.patientsDismissedAlerts=Ext.create("App.store.patient.DismissedAlerts",{}));a.tabPanel.add({title:i18n.dismissed_preventive_care_alerts,xtype:"grid",store:a.patientsDismissedAlerts,columns:[{header:i18n.description,dataIndex:"description"},{xtype:"datecolumn",header:i18n.date,dataIndex:"date",format:"Y-m-d"},{header:i18n.reason,dataIndex:"reason",flex:true},{header:i18n.observation,dataIndex:"observation",flex:true},{header:i18n.dismissed,dataIndex:"dismiss",width:60,renderer:a.boolRenderer}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:"general",xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",name:"reason",fieldLabel:i18n.reason,width:585,labelWidth:70,action:"reason"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:i18n.observation,name:"observation",width:250,labelWidth:70,action:"observation"},{fieldLabel:i18n.date,xtype:"datefield",action:"date",width:200,labelWidth:40,format:"Y-m-d",name:"date"},{xtype:"checkboxfield",name:"dismiss",fieldLabel:i18n.dismiss_alert}]}]}]})})}if(acl.access_patient_billing){a.tabPanel.add({xtype:"panel",action:"balancePanel",itemId:"balancePanel",title:i18n.billing,html:i18n.account_balance+": "})}a.listeners={scope:a,render:a.beforePanelRender};a.callParent()},addDisclosure:function(c){var d=this,b=c.up("grid"),a=b.store;b.plugins[0].cancelEdit();a.insert(0,{date:new Date(),pid:app.patient.pid,active:1});b.plugins[0].startEdit(0,0)},addNote:function(c){var d=this,b=c.up("grid"),a=b.store;b.plugins[0].cancelEdit();a.insert(0,{date:new Date(),pid:app.patient.pid,uid:app.user.id,eid:app.patient.eid});b.plugins[0].startEdit(0,0)},addReminder:function(c){var d=this,b=c.up("grid"),a=b.store;b.plugins[0].cancelEdit();a.insert(0,{date:new Date(),pid:app.patient.pid,uid:app.user.id,eid:app.patient.eid});b.plugins[0].startEdit(0,0)},onDocumentView:function(a,d){var c=a.getStore().getAt(d),b=c.data.url;app.onDocumentView(b)},uploadADocument:function(){var b=this,a=b.query('[action="upload"]')[0];b.uploadWin.show();b.uploadWin.alignTo(a.el.dom,"tr-tr",[-5,30])},onDocUpload:function(a){var c=this,b=c.uploadWin.down("form").getForm(),d=a.up("window");if(b.isValid()){b.submit({waitMsg:i18n.uploading_document+"...",params:{pid:c.pid,docType:"UploadDoc"},success:function(e,f){d.close();c.patientDocumentsStore.load({params:{pid:c.pid}})},failure:function(e,f){}})}},formSave:function(c){var e=this,d=c.up("form").getForm(),a=d.getRecord(),b=d.getValues();b.pid=e.pid;a.set(b);a.store.save({scope:e,callback:function(){app.setPatient(e.pid,"toberemove",null);e.getPatientImgs();e.verifyPatientRequiredInfo();e.readOnlyFields(d.getFields())}})},formCancel:function(b){var c=b.up("form").getForm(),a=c.getRecord();c.loadRecord(a)},newDoc:function(a){app.onNewDocumentsWin(a.action)},getFormData:function(c,k){var h=this,g,b;if(c.itemId=="demoFormPanel"){g=Patient.getPatientDemographicData;b=Patient.updatePatientDemographicData}var a=c.getForm().getFields().items,f=[{name:"pid",type:"int"}];for(var d=0;d<a.length;d++){if(a[d].xtype=="mitos.datetime"){f.push({name:a[d].name,type:"date",dateFormat:"Y-m-d H:i:s"})}else{f.push({name:a[d].name})}}var e=Ext.define(c.itemId+"Model",{extend:"Ext.data.Model",fields:f,proxy:{type:"direct",api:{read:g,update:b}}});var j=Ext.create("Ext.data.Store",{model:e});j.load({scope:h,callback:function(i){k(c.getForm().loadRecord(i[0]))}})},beforePanelRender:function(){if(acl.access_demographics){var e=this,b=e.query('[action="demoFormPanel"]')[0],d,g,f,c,a;this.getFormItems(b,1,function(h){if(h){d=b.query('panel[title="Who"]')[0];g=b.query('panel[action="insurances"]')[0];f=g.items.items[0];c=g.items.items[1];a=g.items.items[2];d.insert(0,Ext.create("Ext.panel.Panel",{action:"patientImgs",layout:"hbox",style:"float:right",bodyPadding:5,height:160,width:255,items:[e.patientImg=Ext.create("Ext.container.Container",{html:'<img src="resources/images/icons/patientPhotoId.jpg" height="119" width="119" />',margin:"0 5 0 0"}),e.patientQRcode=Ext.create("Ext.container.Container",{html:'<img src="resources/images/icons/patientDataQrCode.png" height="119" width="119" />',margin:0})],bbar:["-",{text:i18n.take_picture,scope:e,handler:e.getPhotoIdWindow},"-","->","-",{text:i18n.print_qrcode,scope:e,handler:function(){window.printQRCode(app.patient.pid)}},"-"]}));f.insert(0,Ext.create("Ext.panel.Panel",{style:"float:right",height:182,width:255,items:[e.primaryInsuranceImg=Ext.create("Ext.container.Container",{html:'<img src="resources/images/icons/no_card.jpg" height="154" width="254" />'}),e.primaryInsuranceImgUpload=Ext.create("Ext.window.Window",{draggable:false,closable:false,closeAction:"hide",items:[{xtype:"form",bodyPadding:10,width:310,items:[{xtype:"filefield",name:"filePath",buttonText:i18n.select_a_file+"...",anchor:"100%"}],api:{submit:DocumentHandler.uploadDocument}}],buttons:[{text:i18n.cancel,handler:function(i){i.up("window").close()}},{text:i18n.upload,scope:e,action:"Primary Insurance",handler:e.onInsuranceUpload}]})],bbar:["->","-",{text:i18n.upload,action:"primaryInsurance",scope:e,handler:e.uploadInsurance},"-"]}));c.insert(0,Ext.create("Ext.panel.Panel",{style:"float:right",height:182,width:255,items:[e.secondaryInsuranceImg=Ext.create("Ext.container.Container",{html:'<img src="resources/images/icons/no_card.jpg" height="154" width="254" />'}),e.secondaryInsuranceImgUpload=Ext.create("Ext.window.Window",{draggable:false,closable:false,closeAction:"hide",items:[{xtype:"form",bodyPadding:10,width:310,items:[{xtype:"filefield",name:"filePath",buttonText:i18n.select_a_file+"...",anchor:"100%"}],api:{submit:DocumentHandler.uploadDocument}}],buttons:[{text:i18n.cancel,handler:function(i){i.up("window").close()}},{text:i18n.upload,scope:e,action:"Secondary Insurance",handler:e.onInsuranceUpload}]})],bbar:["->","-",{text:i18n.upload,action:"secondaryInsurance",scope:e,handler:e.uploadInsurance},"-"]}));a.insert(0,Ext.create("Ext.panel.Panel",{style:"float:right",height:182,width:255,items:[e.tertiaryInsuranceImg=Ext.create("Ext.container.Container",{html:'<img src="resources/images/icons/no_card.jpg" height="154" width="254" />'}),e.tertiaryInsuranceImgUpload=Ext.create("Ext.window.Window",{draggable:false,closable:false,closeAction:"hide",items:[{xtype:"form",bodyPadding:10,width:310,items:[{xtype:"filefield",name:"filePath",buttonText:i18n.select_a_file+"...",anchor:"100%"}],api:{submit:DocumentHandler.uploadDocument}}],buttons:[{text:i18n.cancel,handler:function(i){i.up("window").close()}},{text:i18n.upload,scope:e,action:"Tertiary Insurance",handler:e.onInsuranceUpload}]})],bbar:["->","-",{text:"Upload",scope:e,action:"tertiaryInsurance",handler:e.uploadInsurance},"-"]}))}})}},uploadInsurance:function(b){var c=this,a=b.up("panel").down("container"),d=b.action;if(d=="primaryInsurance"){c.primaryInsuranceImgUpload.show();c.primaryInsuranceImgUpload.alignTo(c.primaryInsuranceImg.el.dom,"br-br",[0,0])}else{if(d=="secondaryInsurance"){c.secondaryInsuranceImgUpload.show();c.secondaryInsuranceImgUpload.alignTo(c.secondaryInsuranceImg.el.dom,"br-br",[0,0])}}if(d=="tertiaryInsurance"){c.tertiaryInsuranceImgUpload.show();c.tertiaryInsuranceImgUpload.alignTo(c.tertiaryInsuranceImg.el.dom,"br-br",[0,0])}},rightColRender:function(a){var b=this;a.getComponent("ImmuPanel").header.add({xtype:"button",text:i18n.details,action:"immunization",scope:b,handler:b.medicalWin});a.getComponent("MedicationsPanel").header.add({xtype:"button",text:i18n.details,action:"medications",scope:b,handler:b.medicalWin});a.getComponent("AllergiesPanel").header.add({xtype:"button",text:i18n.details,action:"allergies",scope:b,handler:b.medicalWin});a.getComponent("IssuesPanel").header.add({xtype:"button",text:i18n.details,action:"issues",scope:b,handler:b.medicalWin});a.getComponent("DentalPanel").header.add({xtype:"button",text:i18n.details,action:"dental",scope:b,handler:b.medicalWin});a.getComponent("SurgeryPanel").header.add({xtype:"button",text:i18n.details,action:"surgery",scope:b,handler:b.medicalWin});this.doLayout()},medicalWin:function(a){app.onMedicalWin(a)},getPatientImgs:function(){var b=this,a=Ext.Number.randomInt(1,1000);b.patientImg.update('<img src="'+settings.site_url+"/patients/"+b.pid+"/patientPhotoId.jpg?"+a+'" height="119" width="119" />');b.patientQRcode.update('<a ondblclick="printQRCode(app.patient.pid)"><img src="'+settings.site_url+"/patients/"+b.pid+"/patientDataQrCode.png?"+a+'" height="119" width="119" title="Print QRCode" /></a>')},getPhotoIdWindow:function(){var a=this;a.PhotoIdWindow=Ext.create("App.classes.PhotoIdWindow",{title:i18n.patient_photo_id,loadMask:true,modal:true}).show()},completePhotoId:function(){this.PhotoIdWindow.close();this.getPatientImgs()},onInsuranceUpload:function(a){var c=this,e=a.action,f=a.up("window"),b,d;if(e=="Primary Insurance"){b=c.primaryInsuranceImgUpload.down("form").getForm();d=c.primaryInsuranceImg}else{if(e=="Secondary Insurance"){b=c.secondaryInsuranceImgUpload.down("form").getForm();d=c.secondaryInsuranceImg}}if(e=="Tertiary Insurance"){b=c.tertiaryInsuranceImgUpload.down("form").getForm();d=c.tertiaryInsuranceImg}if(b.isValid()){b.submit({waitMsg:i18n.uploading_insurance+"...",params:{pid:app.patient.pid,docType:e},success:function(g,h){say(h.result.doc);f.close();d.update('<img src="'+h.result.doc.url+'" height="154" width="254" />')},failure:function(g,h){say(h.result.error);f.close()}})}},verifyPatientRequiredInfo:function(){var b=this,a=b.query('[action="demoFormPanel"]')[0],c;b.patientAlertsStore.load({scope:b,params:{pid:b.pid},callback:function(e,d,g){for(var f=0;f<e.length;f++){c=a.getForm().findField(e[f].data.name);if(e[f].data.val){c.removeCls("x-field-yellow")}else{c.addCls("x-field-yellow")}}}})},readOnlyFields:function(a){for(var c=0;c<a.items.length;c++){var d=a.items[c],b=d.getValue(),e=d.name;if(e=="SS"||e=="DOB"||e=="sex"){if(b==null||b==""){d.setReadOnly(false)}else{d.setReadOnly(true)}}}},loadStores:function(){var b=this;for(var a=0;a<b.stores.length;a++){b.stores[a].load({params:{pid:b.pid}})}},onActive:function(e){var c=this,d,a;if(c.checkIfCurrPatient()){c.pid=app.patient.pid;var b=app.patient;c.updateTitle(b.name+" #"+b.pid+" - "+b.age.str+" - ("+i18n.patient_summary+")",app.patient.readOnly,null);c.setReadOnly(app.patient.readOnly);c.setButtonsDisabled(c.query('button[action="readOnly"]'));if(acl.access_demographics){a=c.tabPanel.getComponent("demoFormPanel");a.getForm().reset();c.getFormData(a,function(f){c.readOnlyFields(f.getFields())});c.getPatientImgs();c.verifyPatientRequiredInfo();Patient.getPatientInsurancesCardsUrlByPid(c.pid,function(f){c.primaryInsuranceImg.update('<img src="'+(f.Primary.url?f.Primary.url:"resources/images/icons/no_card.jpg")+'" height="154" width="254" />');c.secondaryInsuranceImg.update('<img src="'+(f.Secondary.url?f.Secondary.url:"resources/images/icons/no_card.jpg")+'" height="154" width="254" />');c.tertiaryInsuranceImg.update('<img src="'+(f.Tertiary.url?f.Tertiary.url:"resources/images/icons/no_card.jpg")+'" height="154" width="254" />')})}if(acl.access_patient_billing){d=c.tabPanel.getComponent("balancePanel");Fees.getPatientBalance({pid:c.pid},function(f){d.update(i18n.account_balance+": $"+f)})}c.tabPanel.setActiveTab(0);c.loadStores();if((typeof e)=="function"){e(true)}}else{e(false);c.pid=null;c.currPatientError()}}});Ext.define("App.view.patient.ProgressNote",{extend:"Ext.panel.Panel",alias:"widget.progressnote",loadMask:false,initComponent:function(){var a=this;a.tpl=new Ext.XTemplate('<div class="progressNote">   <div class="secession general-data">       <div class="title"> '+i18n.general+' </div>       <table width="100%">           <tr>               <td>                   <div class="header row">'+i18n.name+': {patient_name} </div>                   <div class="header row">'+i18n.record+': #{pid} </div>                   <div class="header row">'+i18n.provider_date+': {open_by} </div>                   <div class="header row">'+i18n.onset_date+': {[values.onset_date || "-"]} </div>                   <div class="header row">'+i18n.signed_by+': {[values.signed_by || "-"]} </div>               </td>               <td>                   <div class="header row">'+i18n.service_date+': {start_date} </div>                   <div class="header row">'+i18n.visit_category+': {visit_category} </div>                   <div class="header row">'+i18n.facility+': {facility} </div>                   <div class="header row">'+i18n.priority+': {priority} </div>                   <div class="header row">'+i18n.close_on+': {[values.close_date || "-"]} </div>               </td>           </tr>           <tr>               <td colspan="2">                   <div class="header row" style="white-space: normal;">'+i18n.brief_description+': {brief_description} </div>               </td>           </tr>       </table>   </div>   <tpl if="reviewofsystems">       <div class="secession">           <div class="title"> '+i18n.review_of_systems+' </div>           <tpl for="reviewofsystems">               <tpl if="this.isNotNull(value)">                   <div class="pblock"> {name}: {value} </div>               </tpl>           </tpl>       </div>   </tpl>   <tpl if="reviewofsystemschecks">       <div class="secession">           <div class="title"> '+i18n.review_of_system_checks+' </div>           <tpl for="reviewofsystemschecks">               <tpl if="this.isNotNull(value)">                   <div class="pblock"> {name}: {value} </div>               </tpl>           </tpl>       </div>   </tpl>   <tpl for="soap">       <div class="secession">           <div class="title"> '+i18n.soap+" </div>           <p><span>"+i18n.subjective+':</span> {[values.subjective || "-"]} </p>           <p><span>'+i18n.objective+':</span> {[values.objective || "-"]}</p>           <p><span>'+i18n.assessment+':</span> {[values.assessment || "-"]}</p>           <p><span>'+i18n.plan+':</span> {[values.plan || "-"]}</p>       </div>   </tpl>   <tpl for="speechdictation">       <div class="secession">           <div class="title"> '+i18n.speech_dictation+" </div>           <p><span>"+i18n.dictation+":</span> {dictation}</p>           <p><span>"+i18n.additional_notes+':</span> {additional_notes}</p>       </div>   </tpl>   <tpl if="vitals">       <div class="secession vitals-data">           <div class="title"> '+i18n.vitals+' </div>           <div style="overflow-x: auto">               <table>                   <tr>                       <td>                          <table class="x-grid-table x-grid-table-vitals vitals-column">                              <tbody>                                  <tr class="x-grid-row">                                       <td class="x-grid-cell x-grid-table-vitals-date">                                           <div class="x-grid-cell-inner ">'+i18n["date_&_time"]+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.weight_lbs+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.weight_kg+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.height_in+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.height_cm+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.bp_systolic+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.bp_diastolic+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.pulse+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.respiration+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.temp_f+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.temp_c+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.temp_location+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.oxygen_saturation+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.head_circumference_in+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.head_circumference_cm+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.waist_circumference_in+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.waist_circumference_cm+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.bmi+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.bmi_status+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.other_notes+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n.administer+'<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">'+i18n["Sign by"]+'<div>                                       </td>                                   </tr>                               </tbody>                           </table>                       </td>                       <tpl for="vitals">                           <td>                           <table class="x-grid-table x-grid-table-vitals vitals-column">                               <tbody>                                   <tr class="x-grid-row">                                       <td class="x-grid-cell x-grid-table-vitals-date">                                           <div class="x-grid-cell-inner ">{date}</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row first">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.weight_lbs || "-"]}</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.weight_kg || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.height_in || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.height_cm || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.bp_systolic || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.bp_diastolic || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.pulse || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.respiration || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.temp_f || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.temp_c || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.temp_location ? values.temp_location.toUpperCase() : "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.oxygen_saturation || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.head_circumference_in || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.head_circumference_cm || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.waist_circumference_in || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.waist_circumference_cm || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.bmi || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.bmi_status || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[values.other_notes || "-"]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[(values.administer_by == null || values.administer_by == " ") ? "-" : values.administer_by]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row ">                                       <td class="x-grid-cell">                                           <div class="x-grid-cell-inner ">{[(values.authorized_by == null || values.authorized_by == " ") ? "-" : values.authorized_by]}<div>                                       </td>                                   </tr>                               </tbody>                           </table>                           </td>                       </tpl>                   </tr>               </table>           </div>       </div>   </tpl></div>',{isNotNull:function(b){return b!="null"&&b!=null},isNotEmpty:function(f,e,h,g){say(f);say(e);say(h);say(g)}});a.callParent(arguments)}});Ext.define("App.view.patient.Visits",{extend:"App.classes.RenderPanel",id:"panelVisits",pageTitle:i18n.visits_history,uses:["App.classes.GridPanel","Ext.ux.PreviewPlugin"],initComponent:function(){var b=this;b.store=Ext.create("App.store.patient.Encounters");function a(c){if(c!==null){return'<img src="resources/images/icons/yes.gif" />'}else{return'<img src="resources/images/icons/no.gif" />'}}b.historyGrid=Ext.create("Ext.grid.Panel",{title:i18n.encounter_history,store:b.store,columns:[{header:"eid",sortable:false,dataIndex:"eid",hidden:true},{width:150,header:i18n.date,sortable:true,dataIndex:"start_date",renderer:Ext.util.Format.dateRenderer("Y-m-d H:i:s")},{flex:1,header:i18n.reason,sortable:true,dataIndex:"brief_description"},{width:180,header:i18n.provider,sortable:false,dataIndex:"provider"},{width:120,header:i18n.facility,sortable:false,dataIndex:"facility"},{width:120,header:i18n.billing_facility,sortable:true,dataIndex:"billing_facility"},{width:45,header:i18n.close+"?",sortable:true,dataIndex:"close_date",renderer:b.openBool}],viewConfig:{itemId:"view",plugins:[{pluginId:"preview",ptype:"preview",bodyField:"brief_description",previewExpanded:false}],listeners:{scope:b,itemclick:b.gridItemClick,itemdblclick:b.gridItemDblClick}},tbar:Ext.create("Ext.PagingToolbar",{store:b.store,displayInfo:true,emptyMsg:"No Encounters Found",plugins:Ext.create("Ext.ux.SlidingPager",{}),items:[{iconCls:"",text:i18n.show_details,enableToggle:true,scope:b,toggleHandler:b.onDetailToggle},"-",{text:i18n.new_encounter,scope:b,handler:b.createNewEncounter}]})});b.pageBody=[b.historyGrid];b.callParent(arguments)},openBool:function(a){if(a!==null){return'<img src="resources/images/icons/yes.gif" />'}else{return'<img src="resources/images/icons/no.gif" />'}},onDetailToggle:function(a,b){this.historyGrid.getComponent("view").getPlugin("preview").toggleExpanded(b)},gridItemClick:function(a){a.getPlugin("preview").toggleRowExpanded()},gridItemDblClick:function(b,a){app.openEncounter(a.data.eid)},createNewEncounter:function(){app.createNewEncounter()},onActive:function(b){if(this.checkIfCurrPatient()){var a=this.getCurrPatient();this.updateTitle(a.name+" ("+i18n.encounters+")");this.store.load();b(true)}else{b(false);this.currPatientError()}}});Ext.define("App.view.patient.Encounter",{extend:"App.classes.RenderPanel",id:"panelEncounter",pageTitle:i18n.encounter,pageLayout:"border",requires:["App.store.patient.Encounter","App.store.patient.Vitals"],pid:null,eid:null,currEncounterStartDate:null,initComponent:function(){var a=this;a.renderAdministrative=acl.access_enc_hcfa||acl.access_enc_cpt||acl.access_enc_history;a.timerTask={scope:a,run:function(){a.encounterTimer()},interval:1000};a.encounterStore=Ext.create("App.store.patient.Encounter",{listeners:{scope:a,datachanged:a.updateProgressNote}});a.encounterEventHistoryStore=Ext.create("App.store.patient.EncounterEventHistory");a.EncounterOrdersStore=Ext.create("App.store.patient.EncounterCPTsICDs");if(acl.access_encounter_checkout){a.checkoutAlertArea=Ext.create("App.store.patient.CheckoutAlertArea")}if(acl.add_encounters){a.newEncounterWindow=Ext.create("Ext.window.Window",{title:i18n.new_encounter_form,closeAction:"hide",modal:true,width:660,items:[{xtype:"form",border:false,bodyPadding:"10 10 0 10"}],buttons:[{text:i18n.create_encounter,action:"encounter",scope:a,handler:a.onSave},{text:i18n.cancel,scope:a,handler:a.cancelNewEnc}],listeners:{scope:a,close:a.cancelNewEnc}})}if(acl.access_encounter_checkout){a.checkoutWindow=Ext.create("Ext.window.Window",{title:i18n.checkout_and_signing,closeAction:"hide",modal:true,layout:"border",width:1000,height:660,bodyPadding:5,items:[{xtype:"grid",title:i18n.services_diagnostics,region:"center",store:a.EncounterOrdersStore,columns:[{header:i18n.code,width:60,dataIndex:"code"},{header:i18n.description,flex:1,dataIndex:"code_text"},{header:i18n.type,flex:1,dataIndex:"type"}]},a.documentsimplegrid=Ext.create("App.view.patient.EncounterDocumentsGrid",{title:i18n.documents,region:"east",width:485}),{xtype:"form",title:i18n.additional_info,region:"south",split:true,height:245,layout:"column",defaults:{xtype:"fieldset",padding:8},items:[{xtype:"fieldcontainer",columnWidth:0.5,defaults:{xtype:"fieldset",padding:8},items:[{xtype:"fieldset",margin:"5 1 5 5",padding:8,columnWidth:0.5,height:115,title:i18n.messages_notes_and_reminders,items:[{xtype:"textfield",name:"message",fieldLabel:i18n.message,anchor:"100%"},{xtype:"textfield",name:"reminder",fieldLabel:i18n.reminder,anchor:"100%"},{xtype:"textfield",grow:true,name:"note",fieldLabel:i18n.note,anchor:"100%"}]},{title:"Follow Up",margin:"5 1 5 5",defaults:{anchor:"100%"},items:[{xtype:"mitos.followupcombo",fieldLabel:i18n.time_interval,name:"followup_time"},{fieldLabel:i18n.facility,xtype:"mitos.activefacilitiescombo",name:"followup_facility"}]}]},{xtype:"fieldset",margin:5,padding:8,columnWidth:0.5,layout:"fit",height:208,title:i18n.warnings_alerts,items:[{xtype:"grid",hideHeaders:true,store:a.checkoutAlertArea,border:false,rowLines:false,header:false,viewConfig:{stripeRows:false,disableSelection:true},columns:[{dataIndex:"alertType",width:30,renderer:a.alertIconRenderer},{dataIndex:"alert",flex:1}]}]}]}],buttons:[{text:i18n.co_sign,action:"encounter",scope:a,handler:a.coSignEncounter},{text:i18n.sign,action:"encounter",scope:a,handler:a.signEncounter},{text:i18n.cancel,handler:a.cancelCheckout}],listeners:{scope:a,show:function(){a.EncounterOrdersStore.load({params:{eid:app.patient.eid}});if(acl.access_encounter_checkout){a.checkoutAlertArea.load({params:{eid:app.patient.eid}})}a.documentsimplegrid.loadDocs(a.eid)}}})}if(a.renderAdministrative){a.centerPanel=Ext.create("Ext.tab.Panel",{region:"center",margin:"1 0 0 0",activeTab:0,bodyPadding:5,listeners:{render:function(){this.items.each(function(b){b.tab.on("click",function(){a.onTapPanelChange(this)})})}}})}else{a.centerPanel=Ext.create("Ext.panel.Panel",{region:"center",margin:"1 0 0 0",layout:"fit",bodyPadding:5})}a.encounterTabPanel=a.centerPanel.add(Ext.create("Ext.tab.Panel",{title:a.renderAdministrative?i18n.encounter:false,itemId:"encounter",plain:true,activeItem:0,border:false,defaults:{bodyStyle:"padding:15px",bodyBorder:true,layout:"fit"}}));if(acl.access_patient_vitals){a.vitalsPanel=a.encounterTabPanel.add(Ext.create("Ext.panel.Panel",{title:i18n.vitals,action:"encounter",cls:"vitals-panel",bodyPadding:"5 10",overflowY:"auto",frame:true,bodyStyle:"background-color:white",layout:{type:"hbox",stretch:true},items:[{xtype:"form",width:313,margin:0,border:false,layout:"anchor",fieldDefaults:{msgTarget:"side",labelAlign:"right"},buttons:[{text:i18n.reset,width:40,scope:a,handler:a.resetVitalsForm},{text:i18n.save,action:"vitals",width:40,scope:a,handler:a.onSave},{text:i18n.sign,width:40,disabled:true,action:"signBtn",scope:a,handler:a.onVitalsSign}]},{xtype:"vitalsdataview",flex:1,autoScroll:true,listeners:{scope:a,itemdblclick:a.onVitalsClick}}],dockedItems:{xtype:"toolbar",dock:"top",items:["->",{text:i18n.vector_charts,iconCls:"icoChart",scope:a,handler:a.onChartWindowShow}]}}))}if(acl.access_review_of_systems){a.reviewSysPanel=a.encounterTabPanel.add(Ext.create("Ext.form.Panel",{autoScroll:true,action:"encounter",title:i18n.review_of_systems,frame:true,bodyPadding:5,bodyStyle:"background-color:white",fieldDefaults:{msgTarget:"side"},buttons:[{text:i18n.save,iconCls:"save",action:"reviewOfSystems",scope:a,handler:a.onSave}]}))}if(acl.access_review_of_systems_checks){a.reviewSysCkPanel=a.encounterTabPanel.add(Ext.create("Ext.form.Panel",{autoScroll:true,action:"encounter",title:i18n.review_of_systems_checks,frame:true,bodyPadding:5,bodyStyle:"background-color:white",fieldDefaults:{msgTarget:"side"},buttons:[{text:i18n.save,iconCls:"save",action:"reviewOfSystemsChecks",scope:a,handler:a.onSave}]}))}if(acl.access_soap){a.soapPanel=a.encounterTabPanel.add(Ext.create("Ext.form.Panel",{autoScroll:true,title:i18n.soap,action:"encounter",frame:true,bodyPadding:5,bodyStyle:"background-color:white",fieldDefaults:{msgTarget:"side"},buttons:[{text:i18n.save,iconCls:"save",action:"soap",scope:a,handler:a.onSave}]}))}if(acl.access_itmes_to_review){a.itemsToReview=a.encounterTabPanel.add(Ext.create("App.view.patient.ItemsToReview",{title:i18n.items_to_review,bodyPadding:"7 5 2 5"}))}if(acl.access_enc_hcfa||acl.access_enc_cpt||acl.access_enc_history){a.administrativeTabPanel=a.centerPanel.add(Ext.create("Ext.tab.Panel",{title:i18n.administrative,itemId:"administrative",plain:true,activeItem:0,defaults:{bodyStyle:"padding:15px",bodyBorder:true,layout:"fit"}}))}if(acl.access_enc_hcfa){a.MiscBillingOptionsPanel=a.administrativeTabPanel.add(Ext.create("App.view.patient.encounter.HealthCareFinancingAdministrationOptions",{autoScroll:true,title:i18n.misc_billing_options_HCFA_1500}))}if(acl.access_enc_cpt){a.CurrentProceduralTerminology=a.administrativeTabPanel.add(Ext.create("App.view.patient.encounter.CurrentProceduralTerminology",{title:i18n.current_procedural_terminology}))}if(acl.access_enc_history){a.EncounterEventHistory=a.administrativeTabPanel.add(Ext.create("App.classes.grid.EventHistory",{bodyStyle:0,title:i18n.encounter_history,store:a.encounterEventHistoryStore}))}a.progressNote=Ext.create("App.view.patient.ProgressNote",{title:i18n.encounter_progress_note,region:"east",margin:"0 0 0 2",bodyStyle:"padding:15px",width:500,collapsible:true,animCollapse:true,collapsed:true,listeners:{scope:this,collapse:a.progressNoteCollapseExpand,expand:a.progressNoteCollapseExpand},tools:[{type:"print",tooltip:i18n.print_progress_note,scope:a,handler:function(){var d=window.open("print.html","win","left=20,top=20,width=700,height=700,toolbar=0,resizable=1,location=1,scrollbars=1,menubar=0,directories=0");var e=a.progressNote.body.dom;var c=document.createElement("div");var b=c.appendChild(e.cloneNode(true));d.document.write(b.innerHTML);Ext.defer(function(){d.print()},1000)}}]});a.panelToolBar=Ext.create("Ext.toolbar.Toolbar",{dock:"top",defaults:{scope:a,handler:a.onMedicalWin},items:["-",{text:i18n.immunizations+" ",action:"immunization"},"-",{text:i18n.allergies+" ",action:"allergies"},"-",{text:i18n.active_problems+" ",action:"issues"},"-",{text:i18n.surgeries+" ",action:"surgery"},"-",{text:i18n.dental+" ",action:"dental"},"-",{text:i18n.medications+" ",action:"medications"},"-",{text:i18n.laboratories+" ",action:"laboratories"},"-",{text:i18n.new_lab_order,action:"lab",scope:a,handler:a.newDoc},"-",{text:i18n.new_xray_order,action:"xRay",scope:a,handler:a.newDoc},"-",{text:i18n.new_prescription,action:"prescription",scope:a,handler:a.newDoc},"-",{text:i18n.new_doctors_note,action:"notes",scope:a,handler:a.newDoc},"-","->","-",a.priorityCombo=Ext.create("App.classes.combo.EncounterPriority",{listeners:{scope:a,select:a.prioritySelect}}),"-"]});if(acl.access_encounter_checkout){a.panelToolBar.add({text:i18n.checkout,handler:a.onCheckout},"-")}a.pageBody=[a.centerPanel,a.progressNote];a.listeners={beforerender:a.beforePanelRender};a.callParent();a.down("panel").addDocked(a.panelToolBar)},newDoc:function(a){app.onNewDocumentsWin(a.action)},onMedicalWin:function(a){app.onMedicalWin(a)},onChartWindowShow:function(){app.onChartsWin()},prioritySelect:function(b,a){this.changeEncounterPriority(a[0].data.option_value)},changeEncounterPriority:function(a){var b=this,c={pid:b.pid,eid:b.eid,priority:a};Encounter.updateEncounterPriority(c,function(){app.patientButtonRemoveCls();app.patientBtn.addCls(a)});b.updateProgressNote()},newEncounter:function(){var c=this,b,a;c.resetTabs();if(acl.add_encounters){Encounter.checkOpenEncounters(function(e,d){if(d.result.encounter){Ext.Msg.show({title:"Oops! "+i18n.open_encounters_found+"...",msg:i18n.do_you_want_to+" <strong>"+i18n.continue_creating_the_new_encounters+'</strong><br>"'+i18n.click_no_to_review_encounter_history+'"',buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(f){if(f=="yes"){b=c.newEncounterWindow.down("form");b.getForm().reset();a=Ext.ModelManager.getModel("App.model.patient.Encounter");a=Ext.ModelManager.create({start_date:new Date()},a);b.getForm().loadRecord(a);c.newEncounterWindow.show()}else{app.openPatientVisits()}}})}else{b=c.newEncounterWindow.down("form");b.getForm().reset();a=Ext.ModelManager.getModel("App.model.patient.Encounter");a=Ext.ModelManager.create({start_date:new Date()},a);b.getForm().loadRecord(a);c.newEncounterWindow.show()}})}else{app.accessDenied()}},onCheckout:function(){var b=this,c=b.checkoutWindow,a=b.getCurrPatient();c.setTitle(a.name+" #"+a.pid+" - "+Ext.Date.format(b.currEncounterStartDate,"F j, Y, g:i:s a")+" ("+i18n.checkout+")");c.show()},coSignEncounter:function(){},signEncounter:function(){this.closeEncounter();this.checkoutWindow.close()},cancelCheckout:function(a){var c=a.up("window"),b=c.down("form").getForm();c.close();b.reset()},onSave:function(e){var j=this,a=j.centerPanel.getActiveTab().getActiveTab(),c;if(e.action=="encounter"){c=j.newEncounterWindow.down("form").getForm()}else{if(e.action=="vitals"){c=a.down("form").getForm()}else{c=a.getForm()}}if(c.isValid()){var l=c.getValues(),k,g,h;if(e.action=="encounter"){ACL.hasPermission("add_encounters",function(n,i){if(i.result){k=j.encounterStore;g=c.getRecord();h=k.indexOf(g);if(h==-1){k.add(l);g=k.last()}else{g.set(l)}g.save({callback:function(o){app.patientButtonRemoveCls();app.patientBtn.addCls(o.data.priority);j.openEncounter(o.data.eid);e.up("window").hide()}})}else{e.up("window").close();app.accessDenied()}})}else{if(e.action=="vitals"){var d=c.getFields().items,b=d.length,m=0;for(var f=0;f<d.length;f++){if(d[f].xtype!="mitos.datetime"){if(d[f].value==""){m++}}}if((b-3)>m){ACL.hasPermission("add_vitals",function(n,i){if(i.result){k=j.encounterStore.getAt(0).vitals();g=c.getRecord();l=j.addDefaultData(l);h=k.indexOf(g);if(h==-1){k.insert(0,l)}else{g.set(l)}k.sync({scope:j,success:function(){j.msg("Sweet!",i18n.vitals_saved);j.updateProgressNote();j.vitalsPanel.down("vitalsdataview").refresh();j.resetVitalsForm()}})}else{app.accessDenied()}})}else{j.msg("Oops!",i18n.vitals_form_is_epmty)}}else{ACL.hasPermission("edit_encounters",function(n,i){if(i.result){k=j.encounterStore;if(e.action=="reviewOfSystems"){g=k.getAt(0).reviewofsystems().getAt(0)}else{if(e.action=="reviewOfSystemsChecks"){g=k.getAt(0).reviewofsystemschecks().getAt(0)}else{if(e.action=="soap"){g=k.getAt(0).soap().getAt(0)}else{if(e.action=="speechDictation"){g=k.getAt(0).speechdictation().getAt(0)}}}}l=j.addDefaultData(l);g.set(l);g.save({callback:function(){j.updateProgressNote()}});j.msg("Sweet!",i18n.encounter_updated);j.encounterEventHistoryStore.load({params:{eid:app.patient.eid}})}else{app.accessDenied()}})}}}},onVitalsSign:function(){var d=this,c=d.vitalsPanel.down("form").getForm(),b=d.encounterStore.getAt(0).vitals(),a=c.getRecord();if(c.isValid()){d.passwordVerificationWin(function(f,e){if(f=="ok"){User.verifyUserPass(e,function(h,g){if(g.result){a.set({auth_uid:user.id});b.sync({callback:function(){c.reset();d.msg("Sweet!",i18n.vitals_signed);d.updateProgressNote();d.resetVitalsForm();d.vitalsPanel.down("vitalsdataview").refresh()}})}else{Ext.Msg.show({title:"Oops!",msg:i18n.incorrect_password,buttons:Ext.Msg.OKCANCEL,icon:Ext.Msg.ERROR,fn:function(i){if(i=="ok"){d.onVitalsSign()}}})}})}})}},addDefaultData:function(a){a.pid=this.pid;a.eid=this.eid;a.uid=user.id;a.date=Ext.Date.format(new Date(),"Y-m-d H:i:s");return a},cancelNewEnc:function(){this.newEncounterWindow.close();app.openPatientSummary()},openEncounter:function(a){var b=this,c;b.resetTabs();say("patient data");say(app.patient);b.eid=app.patient.eid=a;b.encounterStore.getProxy().extraParams.eid=b.eid;b.encounterStore.load({scope:b,callback:function(d){var f=d[0].data;b.pid=f.pid;b.currEncounterStartDate=f.start_date;if(!f.close_date){b.startTimer();b.setButtonsDisabled(b.getButtonsToDisable())}else{if(b.stopTimer()){var g=b.timer(f.start_date,f.close_date),e=app.patient;b.updateTitle(e.name+" #"+e.pid+" - "+e.age.str+" - "+Ext.Date.format(b.currEncounterStartDate,"F j, Y, g:i:s a")+" ("+i18n.closed_encounter+")",app.patient.readOnly,g);b.setButtonsDisabled(b.getButtonsToDisable(),true)}}if(b.vitalsPanel){c=b.vitalsPanel.down("vitalsdataview");b.resetVitalsForm();c.store=d[0].vitalsStore;c.refresh()}if(b.reviewSysPanel){b.reviewSysPanel.getForm().loadRecord(d[0].reviewofsystems().getAt(0))}if(b.reviewSysCkPanel){b.reviewSysCkPanel.getForm().loadRecord(d[0].reviewofsystemschecks().getAt(0))}if(b.soapPanel){b.soapPanel.getForm().loadRecord(d[0].soap().getAt(0))}b.encounterEventHistoryStore.load({params:{eid:a}});if(b.soapPanel){b.soapPanel.query("icdsfieldset")[0].loadIcds(d[0].soap().getAt(0).data.icdxCodes)}if(b.CurrentProceduralTerminology){b.CurrentProceduralTerminology.encounterCptStoreLoad(b.pid,a,function(){b.CurrentProceduralTerminology.setDefaultQRCptCodes()})}b.priorityCombo.setValue(f.priority);app.PreventiveCareWindow.loadPatientPreventiveCare()}})},closeEncounter:function(){var c=this,b,a;c.passwordVerificationWin(function(e,d){if(e=="ok"){b=c.checkoutWindow.down("form").getForm();a=b.getValues();a.eid=c.eid;a.pid=c.pid;a.close_date=Ext.Date.format(new Date(),"Y-m-d H:i:s");a.signature=d;Encounter.closeEncounter(a,function(g,f){if(f.result.success){if(c.stopTimer()){app.patient.eid=null;app.openPatientVisits();c.msg("Sweet!",i18n.encounter_closed)}}else{Ext.Msg.show({title:"Oops!",msg:i18n.incorrect_password,buttons:Ext.Msg.OKCANCEL,icon:Ext.Msg.ERROR,fn:function(h){if(h=="ok"){c.closeEncounter()}}})}})}})},progressNoteCollapseExpand:function(){this.centerPanel.doLayout()},updateProgressNote:function(){var a=this;Encounter.getProgressNoteByEid(a.eid,function(d,b){var c=b.result;a.progressNote.tpl.overwrite(a.progressNote.body,c)})},onTapPanelChange:function(a){if(a.card.itemId=="encounter"){this.isProgressNoteCollapsed(true)}else{this.isProgressNoteCollapsed(true)}},isProgressNoteCollapsed:function(a){a?this.progressNote.collapse():this.progressNote.expand()},onVitalsClick:function(b,a,f){var d=this,c=d.vitalsPanel.down("form").getForm();c.reset();if(!a.data.auth_uid){d.vitalsPanel.query('button[action="signBtn"]')[0].setDisabled(false);c.loadRecord(a)}else{Ext.Msg.show({title:"Oops!",msg:i18n.this_column_can_not_be_modified_because_it_has_been_signed_by+" "+a.data.auth_uid,buttons:Ext.Msg.OK,icon:Ext.Msg.WARNING,animateTarget:f})}},resetVitalsForm:function(){var d=this,c=d.vitalsPanel.down("form").getForm(),a=Ext.ModelManager.getModel("App.model.patient.Vitals"),b=Ext.ModelManager.create({},a);d.vitalsPanel.query('button[action="signBtn"]')[0].setDisabled(true);c.loadRecord(b)},alertIconRenderer:function(a){if(a==1){return'<img src="resources/images/icons/icoLessImportant.png" />'}else{if(a==2){return'<img src="resources/images/icons/icoImportant.png" />'}}return a},startTimer:function(){Ext.TaskManager.start(this.timerTask);return true},stopTimer:function(){Ext.TaskManager.stop(this.timerTask);return true},encounterTimer:function(){var a=this,b=a.timer(a.currEncounterStartDate,new Date());a.updateTitle(app.patient.name+" #"+app.patient.pid+" - "+app.patient.age.str+" - "+Ext.Date.format(a.currEncounterStartDate,"F j, Y, g:i:s a")+" ("+i18n.opened_encounter+")",app.patient.readOnly,b)},timer:function(b,g){var a=Ext.Date.getElapsed(b,g),i,e=Math.floor(a/1000);function c(j){return(j>=10)?j:"0"+j}var d=Math.floor(e/60);e=e%60;i=c(e);var h=Math.floor(d/60);d=d%60;i=c(d)+":"+i;var f=Math.floor(h/24);h=h%24;i=c(h)+":"+i;i=(f==0)?'<span class="time">'+i+"</span>":'<span class="day">'+f+" "+i18n.day_s+'</span><span class="time">'+i+"</span>";return i},cf:function(f,d){var b=f.getValue(),a=9*b/5+32,c=Ext.util.Format.round(a,1);if(d.getKey()!=d.TAB){f.up("form").getForm().findField("temp_f").setValue(c)}},fc:function(f,d){var b=f.getValue(),a=(b-32)*5/9,c=Ext.util.Format.round(a,1);if(d.getKey()!=d.TAB){f.up("form").getForm().findField("temp_c").setValue(c)}},lbskg:function(f,d){var a=f.getValue(),c=a/2.2,b=Ext.util.Format.round(c,1);if(d.getKey()!=d.TAB){f.up("form").getForm().findField("weight_kg").setValue(b)}},kglbs:function(f,d){var a=f.getValue(),c=a*2.2,b=Ext.util.Format.round(c,1);if(d.getKey()!=d.TAB){f.up("form").getForm().findField("weight_lbs").setValue(b)}},incm:function(f,d){var a=f.getValue(),c=a*2.54,b=Ext.util.Format.round(c,1);if(d.getKey()!=d.TAB){if(f.name=="head_circumference_in"){f.up("form").getForm().findField("head_circumference_cm").setValue(b)}else{if(f.name=="waist_circumference_in"){f.up("form").getForm().findField("waist_circumference_cm").setValue(b)}else{if(f.name=="height_in"){f.up("form").getForm().findField("height_cm").setValue(b)}}}}},cmin:function(f,d){var a=f.getValue(),c=a*0.39,b=Ext.util.Format.round(c,1);if(d.getKey()!=d.TAB){if(f.name=="head_circumference_cm"){f.up("form").getForm().findField("head_circumference_in").setValue(b)}else{if(f.name=="waist_circumference_cm"){f.up("form").getForm().findField("waist_circumference_in").setValue(b)}else{if(f.name=="height_cm"){f.up("form").getForm().findField("height_in").setValue(b)}}}}},bmi:function(f){var d=f.up("form").getForm(),e=d.findField("weight_kg").getValue(),a=d.findField("height_cm").getValue(),c,b;if(e>0&&a>0){c=e/(a/100*a/100);if(c<15){b=i18n.very_severely_underweight}else{if(c>=15&&c<16){b=i18n.severely_underweight}else{if(c>=16&&c<18.5){b=i18n.underweight}else{if(c>=18.5&&c<25){b=i18n.normal}else{if(c>=25&&c<30){b=i18n.overweight}else{if(c>=30&&c<35){b=i18n.obese_class_1}else{if(c>=35&&c<40){b=i18n.obese_class_2}else{if(c>=40){b=i18n.obese_class_3}}}}}}}}f.up("form").getForm().findField("bmi").setValue(Ext.util.Format.number(c,"0.00"));f.up("form").getForm().findField("bmi_status").setValue(b)}},beforePanelRender:function(){var b=this,a,c=function(){return[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"}]};if(b.vitalsPanel){b.getFormItems(b.vitalsPanel.down("form"),4,function(){a=b.vitalsPanel.down("form").getForm();a.findField("temp_c").addListener("keyup",b.cf,b);a.findField("temp_f").addListener("keyup",b.fc,b);a.findField("weight_lbs").addListener("keyup",b.lbskg,b);a.findField("weight_kg").addListener("keyup",b.kglbs,b);a.findField("height_cm").addListener("keyup",b.cmin,b);a.findField("height_in").addListener("keyup",b.incm,b);a.findField("weight_lbs").addListener("blur",b.bmi,b);a.findField("weight_kg").addListener("blur",b.bmi,b);a.findField("height_cm").addListener("blur",b.bmi,b);a.findField("height_in").addListener("blur",b.bmi,b);a.findField("head_circumference_cm").addListener("keyup",b.cmin,b);a.findField("head_circumference_in").addListener("keyup",b.incm,b);a.findField("waist_circumference_cm").addListener("keyup",b.cmin,b);a.findField("waist_circumference_in").addListener("keyup",b.incm,b)})}if(b.reviewSysPanel){b.getFormItems(b.reviewSysPanel,8,function(){var f=b.reviewSysPanel.getForm().getFields(),d=new c;for(var e=0;e<f.items.length;e++){d.push({name:f.items[e].name,type:"auto"})}Ext.define("App.model.patient.ReviewOfSystems",{extend:"Ext.data.Model",fields:d,proxy:{type:"direct",api:{update:Encounter.updateReviewOfSystemsById}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}})})}if(b.soapPanel){b.getFormItems(b.soapPanel,6,function(){var f=b.soapPanel.getForm().getFields(),d=new c;for(var e=0;e<f.items.length;e++){d.push({name:f.items[e].name,type:"auto"})}Ext.define("App.model.patient.SOAP",{extend:"Ext.data.Model",fields:d,proxy:{type:"direct",api:{update:Encounter.updateSoapById}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}})})}if(b.reviewSysCkPanel){b.getFormItems(b.reviewSysCkPanel,9,function(){var f=b.reviewSysCkPanel.getForm().getFields(),d=new c;for(var e=0;e<f.items.length;e++){d.push({name:f.items[e].name,type:"auto"})}Ext.define("App.model.patient.ReviewOfSystemsCheck",{extend:"Ext.data.Model",fields:d,proxy:{type:"direct",api:{update:Encounter.updateReviewOfSystemsChecksById}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}})})}if(b.newEncounterWindow){b.getFormItems(b.newEncounterWindow.down("form"),5)}},getButtonsToDisable:function(){var b=this,a=[];if(b.ButtonsToDisable==null){if(b.vitalsPanel){a.concat(a,b.vitalsPanel.query("button"))}if(b.reviewSysPanel){a.concat(a,b.reviewSysPanel.query("button"))}if(b.reviewSysCkPanel){a.concat(a,b.reviewSysCkPanel.query("button"))}if(b.soapPanel){a.concat(a,b.soapPanel.query("button"))}if(b.MiscBillingOptionsPanel){a.concat(a,b.MiscBillingOptionsPanel.query("button"))}if(b.CurrentProceduralTerminology){a.concat(a,b.CurrentProceduralTerminology.query("button"))}if(b.EncounterEventHistory){a.concat(a,b.EncounterEventHistory.query("button"))}if(b.newEncounterWindow){a.concat(a,b.newEncounterWindow.query("button"))}if(b.checkoutWindow){a.concat(a,b.checkoutWindow.query("button"))}b.ButtonsToDisable=a}return b.ButtonsToDisable},resetTabs:function(){var a=this;if(a.renderAdministrative){a.centerPanel.setActiveTab(0)}if(a.encounterTabPanel){a.encounterTabPanel.setActiveTab(0)}if(a.administrativeTabPanel){a.administrativeTabPanel.setActiveTab(0)}},onDocumentView:function(a,d){var c=a.getStore().getAt(d),b=c.data.url;app.onDocumentView(b)},onActive:function(c){var b=this,a=app.patient;if(b.checkIfCurrPatient()){b.updateTitle(a.name+" ("+i18n.visits+")",a.readOnly,null);b.setReadOnly(a.readOnly);c(true)}else{c(false);b.currPatientError()}}});Ext.define("App.view.patient.windows.Medical",{extend:"App.classes.window.Window",title:i18n.medical_window,id:"MedicalWindow",layout:"card",closeAction:"hide",height:750,width:1200,bodyStyle:"background-color:#fff",modal:true,defaults:{margin:5},requires:["App.view.patient.LaboratoryResults"],pid:null,initComponent:function(){var a=this;a.patientImmuListStore=Ext.create("App.store.patient.PatientImmunization",{groupField:"immunization_name",sorters:["immunization_name","administered_date"],listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientAllergiesListStore=Ext.create("App.store.patient.Allergies",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientMedicalIssuesStore=Ext.create("App.store.patient.MedicalIssues",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientSurgeryStore=Ext.create("App.store.patient.Surgery",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientDentalStore=Ext.create("App.store.patient.Dental",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.patientMedicationsStore=Ext.create("App.store.patient.Medications",{listeners:{scope:a,beforesync:a.setDefaults},autoSync:true});a.labPanelsStore=Ext.create("App.store.patient.LaboratoryTypes",{autoSync:true});a.items=[{xtype:"grid",action:"patientImmuListGrid",itemId:"patientImmuListGrid",store:a.patientImmuListStore,features:Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:i18n.immunization+': {name} ({rows.length} Item{[values.rows.length > 1 ? "s" : ""]})',hideGroupedHeader:true}),columns:[{header:i18n.immunization_name,width:100,dataIndex:"immunization_name"},{xtype:"datecolumn",header:"Date",format:"Y-m-d",width:100,dataIndex:"administered_date"},{header:i18n.lot_number,width:100,dataIndex:"lot_number"},{header:"Notes",flex:1,dataIndex:"note"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:"general",xtype:"container",layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 3 0",xtype:"textfield"},items:[{xtype:"immunizationlivesearch",fieldLabel:i18n.name,hideLabel:false,allowBlank:false,itemId:"immunization_name",name:"immunization_name",enableKeyEvents:true,action:"immunizations",width:570,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"immunization_id",action:"idField"},{fieldLabel:i18n.administrator,name:"administered_by",width:295,labelWidth:160}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 3 0",xtype:"textfield"},items:[{fieldLabel:i18n.lot_number,xtype:"textfield",width:300,name:"lot_number"},{xtype:"numberfield",fieldLabel:i18n.dosis_number,width:260,name:"dosis"},{fieldLabel:i18n.info_statement_given,width:295,labelWidth:160,xtype:"datefield",format:"Y-m-d",name:"education_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 3 0",xtype:"textfield"},items:[{fieldLabel:i18n.notes,xtype:"textfield",width:300,name:"note"},{fieldLabel:i18n.manufacturer,xtype:"textfield",width:260,name:"manufacturer"},{fieldLabel:i18n.date_administered,xtype:"datefield",width:295,labelWidth:160,format:"Y-m-d",name:"administered_date"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_immunizations",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientAllergiesListGrid",store:a.patientAllergiesListStore,columns:[{header:i18n.type,width:100,dataIndex:"allergy_type"},{header:i18n.name,width:100,dataIndex:"allergy"},{header:i18n.location,width:100,dataIndex:"location"},{header:i18n.severity,flex:1,dataIndex:"severity"},{text:i18n.active,width:55,dataIndex:"alert",renderer:a.boolRenderer}],plugins:a.rowEditingAllergies=Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"mitos.allergiestypescombo",fieldLabel:i18n.type,name:"allergy_type",action:"allergy_type",allowBlank:false,width:225,labelWidth:70,enableKeyEvents:true,listeners:{scope:a,select:a.onAllergyTypeSelect}},{xtype:"mitos.allergieslocationcombo",fieldLabel:i18n.location,name:"location",action:"location",width:225,labelWidth:70,listeners:{scope:a,select:a.onLocationSelect}},{fieldLabel:i18n.begin_date,xtype:"datefield",format:"Y-m-d",name:"begin_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"mitos.allergiescombo",fieldLabel:i18n.allergy,action:"allergie_name",name:"allergy",enableKeyEvents:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect,change:a.disableFieldLogic}},{xtype:"medicationlivetsearch",fieldLabel:i18n.allergy,hideLabel:false,action:"drug_name",name:"allergy",hidden:true,disabled:true,enableKeyEvents:true,width:225,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect,change:a.disableFieldLogic}},{xtype:"textfield",hidden:true,name:"allergy_id",action:"idField"},{xtype:"mitos.allergiesabdominalcombo",fieldLabel:i18n.reaction,name:"reaction",disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{xtype:"mitos.allergieslocalcombo",fieldLabel:i18n.reaction,name:"reaction",hidden:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{xtype:"mitos.allergiesskincombo",fieldLabel:i18n.reaction,name:"reaction",hidden:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{xtype:"mitos.allergiessystemiccombo",fieldLabel:i18n.reaction,name:"reaction",hidden:true,disabled:true,width:225,labelWidth:70,listeners:{scope:a,change:a.disableFieldLogic}},{fieldLabel:i18n.end_date,xtype:"datefield",format:"Y-m-d",name:"end_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"mitos.allergiesseveritycombo",fieldLabel:i18n.severity,name:"severity",width:225,labelWidth:70}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_allergies",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientMedicalListGrid",store:a.patientMedicalIssuesStore,columns:[{header:i18n.problem,flex:1,dataIndex:"code_text"},{xtype:"datecolumn",header:i18n.begin_date,width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,width:100,format:"Y-m-d",dataIndex:"end_date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"liveicdxsearch",fieldLabel:i18n.problem,name:"code_text",allowBlank:false,hideLabel:false,itemId:"medicalissues",action:"medicalissues",enableKeyEvents:true,width:510,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"code",action:"idField"},{fieldLabel:i18n.begin_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"begin_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.ocurrence,width:250,labelWidth:70,xtype:"mitos.occurrencecombo",name:"ocurrence"},{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:250,labelWidth:70,name:"outcome"},{fieldLabel:i18n.end_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"end_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:250,labelWidth:70,fieldLabel:i18n.referred_by,name:"referred_by"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_active_problems",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientSurgeryListGrid",store:a.patientSurgeryStore,columns:[{header:i18n.surgery,width:100,flex:1,dataIndex:"surgery"},{xtype:"datecolumn",header:i18n.date,width:100,format:"Y-m-d",dataIndex:"date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.surgery,name:"surgery",hideLabel:false,allowBlank:false,width:510,labelWidth:70,xtype:"surgerieslivetsearch",itemId:"surgery",action:"surgery",enableKeyEvents:true,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"surgery_id",action:"idField"},{fieldLabel:i18n.date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.notes,xtype:"textfield",width:510,labelWidth:70,name:"notes"},{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:200,labelWidth:80,name:"outcome"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:260,labelWidth:70,fieldLabel:i18n.referred_by,name:"referred_by"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_surgery",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientDentalListGrid",store:a.patientDentalStore,columns:[{header:i18n.title,width:100,dataIndex:"title"},{xtype:"datecolumn",header:i18n.begin_date,width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,flex:1,format:"Y-m-d",dataIndex:"end_date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:225,labelWidth:70,fieldLabel:i18n.title,action:"dental",name:"title"},{fieldLabel:i18n.begin_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"begin_date"},{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:250,labelWidth:70,name:"outcome"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",width:225,labelWidth:70,fieldLabel:i18n.referred_by,name:"referred_by"},{fieldLabel:i18n.end_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"end_date"},{fieldLabel:i18n.ocurrence,xtype:"mitos.occurrencecombo",width:250,labelWidth:70,name:"ocurrence"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_dental",scope:a,handler:a.onReviewed}]},{xtype:"grid",action:"patientMedicationsListGrid",store:a.patientMedicationsStore,columns:[{header:i18n.medication,flex:1,dataIndex:"medication"},{xtype:"datecolumn",header:i18n.begin_date,width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:i18n.end_date,width:100,format:"Y-m-d",dataIndex:"end_date"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"medicationlivetsearch",fieldLabel:i18n.medication,hideLabel:false,itemId:"medication",name:"medication",action:"medication",enableKeyEvents:true,width:520,labelWidth:70,listeners:{scope:a,select:a.onLiveSearchSelect}},{xtype:"textfield",hidden:true,name:"medication_id",action:"idField"},{fieldLabel:i18n.begin_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"begin_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.outcome,xtype:"mitos.outcome2combo",width:250,labelWidth:70,name:"outcome"},{xtype:"textfield",width:260,fieldLabel:i18n.referred_by,name:"referred_by"},{fieldLabel:i18n.end_date,xtype:"datefield",width:200,labelWidth:80,format:"Y-m-d",name:"end_date"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{fieldLabel:i18n.ocurrence,width:250,labelWidth:70,xtype:"mitos.occurrencecombo",name:"ocurrence"}]}]}]}),bbar:["->",{text:i18n.reviewed,action:"review",itemId:"review_medications",scope:a,handler:a.onReviewed}]},{xtype:"container",action:"patientLabs",layout:"border",items:[{xtype:"panel",region:"north",layout:"border",bodyBorder:false,border:false,height:350,split:true,items:[{xtype:"grid",region:"west",width:290,split:true,store:a.labPanelsStore,columns:[{header:i18n.laboratories,dataIndex:"label",flex:1}],listeners:{scope:a,itemclick:a.onLabPanelSelected,selectionchange:a.onLabPanelSelectionChange}},{xtype:"panel",action:"labPreviewPanel",title:i18n.laboratory_preview,region:"center",items:[a.uploadWin=Ext.create("Ext.window.Window",{draggable:false,closable:false,closeAction:"hide",items:[{xtype:"form",bodyPadding:10,width:400,items:[{xtype:"filefield",name:"filePath",buttonText:i18n.select_a_file+"...",anchor:"100%"}],api:{submit:DocumentHandler.uploadDocument}}],buttons:[{text:i18n.cancel,handler:function(){a.uploadWin.close()}},{text:i18n.upload,scope:a,handler:a.onLabUpload}]})]}],tbar:["->",{text:i18n.scan},"-",{text:i18n.upload,disabled:true,action:"uploadBtn",scope:a,handler:a.onLabUploadWind}]},{xtype:"container",region:"center",layout:"border",split:true,items:[{xtype:"form",title:i18n.laboratory_entry_form,region:"west",width:290,split:true,bodyPadding:5,autoScroll:true,bbar:["->",{text:i18n.reset,scope:a,handler:a.onLabResultsReset},"-",{text:i18n.sign,scope:a,handler:a.onLabResultsSign},"-",{text:i18n.save,scope:a,handler:a.onLabResultsSave}]},{xtype:"panel",region:"center",height:300,split:true,items:[{xtype:"lalboratoryresultsdataview",action:"lalboratoryresultsdataview",store:Ext.create("App.store.patient.PatientLabsResults"),listeners:{scope:a,itemclick:a.onLabResultClick}}]}]}]}];a.dockedItems=[{xtype:"toolbar",items:[{text:i18n.immunization,enableToggle:true,toggleGroup:"medicalWin",pressed:true,itemId:"immunization",action:"immunization",scope:a,handler:a.cardSwitch},"-",{text:i18n.allergies,enableToggle:true,toggleGroup:"medicalWin",itemId:"allergies",action:"allergies",scope:a,handler:a.cardSwitch},"-",{text:i18n.active_problems,enableToggle:true,toggleGroup:"medicalWin",itemId:"issues",action:"issues",scope:a,handler:a.cardSwitch},"-",{text:i18n.surgeries,enableToggle:true,toggleGroup:"medicalWin",itemId:"surgery",action:"surgery",scope:a,handler:a.cardSwitch},"-",{text:i18n.dental,enableToggle:true,toggleGroup:"medicalWin",itemId:"dental",action:"dental",scope:a,handler:a.cardSwitch},"-",{text:i18n.medications,enableToggle:true,toggleGroup:"medicalWin",itemId:"medications",action:"medications",scope:a,handler:a.cardSwitch},"-",{text:i18n.laboratories,enableToggle:true,toggleGroup:"medicalWin",itemId:"laboratories",action:"laboratories",scope:a,handler:a.cardSwitch},"->",{text:i18n.add_new,action:"AddRecord",scope:a,handler:a.onAddItem}]}];a.listeners={scope:a,show:a.onMedicalWinShow,close:a.onMedicalWinClose};a.callParent(arguments)},onLabPanelSelected:function(f,d){var g=this,b=g.query('[action="patientLabs"]')[0].down("form"),h=g.query('[action="lalboratoryresultsdataview"]')[0],c=h.store,a=d.data.fields;g.currLabPanelId=d.data.id;g.removeLabDocument();b.removeAll();b.add({xtype:"textfield",name:"id",hidden:true});for(var e=0;e<a.length;e++){b.add({xtype:"fieldcontainer",layout:"hbox",margin:0,anchor:"100%",fieldLabel:a[e].code_text_short||a[e].loinc_name,labelWidth:130,items:[{xtype:"textfield",name:a[e].loinc_number,flex:1,allowBlank:a[e].required_in_panel!="R"},{xtype:"mitos.unitscombo",value:a[e].default_unit,name:a[e].loinc_number+"_unit",width:90}]})}c.load({params:{parent_id:d.data.id}})},onLabPanelSelectionChange:function(b,a){this.query('[action="uploadBtn"]')[0].setDisabled(a.length==0)},onLabUploadWind:function(){var b=this,a=b.query('[action="labPreviewPanel"]')[0];b.uploadWin.show();b.uploadWin.alignTo(a.el.dom,"tr-tr",[-5,30])},onLabUpload:function(b){var d=this,a=d.uploadWin.down("form"),c=a.getForm(),e=b.up("window");if(c.isValid()){a.el.mask(i18n.uploading_laboratory+"...");c.submit({params:{pid:app.patient.pid,docType:"laboratory",eid:app.patient.eid},success:function(f,g){a.el.unmask();say(g.result);e.close();d.getLabDocument(g.result.doc.url);d.addNewLabResults(g.result.doc.id)},failure:function(f,g){a.el.unmask();say(g.result);e.close()}})}},onLabResultClick:function(a,b){var d=this,c=d.query('[action="patientLabs"]')[0].down("form").getForm();if(d.currDocUrl!=b.data.document_url){c.reset();b.data.data.id=b.data.id;c.setValues(b.data.data);d.getLabDocument(b.data.document_url);d.currDocUrl=b.data.document_url}},onLabResultsSign:function(){var e=this,d=e.query('[action="patientLabs"]')[0].down("form").getForm(),f=e.query('[action="lalboratoryresultsdataview"]')[0],c=f.store,b=d.getValues(),a=f.getSelectionModel().getLastSelected();if(d.isValid()){if(b.id){e.passwordVerificationWin(function(h,g){if(h=="ok"){User.verifyUserPass(g,function(j,i){if(i.result){say(a);Medical.signPatientLabsResultById(a.data.id,function(l,k){c.load({params:{parent_id:e.currLabPanelId}})})}else{Ext.Msg.show({title:"Oops!",msg:i18n.incorrect_password,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(k){if(k=="ok"){}}})}})}})}else{Ext.Msg.show({title:"Oops!",msg:i18n.nothing_to_sign,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(g){if(g=="ok"){}}})}}},onLabResultsSave:function(d){var f=this,e=d.up("form").getForm(),g=f.query('[action="lalboratoryresultsdataview"]')[0],c=g.store,b=e.getValues(),a=g.getSelectionModel().getLastSelected();if(e.isValid()){Medical.updatePatientLabsResult(b,function(){c.load({params:{parent_id:a.data.parent_id}});e.reset()})}},addNewLabResults:function(b){var c=this,e=c.query('[action="lalboratoryresultsdataview"]')[0],a=e.store,d={parent_id:c.currLabPanelId,document_id:b};Medical.addPatientLabsResult(d,function(g,f){a.load({params:{parent_id:c.currLabPanelId}})})},onReviewed:function(a){var c=this,b=a.itemId,d={eid:app.patient.eid,area:b};Medical.reviewMedicalWindowEncounter(d,function(f,e){c.msg("Sweet!",i18n.succefully_reviewed)})},onLabResultsReset:function(a){var b=a.up("form").getForm();b.reset()},getLabDocument:function(b){var a=this.query('[action="labPreviewPanel"]')[0];a.remove(this.doc);a.add(this.doc=Ext.create("App.classes.ManagedIframe",{src:b}))},removeLabDocument:function(b){var a=this.query('[action="labPreviewPanel"]')[0];a.remove(this.doc)},onLiveSearchSelect:function(d,a){var b=this,c,f,e;if(d.action=="immunizations"){e=a[0].data.id;c=d.up("container").query('[action="idField"]')[0];c.setValue(e)}else{if(d.id=="allergie_name"||d.id=="drug_name"){e=a[0].data.id;c=d.up("fieldcontainer").query('[action="idField"]')[0];c.setValue(e)}else{if(d.action=="medicalissues"){e=a[0].data.code;c=d.up("fieldcontainer").query('[action="idField"]')[0];f=d.up("fieldcontainer").query('[action="medicalissues"]')[0];c.setValue(e);f.setValue(a[0].data.code_text)}else{if(d.action=="surgery"){e=a[0].data.id;c=d.up("fieldcontainer").query('[action="idField"]')[0];c.setValue(e)}else{if(d.action=="medication"){e=a[0].data.id;c=d.up("fieldcontainer").query('[action="idField"]')[0];c.setValue(e)}}}}}},onAddItem:function(){var c=this,b=this.getLayout().getActiveItem(),a=b.store,d;b.editingPlugin.cancelEdit();a.insert(0,{created_uid:app.user.id,pid:app.patient.pid,create_date:new Date(),eid:app.patient.eid,begin_date:new Date()});b.editingPlugin.startEdit(0,0);if(app.patient.eid!=null){if(b.action=="patientImmuListGrid"){d={eid:app.patient.eid,area:"review_immunizations"}}else{if(b.action=="patientAllergiesListGrid"){d={eid:app.patient.eid,area:"review_allergies"}}else{if(b.action=="patientMedicalListGrid"){d={eid:app.patient.eid,area:"review_active_problems"}}else{if(b.action=="patientSurgeryListGrid"){d={eid:app.patient.eid,area:"review_surgery"}}else{if(b.action=="patientDentalListGrid"){d={eid:app.patient.eid,area:"review_dental"}}else{if(b.action=="patientMedicationsListGrid"){d={eid:app.patient.eid,area:"review_medications"}}}}}}}Medical.reviewMedicalWindowEncounter(d)}},hideall:function(e,d,b,a,c){d.hide(true);d.setDisabled(true);d.reset();b.hide(true);b.setDisabled(true);b.reset();a.hide(true);a.setDisabled(true);a.reset();c.hide(true);c.setDisabled(true);c.reset()},onLocationSelect:function(h,a){var f=this,e=h.up("form").getForm().findField("skinreaction"),c=h.up("form").getForm().findField("localreaction"),b=h.up("form").getForm().findField("abdominalreaction"),d=h.up("form").getForm().findField("systemicreaction"),g=h.getValue();f.hideall(h,e,c,b,d);if(g=="Skin"){e.show(true);e.setDisabled(false)}else{if(g=="Local"){c.show(true);c.setDisabled(false)}else{if(g=="Abdominal"){b.show(true);b.setDisabled(false)}else{if(g=="Systemic / Anaphylactic"){d.show(true);d.setDisabled(false)}}}}},disableFieldLogic:function(b,a){b.setDisabled((a==""||a==null))},onAllergyTypeSelect:function(d,a){var b=this,e=d.up("form").getForm().findField("allergie_name"),c=d.up("form").getForm().findField("drug_name");if(a[0].data.allergy_type=="Drug"){e.hide(true);e.setDisabled(true);e.reset();c.show(true);c.setDisabled(false)}else{if(a[0].data.allergy_type==""||a[0].data.allergy_type==null){e.setDisabled(true);c.hide(true);c.setDisabled(true);e.show(true)}else{c.hide(true);c.setDisabled(true);e.show(true);e.setDisabled(false);e.reset();e.store.load({params:{allergy_type:a[0].data.allergy_type}})}}},setDefaults:function(a){var b;if(a.update){b=a.update[0].data;b.updated_uid=app.user.id}else{if(a.create){}}},cardSwitch:function(a){var c=this,b=c.getLayout(),d=c.down("toolbar").query('[action="AddRecord"]')[0],e=app.patient,f;c.pid=e.pid;d.show();if(a.action=="immunization"){b.setActiveItem(0);f="Immunizations"}else{if(a.action=="allergies"){b.setActiveItem(1);f="Allergies"}else{if(a.action=="issues"){b.setActiveItem(2);f="Medical Issues"}else{if(a.action=="surgery"){b.setActiveItem(3);f="Surgeries"}else{if(a.action=="dental"){b.setActiveItem(4);f="Dentals"}else{if(a.action=="medications"){b.setActiveItem(5);f="Medications"}else{if(a.action=="laboratories"){b.setActiveItem(6);f="Laboratories";d.hide()}}}}}}}c.setTitle(e.name+" ("+f+") "+(e.readOnly?'-  <span style="color:red">[Read Mode]</span>':""))},onMedicalWinShow:function(){var b=this,c=b.query('button[action="review"]'),d=app.patient;b.pid=d.pid;b.setTitle(d.name+(d.readOnly?' <span style="color:red">['+i18n.read_mode+"]</span>":""));b.setReadOnly(app.patient.readOnly);for(var a=0;a<c.length;a++){c[a].setVisible((app.patient.eid!=null))}b.labPanelsStore.load();b.patientImmuListStore.load({params:{pid:app.patient.pid}});b.patientAllergiesListStore.load({params:{pid:app.patient.pid}});b.patientMedicalIssuesStore.load({params:{pid:app.patient.pid}});b.patientSurgeryStore.load({params:{pid:app.patient.pid}});b.patientDentalStore.load({params:{pid:app.patient.pid}});b.patientMedicationsStore.load({params:{pid:app.patient.pid}})},onMedicalWinClose:function(){if(app.currCardCmp.id=="panelSummary"){app.currCardCmp.loadStores()}}});Ext.define("App.view.patient.VisitCheckout",{extend:"App.classes.RenderPanel",id:"panelVisitCheckout",pageTitle:"Visit Checkout",uses:["App.classes.GridPanel"],initComponent:function(){var a=this;a.serviceStore=Ext.create("Ext.data.Store",{model:"App.model.patient.CptCodes"});a.pageBody=Ext.create("Ext.panel.Panel",{itemId:"visitpayment",defaults:{bodyStyle:"padding:15px",bodyBorder:true,labelWidth:110},items:[{xtype:"container",layout:{type:"hbox",align:"stretch"},height:400,items:[{xtype:"panel",title:i18n.copay_payment,border:true,frame:true,bodyPadding:10,bodyBorder:true,bodyStyle:"background-color:#fff",margin:5,flex:2,items:[{xtype:"container",itemId:"serviceContainer",layout:"anchor",items:[{xtype:"grid",frame:false,border:false,flex:1,maxHeight:220,store:a.serviceStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onRemoveService}]},{header:i18n.item,flex:1,dataIndex:"code_text",editor:{xtype:"livecptsearch",allowBlank:false}},{header:i18n.paid,xtype:"actioncolumn",dataIndex:"charge",width:35},{header:i18n.charge,width:95,dataIndex:"charge",editor:{xtype:"textfield",allowBlank:false},renderer:a.currencyRenderer}],plugins:[Ext.create("Ext.grid.plugin.CellEditing",{clicksToEdit:2})]}]},{xtype:"container",style:"float:right",width:208,defaults:{labelWidth:108,labelAlign:"right",action:"receipt",width:208,margin:"1 0"},items:[{fieldLabel:i18n.total,xtype:"mitos.currency",action:"totalField"},{fieldLabel:i18n.amount_due,xtype:"mitos.currency"},{fieldLabel:i18n.payment_amount,xtype:"mitos.currency"},{fieldLabel:i18n.balance,xtype:"mitos.currency"}]}],buttons:[{text:i18n.add_service,scope:a,handler:a.onNewService},"-",{text:i18n.add_copay,scope:a,handler:a.onAddCoPay},"->",{text:i18n.add_payment,scope:a,handler:a.onAddPaymentClick},{text:i18n.save,scope:a,handler:a.onSave}]},{xtype:"documentsimplegrid",title:i18n.documents,frame:true,margin:"5 5 5 0",flex:1}]},{xtype:"container",layout:"hbox",defaults:{height:195},items:[{xtype:"form",title:i18n.notes_and_reminders,frame:true,flex:2,action:"formnotes",bodyPadding:10,margin:"0 5 5 5",bodyBorder:true,bodyStyle:"background-color:#fff",defaults:{anchor:"100%"},items:[{xtype:"displayfield",fieldLabel:i18n.message,name:"message"},{xtype:"textfield",fieldLabel:i18n.note,name:"new_note",action:"notes"},{xtype:"textfield",grow:true,fieldLabel:i18n.reminders,name:"new_reminder",action:"notes"}],buttons:[{text:i18n.save,scope:a,handler:a.onSaveNotes},"-",{text:i18n.reset,scope:a,handler:a.resetNotes}]},{xtype:"form",title:i18n.followup_information,frame:true,flex:1,margin:"0 5 5 0",bodyPadding:10,bodyBorder:true,bodyStyle:"background-color:#fff",defaults:{labelWidth:110,anchor:"100%"},items:[{fieldLabel:i18n.time,xtype:"textfield",name:"followup_time"},{fieldLabel:i18n.facility,xtype:"mitos.activefacilitiescombo",name:"followup_facility"}],buttons:[{text:i18n.schedule_appointment,scope:a,handler:a.scheduleAppointment}]}]}]});a.callParent(arguments)},onNewService:function(c){var b=c.up("panel").down("grid"),a=b.store;say(b);say(a);a.add({code_text:" ",charge:"20.00"})},onAddCoPay:function(c){var b=c.up("panel").down("grid"),a=b.store;a.add({code_text:"Co-Pay",charge:"00.00"})},onAddService:function(){var a=this.query('[action="totalField"]')[0]},onRemoveService:function(d,g){var e=this,c=e.query('[action="totalField"]')[0],a=c.getValue(),f=d.getStore().getAt(g),b;e.serviceStore.remove(f);b=a-f.data.charge;c.setValue(b)},cancelPrint:function(a){var b=a.up("window");b.close()},resetReceiptForm:function(){var a=this.query('[action="receipt"]');for(var b=0;b<a.length;b++){a[b].reset()}},resetNotes:function(){var a=this.query('[action="notes"]');for(var b=0;b<a.length;b++){a[b].reset()}},onAddPaymentClick:function(){app.onPaymentEntryWindow()},currencyRenderer:function(a){return('<span style="float:right; padding-right:17px">$ '+a+"</span>")},onSaveNotes:function(){var d=this,c,b,a=d.query('form[action="formnotes"]');c=a[0].getForm();b=c.getFieldValues();b.date=Ext.Date.format(new Date(),"Y-m-d H:i:s");b.pid=app.patient.pid;b.eid=d.eid;b.uid=app.user.id;b.type="administrative";if(c.isValid()){Patient.addPatientNoteAndReminder(b,function(f,e){if(e.result.success){app.msg("Sweet!",i18n.note_and_reminder)}else{app.msg("Oops!",i18n.note_entry_error)}})}},scheduleAppointment:function(c){var d=c.up("form").getForm(),f=d.findField("followup_time").getValue(),b=d.findField("followup_facility").getValue(),e=Ext.getCmp("app-calendar"),a;switch(f){case"1 Day":a=Ext.Date.add(new Date(),Ext.Date.DAY,1);break;case"2 Days":a=Ext.Date.add(new Date(),Ext.Date.DAY,2);break;case"3 Days":a=Ext.Date.add(new Date(),Ext.Date.DAY,3);break;case"1 Week":a=Ext.Date.add(new Date(),Ext.Date.DAY,7);break;case"2 Weeks":a=Ext.Date.add(new Date(),Ext.Date.DAY,14);break;case"3 Weeks":a=Ext.Date.add(new Date(),Ext.Date.DAY,21);break;case"1 Month":a=Ext.Date.add(new Date(),Ext.Date.MONTH,1);break;case"2 Months":a=Ext.Date.add(new Date(),Ext.Date.MONTH,2);break;case"3 Months":a=Ext.Date.add(new Date(),Ext.Date.MONTH,3);break;case"4 Months":a=Ext.Date.add(new Date(),Ext.Date.MONTH,4);break;case"5 Months":a=Ext.Date.add(new Date(),Ext.Date.MONTH,5);break;case"6 Months":a=Ext.Date.add(new Date(),Ext.Date.MONTH,6);break;case"1 Year":a=Ext.Date.add(new Date(),Ext.Date.YEAR,1);break;case"2 Year":a=Ext.Date.add(new Date(),Ext.Date.YEAR,2);break;default:a=new Date();break}app.navigateTo("panelCalendar");e.facility=b;e.setStartDate(a)},getVisitOtherInfo:function(){var d=this,b,a=[];b=d.query("form");Encounter.getEncounterFollowUpInfoByEid(d.eid,function(f,e){b[1].getForm().setValues(e.result)});Encounter.getEncounterMessageByEid(d.eid,function(f,e){b[0].getForm().setValues(e.result)});for(var c=0;c<b.length;c++){a.push(b[c].getForm().getFields().items)}},setPanel:function(a){this.eid=a||null;this.query("documentsimplegrid")[0].loadDocs(a);this.getVisitOtherInfo()},onActive:function(c){var b=this;if(b.checkIfCurrPatient()){var a=b.getCurrPatient();b.updateTitle(a.name+" - #"+a.pid+" ("+i18n.visit_checkout+")");c(true)}else{c(false);b.currPatientError()}}});Ext.define("App.view.fees.Billing",{extend:"App.classes.RenderPanel",id:"panelBilling",pageTitle:i18n.billing,uses:["App.classes.GridPanel"],pageLayout:"card",initComponent:function(){var a=this;a.paymentstatus=1;a.patient=null;a.pastDue=null;a.dateRange={start:null,limit:null};a.patientListStore=Ext.create("App.store.fees.Billing");a.encountersGrid=Ext.create("Ext.grid.Panel",{store:a.patientListStore,selModel:Ext.create("Ext.selection.CheckboxModel",{listeners:{scope:a,selectionchange:a.onSelectionChanged}}),viewConfig:{stripeRows:true},columns:[{header:i18n.service_date,dataIndex:"start_date",width:200},{header:i18n.patient,dataIndex:"patientName",width:200},{header:i18n.primary_provider,dataIndex:"primaryProvider",width:200},{header:i18n.encounter_provider,dataIndex:"encounterProvider",flex:1},{header:i18n.insurance,dataIndex:"insurance",width:200},{header:i18n.billing_stage,dataIndex:"billing_stage",renderer:a.stage,width:135}],tbar:[{xtype:"fieldcontainer",items:[{xtype:"displayfield",fieldLabel:i18n.patient_search},{xtype:"patienlivetsearch",width:235,margin:"0 5 0 0"}]},{xtype:"fieldcontainer",items:[{xtype:"datefield",fieldLabel:i18n.from,labelWidth:35,action:"datefrom",width:150},{xtype:"datefield",fieldLabel:i18n.to,labelWidth:35,action:"dateto",padding:"0 5 0 0",width:150}]},{xtype:"fieldcontainer",items:[{xtype:"mitos.providerscombo",labelWidth:60,typeAhead:true,padding:"0 5 0 5",fieldLabel:i18n.provider,defaultValue:"All"},{xtype:"mitos.insurancepayertypecombo",labelWidth:60,padding:"0 5 0 5",fieldLabel:i18n.insurance,defaultValue:"All"}]},"->",{xtype:"tbtext",text:i18n.past_due+":"},{text:"30+",enableToggle:true,action:30,toggleGroup:"pastduedates",enableKeyEvents:true,scale:"large",listeners:{scope:a,click:a.onBtnClicked}},{text:"60+",enableToggle:true,action:60,scale:"large",toggleGroup:"pastduedates",listeners:{scope:a,click:a.onBtnClicked}},{text:"120+",enableToggle:true,action:120,scale:"large",toggleGroup:"pastduedates",listeners:{scope:a,click:a.onBtnClicked}},{text:"180+",enableToggle:true,action:180,scale:"large",toggleGroup:"pastduedates",listeners:{scope:a,click:a.onBtnClicked}}],listeners:{scope:a,itemdblclick:a.rowDblClicked}});a.encounterBillingDetails=Ext.create("Ext.panel.Panel",{defaultTitle:i18n.encounter_billing_details,title:i18n.encounter_billing_details,layout:"border",bodyStyle:"background-color:#fff",items:[Ext.create("Ext.container.Container",{region:"center",layout:"border",style:"background-color:#fff",items:[a.icdForm=Ext.create("Ext.form.Panel",{region:"north",border:false,items:[{xtype:"fieldset",title:i18n.encounter_general_info,margin:"5 5 0 5",items:[{xtype:"fieldcontainer",layout:{type:"hbox"},defaults:{margin:"0 10"},hideLabel:true,items:[{xtype:"textfield",name:"service_date",fieldLabel:i18n.service_date,labelAlign:"right",labelWidth:80},{xtype:"textfield",name:"insurance",fieldLabel:i18n.insurance,labelAlign:"right"},{xtype:"textfield",name:"facility",fieldLabel:i18n.facillity,labelAlign:"right",labelWidth:60,flex:1}]},{xtype:"fieldcontainer",layout:{type:"hbox"},defaults:{margin:"0 10"},hideLabel:true,items:[{xtype:"textfield",name:"hosp_date",fieldLabel:i18n.hosp_date,labelAlign:"right",labelWidth:80},{xtype:"textfield",name:"sec_insurance",fieldLabel:i18n.sec_insurance,labelAlign:"right"},{xtype:"textfield",name:"provider",fieldLabel:i18n.provider,labelAlign:"right",labelWidth:60,flex:1}]},{xtype:"fieldcontainer",layout:{type:"hbox"},defaults:{margin:"0 10"},hideLabel:true,items:[{xtype:"textfield",name:"authorization",fieldLabel:i18n.authorization,labelAlign:"right",labelWidth:80},{xtype:"textfield",name:"sec_authorization",fieldLabel:i18n.sec_authorization,labelAlign:"right"},{xtype:"textfield",name:"referal_by",fieldLabel:i18n.referal_by,labelAlign:"right",labelWidth:60,flex:1}]}]},{xtype:"icdsfieldset",title:i18n.encounter_icd9,margin:"5 5 0 5"}]}),a.cptPanel=Ext.create("App.view.patient.encounter.CurrentProceduralTerminology",{region:"center"})]}),a.progressNote=Ext.create("App.view.patient.ProgressNote",{title:i18n.encounter_progress_note,region:"east",margin:5,bodyStyle:"padding:15px",width:500,autoScroll:true,collapsible:true,animCollapse:true,collapsed:false})],buttons:[{text:i18n.encounters,scope:a,action:"encounters",tooltip:i18n.back_to_encounter_list,handler:a.onBtnCancel},"->",{xtype:"tbtext",action:"page",text:"( 1 of 1 )"},{text:"<<<  "+i18n.back,scope:a,action:"back",tooltip:i18n.previous_encounter_details,handler:a.onBtnBack},{text:i18n.save,scope:a,action:"save",tooltip:i18n.save_billing_details,handler:a.onBtnSave},{text:i18n.cancel,scope:a,action:"cancel",tooltip:i18n.cancel_and_go_back_to_encounter_list,handler:a.onBtnCancel},{text:i18n.next+"  >>>",scope:a,action:"next",tooltip:i18n.next_encounter_details,handler:a.onBtnNext}]});a.pageBody=[a.encountersGrid,a.encounterBillingDetails];a.callParent(arguments)},stage:function(a){if(a=="1"){return'<img src="resources/images/icons/stage1.png" />'}else{if(a=="2"){return'<img src="resources/images/icons/stage2.png" />'}else{if(a=="3"){return'<img src="resources/images/icons/stage3.png" />'}else{if(a=="4"){return'<img src="resources/images/icons/stage4.png" />'}}}}return a},onBtnClicked:function(b){var a=this.query('datefield[action="datefrom"]'),c=this.query('datefield[action="dateto"]');if(b.pressed){a[0].reset();c[0].reset();this.pastDue=b.action}else{this.pastDue=0}this.reloadGrid()},rowDblClicked:function(){this.goToEncounterBillingDetail()},goToEncounterBillingDetail:function(){this.getPageBody().getLayout().setActiveItem(1)},goToEncounterList:function(){this.getPageBody().getLayout().setActiveItem(0)},onSelectionChanged:function(h,b){if(b[0]){var d=this,f=d.encounterBillingDetails.defaultTitle,e=d.encounterBillingDetails.query('button[action="back"]'),a=d.encounterBillingDetails.query('button[action="next"]'),c=d.encounterBillingDetails.query('tbtext[action="page"]'),g=b[0].index;d.pid=b[0].data.pid;d.eid=b[0].data.eid;d.updateProgressNote(d.eid);d.encounterBillingDetails.setTitle(f+" ( "+b[0].data.patientName+" )");d.getEncounterIcds();d.cptPanel.encounterCptStoreLoad(d.pid,d.eid,function(){d.cptPanel.setDefaultQRCptCodes()});c[0].setText("( "+i18n.page+" (rowIndex + 1) of "+h.store.data.length+" )");a[0].setDisabled(g==h.store.data.length-1);e[0].setDisabled(g==0)}},onBtnCancel:function(){this.getPageBody().getLayout().setActiveItem(0)},onBtnBack:function(){var c=this.encountersGrid.getSelectionModel(),a=c.getLastSelected().index,b=a-1;c.select(b)},onBtnNext:function(){var c=this.encountersGrid.getSelectionModel(),a=c.getLastSelected().index,b=a+1;c.select(b)},onBtnSave:function(){var c=this,b=c.icdForm.getForm(),a=b.getValues();c.updateEncounterIcds(a);c.msg("Sweet!",i18n.encounter_billing_data_updated)},getEncounterIcds:function(){var a=this;Encounter.getEncounterIcdxCodes({eid:a.eid},function(c,b){a.icdForm.down("icdsfieldset").loadIcds(b.result)})},updateEncounterIcds:function(b){var a=this;b.eid=a.eid;Encounter.updateEncounterIcdxCodes(b,function(d,c){say(c.result);return true})},reloadGrid:function(){this.patientListStore.load({params:{query:{patient:this.patient,pastDue:this.pastDue,dateRange:this.dateRange}}})},updateProgressNote:function(a){var b=this;Encounter.getProgressNoteByEid(a,function(e,c){var d=c.result;b.progressNote.tpl.overwrite(b.progressNote.body,d)})},onActive:function(a){this.reloadGrid();a(true)}});Ext.define("App.view.fees.PaymentEntryWindow",{extend:"Ext.window.Window",title:i18n.add_new_payment,closeAction:"hide",modal:true,initComponent:function(){var a=this;a.items=[{xtype:"form",defaults:{margin:5},border:false,height:163,width:747,items:[{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.paying_entity,xtype:"mitos.payingentitycombo",name:"paying_entity",action:"new_payment",labelWidth:98,width:220},{xtype:"patienlivetsearch",fieldLabel:i18n.from,hideLabel:false,name:"payer_id",action:"new_payment",anchor:null,labelWidth:42,width:300,margin:"0 0 0 25"},{xtype:"textfield",fieldLabel:i18n.no,action:"new_payment",name:"check_number",labelWidth:47,width:167,margin:"0 0 0 25"}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.payment_method,xtype:"mitos.paymentmethodcombo",action:"new_payment",labelWidth:98,name:"payment_method",width:220},{xtype:"mitos.billingfacilitiescombo",fieldLabel:i18n.pay_to,action:"new_payment",labelWidth:42,name:"pay_to",width:300,margin:"0 0 0 25"},{xtype:"mitos.currency",fieldLabel:i18n.amount,action:"new_payment",name:"amount",labelWidth:47,width:167,margin:"0 0 0 25",enableKeyEvents:true}]},{fieldLabel:i18n.post_to_date,xtype:"datefield",name:"post_to_date",action:"new_payment",format:"Y-m-d",labelWidth:98,width:220},{fieldLabel:i18n.note,xtype:"textareafield",grow:true,action:"new_payment",name:"note",labelWidth:98,anchor:"100%"}]}];a.buttons=[{text:i18n.save,scope:a,handler:a.onSave},"-",{text:i18n.reset,scope:a,handler:a.resetNewPayment}];a.callParent(arguments)},onSave:function(){var d=this,a,c,b;a=d.down("form");c=a.getForm();b=c.getFieldValues();b.date_created=Ext.Date.format(new Date(),"Y-m-d H:i:s");if(c.isValid()){Fees.addPayment(b,function(f,e){if(e.result.success){c.reset();d.hide()}else{app.msg("Oops!",i18n.payment_entry_error)}})}},resetNewPayment:function(){var a=this.query('[action="new_payment"]');for(var b=0;b<a.length;b++){a[b].reset()}}});Ext.define("App.view.fees.Payments",{extend:"App.classes.RenderPanel",id:"panelPayments",pageTitle:i18n.payments,initComponent:function(){var a=this;a.encountersPaymentsStore=Ext.create("App.store.fees.EncountersPayments");a.searchPanel=Ext.create("Ext.panel.Panel",{title:i18n.search,layout:"border",items:[{xtype:"form",height:145,region:"north",bodyPadding:10,bodyStyle:"background-color:transparent",margin:"0 0 5 0",items:[{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.paying_entity,xtype:"mitos.payingentitycombo",labelWidth:95,width:230},{xtype:"patienlivetsearch",fieldLabel:i18n.from,hideLabel:false,itemId:"patientFrom",name:"from",anchor:null,labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"textfield",fieldLabel:i18n.no,name:"transaction_number",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",fieldStyle:"text-align: right;"}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.payment_method,xtype:"mitos.paymentmethodcombo",labelWidth:95,width:230},{xtype:"mitos.billingfacilitiescombo",fieldLabel:i18n.pay_to,labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"mitos.currency",fieldLabel:i18n.amount,name:"amount",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",enableKeyEvents:true}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.from,xtype:"datefield",labelWidth:95,width:230},{fieldLabel:i18n.to,xtype:"datefield",margin:"0 0 0 25",labelWidth:42,width:230}]}],buttons:[{text:i18n.search},"-",{text:i18n.reset},"->",{text:i18n.add_payment,scope:a,handler:a.onAddPaymentClick}]},{xtype:"grid",region:"center",store:a.encountersPaymentsStore,columns:[{header:i18n.service_date},{header:i18n.patient_name},{header:i18n.insurance},{header:i18n.billing_notes,flex:1},{header:i18n.balance_due}]}]});a.detailPanel=Ext.create("Ext.panel.Panel",{title:i18n.detail,layout:"border",items:[{xtype:"form",height:145,region:"north",bodyPadding:10,bodyStyle:"background-color:transparent",margin:"0 0 5 0",items:[{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.paying_entity,xtype:"mitos.payingentitycombo",labelWidth:95,width:230},{xtype:"patienlivetsearch",fieldLabel:i18n.from,hideLabel:false,itemId:"patientFrom",name:"from",anchor:null,labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"textfield",fieldLabel:i18n.no,name:"transaction_number",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",fieldStyle:"text-align: right;"}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.payment_method,xtype:"mitos.paymentmethodcombo",labelWidth:95,width:230},{xtype:"mitos.billingfacilitiescombo",fieldLabel:i18n.pay_to,labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"mitos.currency",fieldLabel:i18n.amount,name:"amount",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",enableKeyEvents:true}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:i18n.from,xtype:"datefield",labelWidth:95,width:230},{fieldLabel:i18n.to,xtype:"datefield",margin:"0 0 0 25",labelWidth:42,width:230}]}],buttons:[{text:i18n.save},"-",{text:i18n.reset},"->",{text:i18n.add_payment,scope:a,handler:a.onAddPaymentClick}]},{xtype:"grid",region:"center",plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,enableRemove:true,listeners:{scope:a,beforeedit:a.beforeCptEdit}}),columns:[{header:i18n.service_date},{header:i18n.patient_name},{header:i18n.insurance},{header:i18n.billing_notes,flex:1},{header:i18n.balance_due}]}]});a.tapPanel=Ext.create("Ext.tab.Panel",{layout:"fit",items:[a.searchPanel,a.detailPanel]});a.pageBody=[a.tapPanel];a.callParent(arguments)},onAddPaymentClick:function(){app.onPaymentEntryWindow()},beforeCptEdit:function(a,b){this.addCptFields(a.editor,b.record.data)},addCptFields:function(c,d){c.removeAll();var b=this.testData();for(var a=0;a<b.length;a++){c.add({xtype:"fieldcontainer",layout:"hbox",items:[{xtype:"textfield",width:100,name:"code",readOnly:true,margin:"0 5 0 10"},{xtype:"textfield",name:"copay",readOnly:true,width:400,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"remaining",readOnly:true,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"allowed",readOnly:true,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"payment",readOnly:true,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"deductible",readOnly:true,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"takeback",readOnly:true,width:100,margin:"0 5 0 5"},{xtype:"checkbox",name:"takeback",readOnly:true,width:50,margin:"0 5 0 5"},{xtype:"textfield",name:"takeback",readOnly:true,width:100,margin:"0 5 0 5"}]})}},testData:function(){var b=[],a;floor=Math.floor((Math.random()*6)+1);for(a=0;a<floor;a++){b.push({data1:Math.floor(Math.max((Math.random()*100),floor)),data2:Math.floor(Math.max((Math.random()*100),floor)),data3:Math.floor(Math.max((Math.random()*100),floor)),data4:Math.floor(Math.max((Math.random()*100),floor)),data5:Math.floor(Math.max((Math.random()*100),floor)),data6:Math.floor(Math.max((Math.random()*100),floor)),data7:Math.floor(Math.max((Math.random()*100),floor)),data8:Math.floor(Math.max((Math.random()*100),floor)),data9:Math.floor(Math.max((Math.random()*100),floor))})}return b},onBtnClick:function(a){var b=this;if(a.action=="search"){b.forms.getLayout().setActiveItem(0)}else{if(a.action=="details"){b.forms.getLayout().setActiveItem(1)}else{if(a.action=="new"){b.window.show()}}}},onActive:function(a){this.encountersPaymentsStore.load();a(true)}});Ext.define("App.view.administration.DataManager",{extend:"App.classes.RenderPanel",id:"panelDataManager",pageTitle:"Data Manager",uses:["App.classes.GridPanel","App.classes.combo.CodesTypes","App.classes.combo.Titles"],initComponent:function(){var b=this;b.active=1;b.dataQuery="";b.code_type="CPT4";b.store=Ext.create("App.store.administration.Services");b.activeProblemsStore=Ext.create("App.store.administration.ActiveProblems");b.medicationsStore=Ext.create("App.store.administration.Medications");b.ImmuRelationStore=Ext.create("App.store.administration.ImmunizationRelations");b.labObservationsStore=Ext.create("App.store.administration.LabObservations");function a(c){if(c=="1"){return"CPT4"}else{if(c=="3"){return"HCPCS"}else{if(c=="100"){return"CVX"}}}return c}b.cptContainer=Ext.create("Ext.container.Container",{layout:"column",action:"CPT4",items:[{xtype:"fieldcontainer",msgTarget:"under",defaults:{action:"field"},items:[{fieldLabel:"Type",xtype:"mitos.codestypescombo",name:"code_type"},{fieldLabel:"Code",xtype:"textfield",name:"code"}]},{xtype:"fieldcontainer",margin:"0 0 0 10",defaults:{action:"field"},items:[{fieldLabel:i18n.description,xtype:"textfield",name:"code_text",width:500}]},{xtype:"fieldcontainer",margin:"0 0 0 20",defaults:{action:"field"},items:[{boxLabel:i18n.reportable,xtype:"checkboxfield",name:"reportable"},{boxLabel:i18n.active,labelWidth:75,xtype:"checkboxfield",name:"active"}]}]});b.hpccsContainer=Ext.create("Ext.container.Container",{layout:"column",action:"HCPCS",items:[{xtype:"fieldcontainer",msgTarget:"under",defaults:{action:"field"},items:[{fieldLabel:i18n.type,xtype:"mitos.codestypescombo",name:"code_type"},{fieldLabel:i18n.code,xtype:"textfield",name:"code"},{fieldLabel:i18n.modifier,xtype:"textfield",name:"mod"}]},{xtype:"fieldcontainer",margin:"0 0 0 10",defaults:{action:"field"},items:[{fieldLabel:i18n.description,xtype:"textfield",name:"code_text"},{fieldLabel:i18n.category,xtype:"mitos.titlescombo",name:"title"}]},{xtype:"fieldcontainer",margin:"0 0 0 20",defaults:{action:"field"},items:[{boxLabel:i18n.reportable,xtype:"checkboxfield",name:"reportable"},{boxLabel:i18n.active,labelWidth:75,xtype:"checkboxfield",name:"active"}]}]});b.cvxCintainer=Ext.create("Ext.tab.Panel",{action:i18n.immunizations,layout:"fit",plain:true,listeners:{scope:b,tabchange:b.onFormTapChange},items:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:i18n.immunization_name,name:"code_text",labelWidth:130,width:703},{xtype:"mitos.sexcombo",fieldLabel:i18n.sex,name:"sex",width:100,labelWidth:30}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"mitos.codestypescombo",fieldLabel:i18n.coding_system,labelWidth:130,value:"CVX",name:"code_type",readOnly:true},{xtype:"numberfield",fieldLabel:i18n.frequency,margin:"0 0 5 0",value:0,minValue:0,width:150,name:"frequency_number"},{xtype:"mitos.timecombo",name:"frequency_time",width:100},{xtype:"numberfield",fieldLabel:i18n.age_start,name:"age_start",labelWidth:75,width:140,value:0,minValue:0},{fieldLabel:i18n.must_be_pregnant,xtype:"checkboxfield",labelWidth:105,name:"pregnant"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:i18n.code,name:"code",labelWidth:130},{xtype:"numberfield",fieldLabel:i18n.times_to_perform,name:"times_to_perform",width:250,value:0,minValue:0,tooltip:i18n.greater_than_1_or_just_check_perform_once},{xtype:"numberfield",fieldLabel:i18n.age_end,name:"age_end",labelWidth:75,width:140,value:0,minValue:0},{fieldLabel:i18n.perform_only_once,xtype:"checkboxfield",labelWidth:105,name:"only_once"}]}]},{title:i18n.active_problems,action:"problems",xtype:"grid",margin:5,store:b.ImmuRelationStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:b,handler:b.onRemoveRelation}]},{header:i18n.code,width:100,dataIndex:"code"},{header:i18n.description,flex:1,dataIndex:"code_text"}],bbar:{xtype:"liveicdxsearch",margin:5,fieldLabel:i18n.add_problem,hideLabel:false,disable:true,listeners:{scope:b,select:b.addActiveProblem}}},{title:i18n.medications,action:"medications",xtype:"grid",width:300,store:b.ImmuRelationStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:b,handler:b.onRemoveRelation}]},{header:i18n.code,width:100,dataIndex:"code"},{header:i18n.description,flex:1,dataIndex:"code_text"}],bbar:{xtype:"medicationlivetsearch",margin:5,fieldLabel:i18n.add_problem,hideLabel:false,disable:true,listeners:{scope:b,select:b.addMedications}}},{title:i18n.labs,action:"labs",xtype:"grid",store:b.ImmuRelationStore,width:300,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:b,handler:b.onRemoveRelation}]},{header:i18n.value_name,flex:1,dataIndex:"value_name"},{header:i18n.less_than,flex:1,dataIndex:"less_than"},{header:i18n.greater_than,flex:1,dataIndex:"greater_than"},{header:i18n.equal_to,flex:1,dataIndex:"equal_to"}]}]});b.labContainer=Ext.create("Ext.container.Container",{action:i18n.laboratories,layout:{type:"vbox",align:"stretch"},items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:i18n.short_name_alias,name:"code_text_short",labelWidth:130,width:500},{xtype:"mitos.checkbox",fieldLabel:i18n.active,name:"active",anchor:"100%",labelWidth:50}]},{xtype:"grid",frame:true,store:b.labObservationsStore,plugins:Ext.create("Ext.grid.plugin.CellEditing",{clicksToEdit:2}),columns:[{header:i18n.label_alias,dataIndex:"code_text_short",width:100,editor:{xtype:"textfield"}},{header:i18n.loinc_name,dataIndex:"loinc_name",width:200},{header:i18n.loinc_number,dataIndex:"loinc_number",width:100},{header:i18n.default_unit,dataIndex:"default_unit",width:100,editor:{xtype:"mitos.unitscombo"}},{header:i18n.req_opt,dataIndex:"required_in_panel",width:75},{header:i18n.range_start,dataIndex:"range_start",width:100,editor:{xtype:"numberfield"}},{header:i18n.range_end,dataIndex:"range_end",width:100,editor:{xtype:"numberfield"}},{header:i18n.description,dataIndex:"description",flex:1,editor:{xtype:"textfield"}}]}]});b.dataManagerGrid=Ext.create("App.classes.GridPanel",{region:"center",store:b.store,viewConfig:{loadMask:true},columns:[{width:100,header:i18n.code_type,sortable:true,dataIndex:"code_type",renderer:a},{width:100,header:i18n.code,sortable:true,dataIndex:"code"},{header:i18n.short_name,dataIndex:"code_text_short",width:100,flex:1},{header:i18n.long_name,sortable:true,dataIndex:"code_text",flex:2},{width:60,header:i18n.active,sortable:true,dataIndex:"active",renderer:b.boolRenderer}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,listeners:{scope:b,beforeedit:b.beforeServiceEdit}}),tbar:Ext.create("Ext.PagingToolbar",{store:b.store,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{xtype:"mitos.codestypescombo",width:150,listeners:{scope:b,select:b.onCodeTypeSelect}},"-",{text:i18n.add,iconCls:"icoAddRecord",scope:b,handler:b.onAddData},"-",{xtype:"textfield",emptyText:i18n.search,width:200,enableKeyEvents:true,listeners:{scope:b,keyup:b.onSearch,buffer:500}},"-",{xtype:"button",text:i18n.show_inactive_codes_only,enableToggle:true,listeners:{scope:b,toggle:b.onActivePressed}}]})});b.pageBody=[b.dataManagerGrid];b.callParent()},onAddData:function(){var a=this;if(a.code_type=="Laboratories"){Ext.Msg.alert("Opps!",i18n.ops_laboratories)}else{a.dataManagerGrid.plugins[0].cancelEdit();a.store.add({code_type:a.code_type});a.dataManagerGrid.plugins[0].startEdit(0,0)}},beforeServiceEdit:function(d,j){var h=this,f=d.editor,a=j.record.data.code_type,g,c;if(a=="CPT4"){c=h.cptContainer}else{if(a=="HCPCS"){c=h.hpccsContainer}else{if(a=="Immunizations"){c=h.cvxCintainer}else{if(a=="Laboratories"){c=h.labContainer}}}}if(!f.items.length){f.add(c);f.setFields()}else{if(this.currForm!=c){f.remove(0,false);f.add(c);f.setFields()}}g=c.query("grid");for(var b=0;b<g.length;b++){g[b].getStore().load({params:{selectedId:h.getSelectId()}})}this.currForm=c},onSearch:function(c){var b=this,a=b.store;b.dataQuery=c.getValue();a.proxy.extraParams={active:b.active,code_type:b.code_type,query:b.dataQuery};b.store.load()},onCodeTypeSelect:function(d,a){var c=this,b=c.store;c.code_type=a[0].data.option_value;b.proxy.extraParams={active:c.active,code_type:c.code_type,query:c.dataQuery};c.store.load()},onObservationSelect:function(b,a){say(a[0].data);this.labObservationsStore.add({lab_id:this.getSelectId(),observation_element_id:a[0].data.id});b.reset()},onActivePressed:function(b,d){var c=this,a=c.store;c.active=d?0:1;a.proxy.extraParams={active:c.active,code_type:c.code_type,query:c.dataQuery};c.store.load()},onFormTapChange:function(b,a,c){this.ImmuRelationStore.proxy.extraParams={code_type:a.action,selectedId:this.getSelectId()};this.ImmuRelationStore.load()},addActiveProblem:function(b,a){this.ImmuRelationStore.add({code:a[0].data.code,code_text:a[0].data.code_text,code_type:"problems",foreign_id:a[0].data.id,immunization_id:this.getSelectId()});b.reset()},addMedications:function(b,a){this.ImmuRelationStore.add({code:a[0].data.PRODUCTNDC,code_text:a[0].data.PROPRIETARYNAME,code_type:"medications",foreign_id:a[0].data.id,immunization_id:this.getSelectId()});b.reset()},addLabObservation:function(){this.labObservationsStore.add({lab_id:this.getSelectId(),label:"",name:"",range_start:"-99999",range_end:"99999"})},onRemoveRelation:function(c,e){var d=this,b=c.getStore(),a=b.getAt(e);b.remove(a)},getSelectId:function(){var a=this.dataManagerGrid.getSelectionModel().getLastSelected();return a.data.id},onActive:function(a){this.dataManagerGrid.query("combobox")[0].setValue("CPT4");this.store.proxy.extraParams={active:this.active,code_type:this.code_type,query:this.dataQuery};this.store.load();a(true)}});Ext.define("App.view.administration.Documents",{extend:"App.classes.RenderPanel",id:"panelDocuments",pageTitle:i18n.document_template_editor,pageLayout:"border",uses:["App.classes.GridPanel"],initComponent:function(){var a=this;a.templatesDocumentsStore=Ext.create("App.store.administration.DocumentsTemplates");a.defaultsDocumentsStore=Ext.create("App.store.administration.DefaultDocuments");Ext.define("tokenModel",{extend:"Ext.data.Model",fields:[{name:"title",type:"string"},{name:"token",type:"string"}]});a.tokenStore=Ext.create("Ext.data.Store",{model:"tokenModel",data:[{title:i18n.patient_name,token:"[PATIENT_NAME]"},{title:i18n.patient_full_name,token:"[PATIENT_FULL_NAME]"},{title:i18n.patient_mothers_maiden_name,token:"[PATIENT_MAIDEN_NAME]"},{title:i18n.patient_last_name,token:"[PATIENT_LAST_NAME]"},{title:i18n.patient_birthdate,token:"[PATIENT_BIRTHDATE]"},{title:i18n.patient_marital_status,token:"[PATIENT_MARITAL_STATUS]"},{title:i18n.patient_home_phone,token:"[PATIENT_HOME_PHONE]"},{title:i18n.patient_mobile_phone,token:"[PATIENT_MOBILE_PHONE]"},{title:i18n.patient_work_phone,token:"[PATIENT_WORK_PHONE]"},{title:i18n.patient_email,token:"[PATIENT_EMAIL]"},{title:i18n.patient_social_security,token:"[PATIENT_SOCIAL_SECURITY]"},{title:i18n.patient_sex,token:"[PATIENT_SEX]"},{title:i18n.patient_age,token:"[PATIENT_AGE]"},{title:i18n.patient_city,token:"[PATIENT_CITY]"},{title:i18n.patient_state,token:"[PATIENT_STATE]"},{title:i18n.patient_home_address_line_1,token:"[PATIENT_HOME_ADDRESS_LINE_ONE]"},{title:i18n.patient_home_address_line_1,token:"[PATIENT_HOME_ADDRESS_LINE_TWO]"},{title:i18n.patient_home_address_zip_code,token:"[PATIENT_HOME_ADDRESS_ZIP_CODE]"},{title:i18n.patient_home_address_city,token:"[PATIENT_HOME_ADDRESS_CITY]"},{title:i18n.patient_home_address_state,token:"[PATIENT_HOME_ADDRESS_STATE]"},{title:i18n.patient_postal_address_line_1,token:"[PATIENT_POSTAL_ADDRESS_LINE_ONE]"},{title:i18n.patient_postal_address_line_2,token:"[PATIENT_POSTAL_ADDRESS_LINE_TWO]"},{title:i18n.patient_postal_address_zip_code,token:"[PATIENT_POSTAL_ADDRESS_ZIP_CODE]"},{title:i18n.patient_postal_address_city,token:"[PATIENT_POSTAL_ADDRESS_CITY]"},{title:i18n.patient_postal_address_state,token:"[PATIENT_POSTAL_ADDRESS_STATE]"},{title:i18n.patient_tabacco,token:"[PATIENT_TABACCO]"},{title:i18n.patient_alcohol,token:"[PATIENT_ALCOHOL]"},{title:i18n.patient_drivers_license,token:"[PATIENT_DRIVERS_LICENSE]"},{title:i18n.patient_employeer,token:"[PATIENT_EMPLOYEER]"},{title:i18n.patient_first_emergency_contact,token:"[PATIENT_FIRST_EMERGENCY_CONTACT]"},{title:i18n.patient_referral,token:"[PATIENT_REFERRAL]"},{title:i18n.patient_date_referred,token:"[PATIENT_REFERRAL_DATE]"},{title:i18n.patient_balance,token:"[PATIENT_BALANCE]"},{title:i18n.patient_picture,token:"[PATIENT_PICTURE]"},{title:i18n.patient_primary_plan,token:"[PATIENT_PRIMARY_PLAN]"},{title:i18n.patient_primary_plan_insured_person,token:"[PATIENT_PRIMARY_INSURED_PERSON]"},{title:i18n.patient_primary_plan_contract_number,token:"[PATIENT_PRIMARY_CONTRACT_NUMBER]"},{title:i18n.patient_primary_plan_expiration_date,token:"[PATIENT_PRIMARY_EXPIRATION_DATE]"},{title:i18n.patient_secondary_plan,token:"[PATIENT_SECONDARY_PLAN]"},{title:i18n.patient_secondary_insured_person,token:"[PATIENT_SECONDARY_INSURED_PERSON]"},{title:i18n.patient_secondary_plan_contract_number,token:"[PATIENT_SECONDARY_CONTRACT_NUMBER]"},{title:i18n.patient_secondary_plan_expiration_date,token:"[PATIENT_SECONDARY_EXPIRATION_DATE]"},{title:i18n.patient_referral_details,token:"[PATIENT_REFERRAL_DETAILS]"},{title:i18n.patient_referral_reason,token:"[PATIENT_REFERRAL_REASON]"},{title:i18n.patient_head_circumference,token:"[PATIENT_HEAD_CIRCUMFERENCE]"},{title:i18n.patient_height,token:"[PATIENT_HEIGHT]"},{title:i18n.patient_pulse,token:"[PATIENT_PULSE]"},{title:i18n.patient_respiratory_rate,token:"[PATIENT_RESPIRATORY_RATE]"},{title:i18n.patient_temperature,token:"[PATIENT_TEMPERATURE]"},{title:i18n.patient_weight,token:"[PATIENT_WEIGHT]"},{title:i18n.patient_pulse_oximeter,token:"[PATIENT_PULSE_OXIMETER]"},{title:i18n.patient_blood_preasure,token:"[PATIENT_BLOOD_PREASURE]"},{title:i18n.patient_body_mass_index,token:"[PATIENT_BMI]"},{title:i18n.patient_active_allergies_list,token:"[PATIENT_ACTIVE_ALLERGIES_LIST]"},{title:i18n.patient_inactive_allergies_list,token:"[PATIENT_INACTIVE_ALLERGIES_LIST]"},{title:i18n.patient_active_medications_list,token:"[PATIENT_ACTIVE_MEDICATIONS_LIST]"},{title:i18n.patient_inactive_medications_list,token:"[PATIENT_INACTIVE_MEDICATIONS_LIST]"},{title:i18n.patient_active_problems_list,token:"[PATIENT_ACTIVE_PROBLEMS_LIST]"},{title:i18n.patient_inactive_problems_list,token:"[PATIENT_INACTIVE_PROBLEMS_LIST]"},{title:i18n.patient_active_immunizations_list,token:"[PATIENT_ACTIVE_IMMUNIZATIONS_LIST]"},{title:i18n.patient_inactive_immunizations_list,token:"[PATIENT_INACTIVE_IMMUNIZATIONS_LIST]"},{title:i18n.patient_active_dental_list,token:"[PATIENT_ACTIVE_DENTAL_LIST]"},{title:i18n.patient_inactive_dental_list,token:"[PATIENT_INACTIVE_DENTAL_LIST]"},{title:i18n.patient_active_surgery_list,token:"[PATIENT_ACTIVE_SURGERY_LIST]"},{title:i18n.patient_inactive_surgery_list,token:"[PATIENT_INACTIVE_SURGERY_LIST]"},{title:i18n.encounter_date,token:"[ENCOUNTER_DATE]"},{title:i18n.encounter_subjective_part,token:"[ENCOUNTER_SUBJECTIVE]"},{title:i18n.encounter_subjective_part,token:"[ENCOUNTER_OBJECTIVE]"},{title:i18n.encounter_assesment,token:"[ENCOUNTER_ASSESMENT]"},{title:i18n.encounter_assesment_list,token:"[ENCOUNTER_ASSESMENT_LIST]"},{title:i18n.encounter_assesment_code_list,token:"[ENCOUNTER_ASSESMENT_CODE_LIST]"},{title:i18n.encounter_assesment_full_list,token:"[ENCOUNTER_ASSESMENT_FULL_LIST]"},{title:i18n.encounter_plan,token:"[ENCOUNTER_PLAN]"},{title:i18n.encounter_medications,token:"[ENCOUNTER_MEDICATIONS]"},{title:i18n.encounter_immunizations,token:"[ENCOUNTER_IMMUNIZATIONS]"},{title:i18n.encounter_allergies,token:"[ENCOUNTER_ALLERGIES]"},{title:i18n.encounter_active_problems,token:"[ENCOUNTER_ACTIVE_PROBLEMS]"},{title:i18n.encounter_surgeries,token:"[ENCOUNTER_SURGERIES]"},{title:i18n.encounter_dental,token:"[ENCOUNTER_DENTAL]"},{title:i18n.encounter_laboratories,token:"[ENCOUNTER_LABORATORIES]"},{title:i18n.encounter_procedures_terms,token:"[ENCOUNTER_PROCEDURES_TERMS]"},{title:i18n.encounter_cpt_codes_list,token:"[ENCOUNTER_CPT_CODES]"},{title:i18n.encounter_signature,token:"[ENCOUNTER_SIGNATURE]"},{title:i18n.orders_laboratories,token:"[ORDERS_LABORATORIES]"},{title:i18n.orders_x_rays,token:"[ORDERS_XRAYS]"},{title:i18n.orders_referral,token:"[ORDERS_REFERRAL]"},{title:i18n.orders_other,token:"[ORDERS_OTHER]"},{title:i18n.current_date,token:"[CURRENT_DATE]"},{title:i18n.current_time,token:"[CURRENT_TIME]"},{title:i18n.current_user_name,token:"[CURRENT_USER_NAME]"},{title:i18n.current_user_full_name,token:"[CURRENT_USER_FULL_NAME]"},{title:i18n.current_user_license_number,token:"[CURRENT_USER_LICENSE_NUMBER]"},{title:i18n.current_user_dea_license_number,token:"[CURRENT_USER_DEA_LICENSE_NUMBER]"},{title:i18n.current_user_dm_license_number,token:"[CURRENT_USER_DM_LICENSE_NUMBER]"},{title:i18n.current_user_npi_license_number,token:"[CURRENT_USER_NPI_LICENSE_NUMBER]"}]});a.DocumentsDefaultsGrid=Ext.create("Ext.grid.Panel",{title:i18n.documents_defaults,region:"north",width:250,border:true,split:true,store:a.defaultsDocumentsStore,hideHeaders:true,columns:[{flex:1,sortable:true,dataIndex:"title",editor:{xtype:"textfield",allowBlank:false}},{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onRemoveDocument}],listeners:{scope:a,itemclick:a.onDocumentsGridItemClick},tbar:["->",{text:i18n["new"],scope:a,handler:a.newDefaultTemplates}],plugins:[a.rowEditor3=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2})]});a.DocumentsGrid=Ext.create("Ext.grid.Panel",{title:i18n.document_templates,region:"center",width:250,border:true,split:true,store:a.templatesDocumentsStore,hideHeaders:true,columns:[{flex:1,sortable:true,dataIndex:"title",editor:{xtype:"textfield",allowBlank:false}},{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:a,handler:a.onRemoveDocument}],listeners:{scope:a,itemclick:a.onDocumentsGridItemClick},tbar:["->",{text:i18n["new"],scope:a,handler:a.newDocumentTemplate}],plugins:[a.rowEditor=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2})]});a.LeftCol=Ext.create("Ext.container.Container",{region:"west",layout:"border",width:250,border:false,split:true,items:[a.DocumentsDefaultsGrid,a.DocumentsGrid]});a.TeamplateEditor=Ext.create("Ext.form.Panel",{title:i18n.document_editor,region:"center",layout:"fit",autoScroll:false,border:true,split:true,hideHeaders:true,items:{xtype:"htmleditor",enableFontSize:false,name:"body",margin:5},buttons:[{text:i18n.save,scope:a,handler:a.onSaveEditor},{text:i18n.cancel,scope:a,handler:a.onCancelEditor}]});a.TokensGrid=Ext.create("App.classes.GridPanel",{title:i18n.available_tokens,region:"east",width:250,border:true,split:true,hideHeaders:true,store:a.tokenStore,disableSelection:true,viewConfig:{stripeRows:false},columns:[{flex:1,sortable:false,dataIndex:"token"},{dataIndex:"token",width:30,xtype:"templatecolumn",tpl:new Ext.XTemplate("<object id='clipboard{token}' codebase='http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0' width='16' height='16' align='middle'>","<param name='allowScriptAccess' value='always' />","<param name='allowFullScreen' value='false' />","<param name='movie' value='lib/ClipBoard/clipboard.swf' />","<param name='quality' value='high' />","<param name='bgcolor' value='#ffffff' />","<param name='flashvars' value='callback=copyToClipBoard&callbackArg={token}' />","<embed src='lib/ClipBoard/clipboard.swf' flashvars='callback=copyToClipBoard&callbackArg={token}' quality='high' bgcolor='#ffffff' width='16' height='16' name='clipboard{token}' align='middle' allowscriptaccess='always' allowfullscreen='false' type='application/x-shockwave-flash' pluginspage='http://www.adobe.com/go/getflashplayer' />","</object>",null)}]});a.pageBody=[a.LeftCol,a.TeamplateEditor,a.TokensGrid];a.callParent()},onSave:function(){},onDelete:function(){},onTokensGridItemClick:function(){},onSaveEditor:function(){var d=this,c=d.down("form").getForm(),a=c.getRecord(),b=c.getValues();a.set(b)},onCancelEditor:function(){var c=this,b=c.down("form").getForm(),a=c.DocumentsGrid;b.reset();a.getSelectionModel().deselectAll()},onDocumentsGridItemClick:function(b,a){var d=this;var c=d.down("form").getForm();c.loadRecord(a)},newDocumentTemplate:function(){var b=this,a=b.templatesDocumentsStore;b.rowEditor.cancelEdit();a.insert(0,{title:i18n.new_document,template_type:"documenttemplate",date:new Date(),type:1});b.rowEditor.startEdit(0,0)},newDefaultTemplates:function(){var b=this,a=b.defaultsDocumentsStore;b.rowEditor3.cancelEdit();a.insert(0,{title:i18n.new_defaults,template_type:"defaulttemplate",date:new Date(),type:1});b.rowEditor3.startEdit(0,0)},copyToClipBoard:function(b,e,a){var d=b.getStore().getAt(e),c=d.get("token")},onRemoveDocument:function(){},onActive:function(b){var a=this;a.templatesDocumentsStore.load();a.defaultsDocumentsStore.load();b(true)}});Ext.define("App.view.administration.Facilities",{extend:"App.classes.RenderPanel",id:"panelFacilities",pageTitle:i18n.facilities_active,uses:["App.classes.GridPanel","App.classes.window.Window"],initComponent:function(){var a=this;Ext.define("facilityModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"active",type:"string"},{name:"phone",type:"string"},{name:"fax",type:"string"},{name:"street",type:"string"},{name:"city",type:"string"},{name:"state",type:"string"},{name:"postal_code",type:"string"},{name:"country_code",type:"string"},{name:"federal_ein",type:"string"},{name:"service_location",type:"string"},{name:"billing_location",type:"string"},{name:"accepts_assignment",type:"string"},{name:"pos_code",type:"string"},{name:"x12_sender_id",type:"string"},{name:"attn",type:"string"},{name:"domain_identifier",type:"string"},{name:"facility_npi",type:"string"},{name:"tax_id_type",type:"string"}],proxy:{type:"direct",api:{read:Facilities.getFacilities,create:Facilities.addFacility,update:Facilities.updateFacility,destroy:Facilities.deleteFacility}}});a.FacilityStore=Ext.create("Ext.data.Store",{model:"facilityModel",remoteSort:true});a.FacilityGrid=Ext.create("App.classes.GridPanel",{store:a.FacilityStore,columns:[{text:i18n.name,flex:1,sortable:true,dataIndex:"name"},{text:i18n.phone,width:100,sortable:true,dataIndex:"phone"},{text:i18n.fax,width:100,sortable:true,dataIndex:"fax"},{text:i18n.city,width:100,sortable:true,dataIndex:"city"}],tbar:Ext.create("Ext.PagingToolbar",{pageSize:30,store:a.FacilityStore,displayInfo:true,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{text:i18n.add_new_facility,iconCls:"save",handler:function(){var b=a.win.down("form");a.onNew(b,"facilityModel",i18n.add_new_facility)}},"-",{text:i18n.show_active_facilities,action:"active",scope:a,handler:a.filterFacilitiesby},"-",{text:i18n.show_inactive_facilities,action:"inactive",scope:a,handler:a.filterFacilitiesby}]}),listeners:{itemdblclick:function(c,b){a.onItemdblclick(a.FacilityStore,b,i18n.edit_facility)}}});a.win=Ext.create("App.classes.window.Window",{width:600,items:[{xtype:"mitos.form",fieldDefaults:{msgTarget:"side",labelWidth:100},defaultType:"textfield",defaults:{anchor:"100%"},items:[{fieldLabel:i18n.name,name:"name",allowBlank:false},{fieldLabel:i18n.phone,name:"phone",vtype:"phoneNumber"},{fieldLabel:i18n.fac,name:"fax",vtype:"phoneNumber"},{fieldLabel:i18n.street,name:"street"},{fieldLabel:i18n.city,name:"city"},{fieldLabel:i18n.state,name:"state"},{fieldLabel:i18n.postal_code,name:"postal_code",vtype:"postalCode"},{fieldLabel:i18n.country_code,name:"country_code"},{xtype:"fieldcontainer",fieldLabel:i18n.tax_id,layout:"hbox",items:[{xtype:"mitos.taxidcombo",name:"tax_id_type",width:50},{xtype:"textfield",name:"federal_ein"}]},{xtype:"mitos.checkbox",fieldLabel:i18n.active,name:"active"},{xtype:"mitos.checkbox",fieldLabel:i18n.service_location,name:"service_location"},{xtype:"mitos.checkbox",fieldLabel:i18n.billing_location,name:"billing_location"},{xtype:"mitos.checkbox",fieldLabel:i18n.accepts_assignment,name:"accepts_assignment"},{xtype:"mitos.poscodescombo",fieldLabel:i18n.pos_code,name:"pos_code"},{fieldLabel:i18n.billing_attn,name:"attn"},{fieldLabel:i18n.clia_number,name:"domain_identifier"},{fieldLabel:"Facility NPI",name:"facility_npi"},{name:"id",hidden:true}]}],buttons:[{text:i18n.save,cls:"winSave",handler:function(){var b=a.win.down("form").getForm();if(b.isValid()){a.onSave(b,a.FacilityStore);a.action("close")}}},"-",{text:i18n.cancel,scope:a,handler:function(b){b.up("window").close()}}],listeners:{scope:a,close:function(){a.action("close")}}});a.pageBody=[a.FacilityGrid];a.callParent(arguments)},filterFacilitiesby:function(a){this.updateTitle(i18n.Facilities+" ("+Ext.String.capitalize(a.action)+")");this.FacilityStore.proxy.extraParams={active:a.action=="active"?1:0};this.FacilityStore.load()},onNew:function(c,a,d){this.setForm(c,d);c.getForm().reset();var b=Ext.ModelManager.create({},a);c.getForm().loadRecord(b);this.action("new");this.win.show()},onSave:function(d,c){var a=d.getRecord(),b=d.getValues(),e=c.indexOf(a);if(e==-1){c.add(b)}else{a.set(b)}c.sync();c.load();this.win.close()},onItemdblclick:function(b,a,d){var c=this.win.down("form");this.setForm(c,d);c.getForm().loadRecord(a);this.action("old");this.win.show()},setForm:function(a,b){a.up("window").setTitle(b)},openWin:function(){this.win.show()},action:function(c){var d=this.win,b=d.down("form"),e=d.down("toolbar"),a=e.getComponent("delete");if(c=="close"){b.getForm().reset()}},onActive:function(a){this.FacilityStore.load();a(true)}});Ext.define("App.view.administration.Globals",{extend:"App.classes.RenderPanel",id:"panelGlobals",pageTitle:"GaiaEHR "+i18n.global_settings,uses:["App.classes.form.fields.Checkbox"],initComponent:function(){var a=this;Ext.define("GlobalSettingsModel",{extend:"Ext.data.Model",fields:[{name:"fullname",type:"auto"},{name:"default_top_pane",type:"auto"},{name:"concurrent_layout",type:"auto"},{name:"css_header",type:"auto"},{name:"gbl_nav_area_width",type:"auto"},{name:"GaiaEHR_name",type:"auto"},{name:"full_new_patient_form",type:"auto"},{name:"patient_search_results_style",type:"auto"},{name:"simplified_demographics",type:"auto"},{name:"simplified_prescriptions",type:"auto"},{name:"simplified_copay",type:"auto"},{name:"use_charges_panel",type:"auto"},{name:"online_support_link",type:"auto"},{name:"language_default",type:"auto"},{name:"language_menu_showall",type:"auto"},{name:"translate_layout",type:"auto"},{name:"translate_lists",type:"auto"},{name:"translate_gacl_groups",type:"auto"},{name:"translate_form_titles",type:"auto"},{name:"translate_document_categories",type:"auto"},{name:"translate_appt_categories",type:"auto"},{name:"units_of_measurement",type:"auto"},{name:"disable_deprecated_metrics_form",type:"auto"},{name:"phone_country_code",type:"auto"},{name:"date_display_format",type:"auto"},{name:"currency_decimals",type:"auto"},{name:"currency_dec_point",type:"auto"},{name:"currency_thousands_sep",type:"auto"},{name:"gbl_currency_symbol",type:"auto"},{name:"specific_application",type:"auto"},{name:"inhouse_pharmacy",type:"auto"},{name:"disable_chart_tracker",type:"auto"},{name:"disable_phpmyadmin_link",type:"auto"},{name:"disable_immunizations",type:"auto"},{name:"disable_prescriptions",type:"auto"},{name:"omit_employers",type:"auto"},{name:"select_multi_providers",type:"auto"},{name:"disable_non_default_groups",type:"auto"},{name:"ignore_pnotes_authorization",type:"auto"},{name:"support_encounter_claims",type:"auto"},{name:"advance_directives_warning",type:"auto"},{name:"configuration_import_export",type:"auto"},{name:"restrict_user_facility",type:"auto"},{name:"set_facility_cookie",type:"auto"},{name:"discount_by_money",type:"auto"},{name:"gbl_visit_referral_source",type:"auto"},{name:"gbl_mask_patient_id",type:"auto"},{name:"gbl_mask_invoice_number",type:"auto"},{name:"gbl_mask_product_id",type:"auto"},{name:"force_billing_widget_open",type:"auto"},{name:"activate_ccr_ccd_report",type:"auto"},{name:"disable_calendar",type:"auto"},{name:"schedule_start",type:"auto"},{name:"schedule_end",type:"auto"},{name:"calendar_interval",type:"auto"},{name:"calendar_appt_style",type:"auto"},{name:"docs_see_entire_calendar",type:"auto"},{name:"auto_create_new_encounters",type:"auto"},{name:"timeout",type:"auto"},{name:"secure_password",type:"auto"},{name:"password_history",type:"auto"},{name:"password_expiration_days",type:"auto"},{name:"password_grace_time",type:"auto"},{name:"is_client_ssl_enabled",type:"auto"},{name:"certificate_authority_crt",type:"auto"},{name:"certificate_authority_key",type:"auto"},{name:"client_certificate_valid_in_days",type:"auto"},{name:"Emergency_Login_email_id",type:"auto"},{name:"practice_return_email_path",type:"auto"},{name:"EMAIL_METHOD",type:"auto"},{name:"SMTP_HOST",type:"auto"},{name:"SMTP_PORT",type:"auto"},{name:"SMTP_USER",type:"auto"},{name:"SMTP_PASS",type:"auto"},{name:"EMAIL_NOTIFICATION_HOUR",type:"auto"},{name:"SMS_NOTIFICATION_HOUR",type:"auto"},{name:"SMS_GATEWAY_USENAME",type:"auto"},{name:"SMS_GATEWAY_PASSWORD",type:"auto"},{name:"SMS_GATEWAY_APIKEY",type:"auto"},{name:"enable_auditlog",type:"auto"},{name:"audit_events_patient-record",type:"auto"},{name:"audit_events_scheduling",type:"auto"},{name:"audit_events_order",type:"auto"},{name:"audit_events_security-administration",type:"auto"},{name:"audit_events_backup",type:"auto"},{name:"audit_events_other",type:"auto"},{name:"audit_events_query",type:"auto"},{name:"enable_atna_audit",type:"auto"},{name:"atna_audit_host",type:"auto"},{name:"atna_audit_port",type:"auto"},{name:"atna_audit_localcert",type:"auto"},{name:"atna_audit_cacert",type:"auto"},{name:"mysql_bin_dir",type:"auto"},{name:"perl_bin_dir",type:"auto"},{name:"temporary_files_dir",type:"auto"},{name:"backup_log_dir",type:"auto"},{name:"state_data_type",type:"auto"},{name:"state_list",type:"auto"},{name:"state_custom_addlist_widget",type:"auto"},{name:"country_data_type",type:"auto"},{name:"country_list",type:"auto"},{name:"print_command",type:"auto"},{name:"default_chief_complaint",type:"auto"},{name:"default_new_encounter_form",type:"auto"},{name:"patient_id_category_name",type:"auto"},{name:"patient_photo_category_name",type:"auto"},{name:"MedicareReferrerIsRenderer",type:"auto"},{name:"post_to_date_benchmark",type:"auto"},{name:"enable_hylafax",type:"auto"},{name:"hylafax_server",type:"auto"},{name:"hylafax_basedir",type:"auto"},{name:"hylafax_enscript",type:"auto"},{name:"enable_scanner",type:"auto"},{name:"scanner_output_directory",type:"auto"}]});a.store=Ext.create("Ext.data.Store",{model:"GlobalSettingsModel",proxy:{type:"direct",api:{read:Globals.getGlobals}},autoLoad:false});a.store.on("load",function(){var b=a.store.getAt(0);a.globalFormPanel.getForm().loadRecord(b)});a.default_top_pane_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.dashboard,option_id:"app/dashboard/dashboard.ejs.php"},{title:i18n.calendar,option_id:"app/calendar/calendar.ejs.php"},{title:i18n.messages,option_id:"app/messages/messages.ejs.php"}]});a.fullname_store=Ext.create("Ext.data.Store",{fields:["format","option_id"],data:[{format:i18n.last_first_middle,option_id:"0"},{format:i18n.first_middle_last,option_id:"1"}]});a.concurrent_layout_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.main_navigation_menu_left,option_id:"west"},{title:i18n.main_navigation_menu_right,option_id:"east"}]});a.css_header_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.grey_default,option_id:"ext-all-gray.css"},{title:i18n.blue,option_id:"ext-all.css"},{title:i18n.access,option_id:"ext-all-access.css"}]});a.full_new_patient_form_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.oldstyle_static_form_without_search_or_duplication_check,option_id:"0"},{title:i18n.all_demographics_fields_with_search_and_duplication_check,option_id:"1"},{title:i18n.mandatory_or_specified_fields_only_search_and_dup_check,option_id:"2"},{title:i18n.mandatory_or_specified_fields_only_dup_check_no_search,option_id:"3"}]});a.patient_search_results_style_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.encounter_statistics,option_id:"0"},{title:i18n.mandatory_and_specified_fields,option_id:"1"}]});a.units_of_measurement_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.show_both_us_and_metric_main_unit_is_us,option_id:"1"},{title:i18n.show_both_us_and_metric_main_unit_is_metric,option_id:"2"},{title:i18n.show_us_only,option_id:"3"},{title:i18n.show_metric_only,option_id:"4"}]});a.date_display_format_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.yyyy_mm_dd,option_id:"0"},{title:i18n.mm_dd_yyyy,option_id:"1"},{title:i18n.dd_mm_yyyy,option_id:"2"}]});a.time_display_format_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n["24_hr"],option_id:"0"},{title:i18n["12 hr"],option_id:"1"}]});a.currency_decimals_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n["0"],option_id:"0"},{title:i18n["1"],option_id:"1"},{title:i18n["2"],option_id:"2"}]});a.currency_dec_point_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.comma,option_id:","},{title:i18n.period,option_id:"."}]});a.currency_thousands_sep_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.comma,option_id:","},{title:i18n.period,option_id:"."},{title:i18n.space,option_id:" "},{title:i18n.none,option_id:""}]});a.EMAIL_METHOD_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:"PHPMAIL",option_id:"PHPMAIL"},{title:"SENDMAIL",option_id:"SENDMAIL"},{title:"SMTP",option_id:"SMTP"}]});a.state_country_data_type_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:i18n.text_field,option_id:"2"},{title:i18n.single_selection_list,option_id:"1"},{title:i18n.single_selection_list_with_ability_to_add_to_the_list,option_id:"26"}]});a.dummyStore=new Ext.data.ArrayStore({fields:["title","option_id"],data:[[i18n.option_1,"Option 1"],[i18n.option_2,"Option 2"],[i18n.option_3,"Option 3"],[i18n.option_5,"Option 5"],[i18n.option_6,"Option 6"],[i18n.option_7,"Option 7"]]});a.globalFormPanel=Ext.create("App.classes.form.Panel",{layout:"fit",autoScroll:true,bodyStyle:"padding: 0;",fieldDefaults:{msgTarget:"side",labelWidth:220,width:520},defaults:{anchor:"100%"},items:[{xtype:"tabpanel",activeTab:0,defaults:{bodyStyle:"padding:10px",autoScroll:true},items:[{title:i18n.appearance,defaults:{anchor:"100%"},items:[{xtype:"combo",fieldLabel:i18n.main_top_pane_screen,name:"default_top_pane",displayField:"title",valueField:"option_id",editable:false,store:a.default_top_pane_store},{xtype:"combo",fieldLabel:i18n.layout_style,name:"concurrent_layout",displayField:"title",valueField:"option_id",editable:false,store:a.concurrent_layout_store},{xtype:"combo",fieldLabel:i18n.theme,name:"css_header",displayField:"title",valueField:"option_id",editable:false,store:a.css_header_store},{xtype:"textfield",fieldLabel:i18n.navigation_area_width,name:"gbl_nav_area_width"},{xtype:"textfield",fieldLabel:i18n.application_title,name:"GaiaEHR_name"},{xtype:"combo",fieldLabel:i18n.new_patient_form,name:"full_new_patient_form",displayField:"title",valueField:"option_id",editable:false,store:a.full_new_patient_form_store},{xtype:"combo",fieldLabel:i18n.patient_search_resuls_style,name:"patient_search_results_style",displayField:"title",valueField:"option_id",editable:false,store:a.patient_search_results_style_store},{xtype:"mitos.checkbox",fieldLabel:i18n.simplified_demographics,name:"simplified_demographics"},{xtype:"mitos.checkbox",fieldLabel:i18n.simplified_prescriptions,name:"simplified_prescriptions"},{xtype:"mitos.checkbox",fieldLabel:i18n.simplified_copay,name:"simplified_copay"},{xtype:"mitos.checkbox",fieldLabel:i18n.user_charges_panel,name:"use_charges_panel"},{xtype:"textfield",fieldLabel:i18n.online_support_link,name:"online_support_link"}]},{title:"Locale",defaultType:"textfield",items:[{xtype:"combo",fieldLabel:i18n.fullname_format,name:"fullname",displayField:"format",valueField:"option_id",editable:false,store:a.fullname_store},{xtype:"languagescombo",fieldLabel:i18n.default_language,name:"language_default"},{xtype:"mitos.checkbox",fieldLabel:i18n.all_language_allowed,name:"language_menu_showall"},{xtype:"languagescombo",fieldLabel:i18n.allowed_languages+" -??-",name:"lang_description2",multiSelect:true},{xtype:"mitos.checkbox",fieldLabel:i18n.allow_debuging_language+" -??-",name:"Loc4"},{xtype:"mitos.checkbox",fieldLabel:i18n.translate_layouts,name:"translate_layout"},{xtype:"mitos.checkbox",fieldLabel:i18n.translate_list,name:"translate_lists"},{xtype:"mitos.checkbox",fieldLabel:i18n.translate_access_control_roles,name:"translate_gacl_groups"},{xtype:"mitos.checkbox",fieldLabel:i18n.translate_patient_note_titles,name:"translate_form_titles"},{xtype:"mitos.checkbox",fieldLabel:i18n.translate_documents_categoies,name:"translate_document_categories",id:"translate_document_categories"},{xtype:"mitos.checkbox",fieldLabel:i18n.translate_appointment_categories,name:"translate_appt_categories"},{xtype:"combo",fieldLabel:i18n.units_for_visits_forms,name:"units_of_measurement",displayField:"title",valueField:"option_id",editable:false,store:a.units_of_measurement_store},{xtype:"mitos.checkbox",fieldLabel:i18n.disable_old_metric_vitals_form,name:"disable_deprecated_metrics_form"},{xtype:"textfield",fieldLabel:i18n.telephone_country_code,name:"phone_country_code"},{xtype:"combo",fieldLabel:i18n.date_display_format,name:"date_display_format",displayField:"title",valueField:"option_id",editable:false,store:a.date_display_format_store},{xtype:"combo",fieldLabel:i18n.time_display_format+" -??-",name:"date_display_format",displayField:"title",valueField:"option_id",editable:false,store:a.time_display_format_store},{xtype:"combo",fieldLabel:i18n.currency_decimal_places,name:"currency_decimals",displayField:"title",valueField:"option_id",editable:false,store:a.currency_decimals_store},{xtype:"combo",fieldLabel:i18n.currency_decimal_point_symbol,name:"currency_dec_point",displayField:"title",valueField:"option_id",editable:false,store:a.currency_dec_point_store},{xtype:"combo",fieldLabel:i18n.currency_thousands_separator,name:"currency_thousands_sep",displayField:"title",valueField:"option_id",editable:false,store:a.currency_thousands_sep_store},{xtype:"textfield",fieldLabel:i18n.currency_designator,name:"gbl_currency_symbol"}]},{title:"Features",defaultType:"mitos.checkbox",items:[{xtype:"combo",fieldLabel:i18n.specific_application,name:"date_display_format",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{xtype:"combo",fieldLabel:i18n.drugs_and_prodructs,name:"date_display_format",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{fieldLabel:i18n.disable_chart_tracker,name:"date_display_format"},{fieldLabel:i18n.disable_immunizations,name:"disable_immunizations"},{fieldLabel:i18n.disable_prescriptions,name:"disable_prescriptions"},{fieldLabel:i18n.omit_employers,name:"omit_employers"},{fieldLabel:i18n.support_multiprovider_events,name:"select_multi_providers"},{fieldLabel:i18n.disable_user_groups,name:"disable_non_default_groups"},{fieldLabel:i18n.skip_authorization_of_patient_notes,name:"ignore_pnotes_authorization"},{fieldLabel:i18n.allow_encounters_claims,name:"support_encounter_claims"},{fieldLabel:i18n.advance_directives_warning,name:"advance_directives_warning"},{fieldLabel:i18n.configuration_export_import,name:"configuration_import_export"},{fieldLabel:i18n.restrict_users_to_facilities,name:"restrict_user_facility"},{fieldLabel:i18n.remember_selected_facility,name:"set_facility_cookie"},{fieldLabel:i18n.discounts_as_monetary_ammounts,name:"discount_by_money"},{fieldLabel:i18n.referral_source_for_encounters,name:"gbl_visit_referral_source"},{fieldLabel:i18n.maks_for_patients_ids,xtype:"textfield",name:"gbl_mask_patient_id"},{fieldLabel:i18n.mask_of_invoice_numbers,xtype:"textfield",name:"gbl_mask_invoice_number"},{fieldLabel:i18n.mask_for_product_ids,xtype:"textfield",name:"gbl_mask_product_id"},{fieldLabel:i18n.force_billing_widget_open,name:"force_billing_widget_open"},{fieldLabel:i18n.actiate_ccr_ccd_reporting,name:"activate_ccr_ccd_report"},{fieldLabel:i18n.hide_encryption_decryption_options_in_document_managment+" -??-",name:"Feat22"}]},{title:i18n.calendar,defaultType:"combo",items:[{xtype:"mitos.checkbox",fieldLabel:i18n.disable_calendar,name:"Cal1"},{fieldLabel:i18n.calendar_starting_hour,name:"Cal2",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{fieldLabel:i18n.calendar_ending_hour,name:"Cal3",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{fieldLabel:i18n.calendar_interval,name:"Cal4",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{fieldLabel:i18n.appointment_display_style,name:"Cal5",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{xtype:"mitos.checkbox",fieldLabel:i18n.provider_see_entire_calendar,name:"Cal6"},{xtype:"mitos.checkbox",fieldLabel:i18n.auto_create_new_encounters,name:"Cal7"},{fieldLabel:i18n.appointment_event_color,name:"Cal8",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore}]},{title:"Security",defaultType:"textfield",items:[{fieldLabel:i18n.idle_session_timeout_seconds,name:"timeout"},{xtype:"mitos.checkbox",fieldLabel:i18n.require_strong_passwords,name:"secure_password",displayField:"title",valueField:"option_id",editable:false,store:a.dummyStore},{xtype:"mitos.checkbox",fieldLabel:i18n.require_unique_passwords,name:"password_history"},{fieldLabel:i18n.defaults_password_expiration_days,name:"password_expiration_days"},{fieldLabel:i18n.password_expiration_grace_period,name:"password_grace_time"},{xtype:"mitos.checkbox",fieldLabel:i18n.enable_clients_ssl,name:"is_client_ssl_enabled"},{fieldLabel:i18n.path_to_ca_certificate_file,name:"certificate_authority_crt"},{fieldLabel:i18n.path_to_ca_key_file,name:"certificate_authority_key"},{fieldLabel:i18n.client_certificate_expiration_days,name:"client_certificate_valid_in_days"},{fieldLabel:i18n.emergency_login_email_address,name:"Emergency_Login_email_id"}]},{title:i18n.notifications,defaultType:"textfield",items:[{fieldLabel:i18n.notification_email_address,name:"practice_return_email_path"},{xtype:"combo",fieldLabel:i18n.email_transport_method,name:"EMAIL_METHOD",displayField:"title",valueField:"option_id",editable:false,store:a.EMAIL_METHOD_store},{fieldLabel:i18n.smpt_server_hostname,name:"SMTP_HOST"},{fieldLabel:i18n.smpt_server_port_number,name:"SMTP_PORT"},{fieldLabel:i18n.smpt_user_for_authentication,name:"SMTP_USER"},{fieldLabel:i18n.smpt_password_for_authentication,name:"SMTP_PASS"},{fieldLabel:i18n.email_notification_hours,name:"EMAIL_NOTIFICATION_HOUR"},{fieldLabel:i18n.sms_notification_hours,name:"SMS_NOTIFICATION_HOUR"},{fieldLabel:i18n.sms_gateway_usarname,name:"SMS_GATEWAY_USENAME"},{fieldLabel:i18n.sms_gateway_password,name:"SMS_GATEWAY_PASSWORD"},{fieldLabel:i18n.sms_gateway_api_Key,name:"SMS_GATEWAY_APIKEY"}]},{title:i18n.logging,defaultType:"mitos.checkbox",items:[{fieldLabel:i18n.enable_audit_logging,name:"enable_auditlog"},{fieldLabel:i18n.audit_logging_patient_record,name:"audit_events_patient"},{fieldLabel:i18n.audid_logging_scheduling,name:"audit_events_scheduling"},{fieldLabel:i18n.audid_logging_order,name:"audit_events_order"},{fieldLabel:i18n.audid_logging_security_administration,name:"audit_events_security"},{fieldLabel:i18n.audid_logging_backups,name:"audit_events_backup"},{fieldLabel:i18n.audid_logging_miscellaeous,name:"audit_events_other"},{fieldLabel:i18n.audid_logging_select_query,name:"audit_events_query"},{fieldLabel:i18n.enable_atna_auditing,name:"enable_atna_audit"},{xtype:"textfield",fieldLabel:i18n.atna_audit_host,name:"atna_audit_host"},{xtype:"textfield",fieldLabel:i18n.atna_audit_post,name:"atna_audit_port"},{xtype:"textfield",fieldLabel:i18n.atna_audit_local_certificate,name:"atna_audit_localcert"},{xtype:"textfield",fieldLabel:i18n.atna_audit_ca_certificate,name:"atna_audit_cacert"}]},{title:i18n.miscellaneous,defaultType:"textfield",items:[{fieldLabel:i18n.path_to_mysql_binaries,name:"mysql_bin_dir"},{fieldLabel:i18n.path_to_perl_binaries,name:"perl_bin_dir"},{fieldLabel:i18n.path_to_temporary_files,name:"temporary_files_dir"},{fieldLabel:i18n.path_for_event_log_backup,name:"backup_log_dir"},{xtype:"combo",fieldLabel:i18n.state_data_type,name:"state_data_type",displayField:"title",valueField:"option_id",editable:false,store:a.state_country_data_type_store},{fieldLabel:i18n.state_list,name:"state_list"},{xtype:"mitos.checkbox",fieldLabel:i18n.state_list_widget_custom_fields,name:"state_custom_addlist_widget"},{xtype:"combo",fieldLabel:i18n.country_data_type,name:"country_data_type",displayField:"title",valueField:"option_id",editable:false,store:a.state_country_data_type_store},{fieldLabel:i18n.country_list,name:"country_list"},{fieldLabel:i18n.print_command,name:"print_command"},{fieldLabel:i18n.default_reason_for_visit,name:"default_chief_complaint"},{fieldLabel:i18n.default_encounter_form_id,name:"default_new_encounter_form"},{fieldLabel:i18n.patient_id_category_name,name:"patient_id_category_name"},{fieldLabel:i18n.patient_photo_category_name,name:"patient_photo_category_name"},{xtype:"mitos.checkbox",fieldLabel:i18n.medicare_referrer_is_renderer,name:"MedicareReferrerIsRenderer"},{fieldLabel:i18n.final_close_date_yyy_mm_dd,name:"post_to_date_benchmark"},{xtype:"mitos.checkbox",fieldLabel:i18n.enable_hylafax_support,name:"enable_hylafax"},{fieldLabel:i18n.hylafax_server,name:"hylafax_server"},{fieldLabel:i18n.hylafax_directory,name:"hylafax_basedir"},{fieldLabel:i18n.hylafax_enscript_command,name:"hylafax_enscript"},{xtype:"mitos.checkbox",fieldLabel:i18n.enable_scanner_support,name:"enable_scanner"},{fieldLabel:i18n.scanner_directory,name:"scanner_output_directory"}]},{title:i18n.connectors,defaultType:"textfield",items:[{xtype:"mitos.checkbox",fieldLabel:i18n.enable_lab_exchange,name:"Conn1"},{fieldLabel:i18n.lab_exchange_site_id,name:"Conn2"},{fieldLabel:i18n.lab_exchange_token_id,name:"Conn3"},{fieldLabel:i18n.lab_exchange_site_address,name:"Conn4"}]}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:i18n.save_configuration,iconCls:"save",handler:function(){var b=a.globalFormPanel.getForm();a.onSave(b,a.store)}}]}]}]});a.pageBody=[a.globalFormPanel];a.callParent(arguments)},onSave:function(d,c){var a=d.getRecord(),b=d.getValues();Globals.updateGlobals(b,function(){c.load()});this.msg(i18n.new_global_configuration_saved,i18n.refresh_the_application)},onActive:function(a){this.store.load();a(true)}});Ext.define("App.view.administration.Layout",{extend:"App.classes.RenderPanel",id:"panelLayout",pageTitle:i18n.layout_form_editor,pageLayout:"border",uses:["App.classes.GridPanel"],initComponent:function(){var a=this;a.currForm=null;a.currField=null;Ext.define("layoutTreeModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"text",type:"string"},{name:"pos",type:"string"},{name:"xtype",type:"string"},{name:"form_id",type:"string"},{name:"item_of",type:"string"},{name:"title",type:"string"},{name:"fieldLabel",type:"string"},{name:"emptyText",type:"string"},{name:"labelWidth",type:"string"},{name:"hideLabel",type:"string"},{name:"layout",type:"string"},{name:"width",type:"string"},{name:"height",type:"string"},{name:"anchor",type:"string"},{name:"margin",type:"string"},{name:"flex",type:"string"},{name:"collapsible",type:"string"},{name:"checkboxToggle",type:"string"},{name:"collapsed",type:"string"},{name:"inputValue",type:"string"},{name:"allowBlank",type:"string"},{name:"value",type:"string"},{name:"maxValue",type:"string"},{name:"minValue",type:"string"},{name:"boxLabel",type:"string"},{name:"grow",type:"string"},{name:"growMin",type:"string"},{name:"growMax",type:"string"},{name:"increment",type:"string"},{name:"name",type:"string"},{name:"list_id",type:"string"}],idProperty:"id"});a.fieldsGridStore=Ext.create("Ext.data.TreeStore",{model:"layoutTreeModel",proxy:{type:"direct",api:{read:FormLayoutBuilder.getFormFieldsTree}},folderSort:false,autoLoad:false});Ext.define("XtypesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"name",type:"string"},{name:"value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getFiledXtypes}}});a.fieldXTypesStore=Ext.create("Ext.data.Store",{model:"XtypesComboModel",autoLoad:true});Ext.define("FormsListModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:FormLayoutBuilder.getForms}}});a.formsGridStore=Ext.create("Ext.data.Store",{model:"FormsListModel",autoLoad:true});Ext.define("ParentFieldsModel",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"value",type:"string"}],proxy:{type:"direct",api:{read:FormLayoutBuilder.getParentFields}}});a.parentFieldsStore=Ext.create("Ext.data.Store",{model:"ParentFieldsModel",autoLoad:false});Ext.define("formlistoptionsModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}]});a.selectListoptionsStore=Ext.create("Ext.data.Store",{model:"formlistoptionsModel",proxy:{type:"direct",api:{read:CombosData.getOptionsByListId}},autoLoad:false});a.selectListGrid=Ext.create("App.classes.GridPanel",{store:a.selectListoptionsStore,region:"south",collapseMode:"mini",width:250,height:250,split:true,border:false,titleCollapse:false,hideCollapseTool:true,collapsible:true,collapsed:true,columns:[{text:i18n.name,flex:1,sortable:false,dataIndex:"option_name"},{text:i18n.value,flex:1,sortable:false,dataIndex:"option_value"}]});a.fieldForm=Ext.create("App.classes.form.Panel",{region:"center",border:false,autoScroll:true,fieldDefaults:{msgTarget:"side",labelWidth:100},defaults:{anchor:"100%"},items:[{name:"id",xtype:"textfield",itemId:"id",hidden:true},{name:i18n.pos,xtype:"textfield",itemId:"pos",hidden:true},{name:i18n.form_id,xtype:"textfield",itemId:"form_id",hidden:true},{fieldLabel:i18n.type,xtype:"combo",name:"xtype",displayField:"name",valueField:"value",allowBlank:false,editable:false,store:a.fieldXTypesStore,queryMode:"local",margin:"5px 5px 5px 10px",itemId:"xtype",listeners:{scope:a,change:a.onXtypeChange}},{fieldLabel:i18n.child_of,xtype:"combo",name:"item_of",displayField:"name",valueField:"value",editable:false,hideTrigger:true,store:a.parentFieldsStore,queryMode:"local",margin:"5px 5px 5px 10px",emptyText:"None",itemId:"parentFields",listeners:{scope:a,expand:a.onParentFieldsExpand}},{xtype:"fieldset",itemId:"aditionalProperties",title:i18n.aditional_properties,defaults:{anchor:"100%"},items:[{fieldLabel:i18n.title,xtype:"textfield",name:"title",itemId:"title",allowBlank:false,hidden:true},{fieldLabel:i18n.field_label,xtype:"textfield",name:"fieldLabel",itemId:"fieldLabel",allowBlank:false,hidden:true},{fieldLabel:i18n.box_label,xtype:"textfield",name:"boxLabel",itemId:"boxLabel",allowBlank:false,hidden:true},{fieldLabel:i18n.label_width,xtype:"textfield",name:"labelWidth",itemId:"labelWidth",hidden:true},{fieldLabel:i18n.hide_label,xtype:"checkbox",name:"hideLabel",itemId:"hideLabel",hidden:true},{fieldLabel:i18n.empty_text,xtype:"textfield",name:"emptyText",itemId:"emptyText",hidden:true},{fieldLabel:i18n.layout,xtype:"textfield",name:"layout",itemId:"layout",hidden:true},{fieldLabel:i18n.name,xtype:"textfield",name:"name",itemId:"name",allowBlank:false,hidden:true},{fieldLabel:i18n.input_value,xtype:"textfield",name:"inputValue",itemId:"inputValue",allowBlank:false,hidden:true},{fieldLabel:i18n.width,xtype:"textfield",name:"width",itemId:"width",emptyText:"ei. 5 for 5px",hidden:true},{fieldLabel:i18n.height,xtype:"textfield",name:"height",itemId:"height",emptyText:"ei. 5 for 5px",hidden:true},{fieldLabel:i18n.anchor,xtype:"textfield",name:"anchor",itemId:"anchor",emptyText:"ei. 100%",hidden:true},{fieldLabel:i18n.flex,xtype:"checkbox",name:"flex",itemId:"flex",hidden:true},{fieldLabel:i18n.collapsible,xtype:"checkbox",name:"collapsible",itemId:"collapsible",hidden:true},{fieldLabel:i18n.checkbox_toggle,xtype:"checkbox",name:"checkboxToggle",itemId:"checkboxToggle",hidden:true},{fieldLabel:i18n.collapsed,xtype:"checkbox",name:"collapsed",itemId:"collapsed",hidden:true},{fieldLabel:i18n.margin,xtype:"textfield",name:"margin",itemId:"margin",emptyText:"ei. 5 5 5 5",hidden:true},{fieldLabel:i18n.column_width,xtype:"textfield",name:"columnWidth",itemId:"columnWidth",emptyText:"ei. .5",hidden:true},{fieldLabel:i18n.is_required,xtype:"checkbox",name:"allowBlank",itemId:"allowBlank",hidden:true},{fieldLabel:i18n.value,xtype:"textfield",name:"value",itemId:"value",hidden:true},{fieldLabel:i18n.max_value,xtype:"textfield",name:"maxValue",itemId:"maxValue",hidden:true},{fieldLabel:i18n.min_value,xtype:"textfield",name:"minValue",itemId:"minValue",hidden:true},{fieldLabel:i18n.max_value,xtype:"timefield",name:"maxValue",itemId:"timeMaxValue",hidden:true},{fieldLabel:i18n.min_value,xtype:"timefield",name:"minValue",itemId:"timeMinValue",hidden:true},{fieldLabel:i18n.grow,xtype:"checkbox",name:"grow",itemId:"grow",hidden:true},{fieldLabel:i18n.grow_min,xtype:"textfield",name:"growMin",itemId:"growMin",hidden:true},{fieldLabel:i18n.grow_max,xtype:"textfield",name:"growMax",itemId:"growMax",hidden:true},{fieldLabel:i18n.increment,xtype:"textfield",name:"increment",itemId:"increment",hidden:true},{fieldLabel:i18n.list_options,xtype:"mitos.listscombo",name:"list_id",itemId:"list_id",hidden:true,allowBlank:false,listeners:{scope:a,change:a.onSelectListSelect}}]}]});a.formContainer=Ext.create("Ext.panel.Panel",{title:i18n.field_configuration,border:true,split:true,width:390,region:"east",layout:"border",bodyStyle:"background-color:#fff!important",items:[a.fieldForm,a.selectListGrid],dockedItems:[{xtype:"toolbar",items:[{text:i18n.save,iconCls:"save",scope:a,handler:a.onSave},"-",{text:i18n["new"],iconCls:"icoAddRecord",scope:a,handler:a.onFormReset},"-",{text:i18n.add_child,iconCls:"icoAddRecord",itemId:"addChild",disabled:true,scope:a,handler:a.onAddChild},"-",{text:i18n["delete"],iconCls:"delete",cls:"toolDelete",scope:a,handler:a.onDelete},"-",{text:i18n.form_preview,iconCls:"icoPreview",enableToggle:true,listeners:{scope:a,toggle:a.onFormPreview}}]}]});a.fieldsGrid=Ext.create("Ext.tree.Panel",{store:a.fieldsGridStore,region:"center",border:true,sortable:false,rootVisible:false,title:i18n.field_editor_demographics,viewConfig:{plugins:{ptype:"treeviewdragdrop",allowParentInsert:true},listeners:{scope:a,drop:a.onDragDrop}},columns:[{xtype:"treecolumn",text:i18n.field_type,sortable:false,dataIndex:"xtype",width:200,align:"left"},{text:i18n.title,sortable:false,dataIndex:"title",width:100,align:"left"},{text:i18n.label,sortable:false,dataIndex:"fieldLabel",flex:1,align:"left"}],listeners:{scope:a,itemclick:a.onFieldsGridClick}});a.formsGrid=Ext.create("App.classes.GridPanel",{title:i18n.form_list,region:"west",store:a.formsGridStore,width:200,border:true,split:true,hideHeaders:true,columns:[{dataIndex:"id",hidden:true},{flex:1,sortable:true,dataIndex:"name"}],listeners:{scope:a,itemclick:a.onFormGridItemClick}});a.fromPreview=Ext.create("Ext.form.Panel",{region:"south",height:300,collapsible:true,titleCollapse:false,hideCollapseTool:true,collapsed:true,border:true,split:true,collapseMode:"header",bodyStyle:"padding: 5px",layout:"anchor",fieldDefaults:{msgTarget:"side"},tools:[{itemId:"refresh",type:"refresh",scope:a,handler:a.previewFormRender}]});a.pageBody=[a.fieldsGrid,a.formsGrid,a.formContainer,a.fromPreview];a.callParent(arguments)},onSave:function(){var b=this,a=b.fieldForm.getForm();if(a.isValid()){var c=a.getValues();if(a.findField("id").getValue()==""){FormLayoutBuilder.addField(c,function(e,d){if(d.result.success){b.loadFieldsGrid()}else{Ext.Msg.alert("Opps!",d.result.error)}})}else{FormLayoutBuilder.updateField(c,function(e,d){if(d.result.success){b.loadFieldsGrid()}else{Ext.Msg.alert("Opps!",d.result.error)}})}}},onDelete:function(){var b=this,a=b.fieldForm.getForm(),c=a.getRecord();Ext.Msg.show({title:i18n.please_confirm+"...",icon:Ext.MessageBox.QUESTION,msg:i18n.delete_this_field,buttons:Ext.Msg.YESNO,scope:this,fn:function(d){if(d=="yes"){var e={id:c.data.id,form_id:c.data.form_id,name:c.data.name,xtype:c.data.xtype};FormLayoutBuilder.deleteField(e,function(g,f){if(f.result.success){b.msg("Sweet!",i18n.field_deleted);b.currField=null;b.loadFieldsGrid();b.onFormReset()}else{Ext.Msg.alert("Opps!",f.result.error)}})}}})},onDragDrop:function(c,e,d){var b=this,g=[];for(var a=0;a<d.parentNode.childNodes.length;a++){g.push(d.parentNode.childNodes[a].data.id)}var f={id:e.records[0].data.id,parentNode:d.parentNode.data.id,parentNodeChilds:g};FormLayoutBuilder.sortFields(f,function(i,h){if(h.result.success){b.msg("Sweet!",i18n.form_fields_sorted);b.loadFieldsGrid();b.onFormReset()}else{Ext.Msg.alert("Opps!",h.result.error)}})},onFormReset:function(){var a=this.fieldForm,d=a.getForm(),e=this.fieldsGrid.getSelectionModel();e.deselectAll();d.reset();var b=Ext.ModelManager.getModel("layoutTreeModel"),c=Ext.ModelManager.create({form_id:this.currForm},b);a.el.unmask();d.loadRecord(c)},onAddChild:function(){var a=this.fieldForm,d=a.getForm(),e=this.fieldsGrid.getSelectionModel();e.deselectAll();d.reset();var b=Ext.ModelManager.getModel("layoutTreeModel"),c=Ext.ModelManager.create({form_id:this.currForm,item_of:this.currField},b);a.el.unmask();d.loadRecord(c)},onFieldsGridClick:function(c,b){var a=this.fieldForm,d=a.getForm();d.loadRecord(b);this.currField=b.data.id;if(b.data.xtype=="fieldset"||b.data.xtype=="fieldcontainer"){this.formContainer.down("toolbar").getComponent("addChild").enable()}else{this.formContainer.down("toolbar").getComponent("addChild").disable()}a.el.unmask()},onFormGridItemClick:function(b,a){this.currForm=a.get("id");this.fieldsGrid.setTitle(i18n.field_editor+" ("+a.get("name")+")");this.loadFieldsGrid();this.onFormReset();this.fieldForm.el.mask(i18n.or_select_a_field_to_update)},onSelectListSelect:function(b,a){this.selectListoptionsStore.load({params:{list_id:a}})},onParentFieldsExpand:function(a){a.picker.loadMask.destroy()},onXtypeChange:function(f,e){var d=this;if(e=="combobox"){d.selectListGrid.setTitle(i18n.select_list_options);d.selectListGrid.expand();d.selectListGrid.enable()}else{d.selectListGrid.setTitle("");d.selectListGrid.collapse();d.selectListGrid.disable()}Array.prototype.find=function(h){var k=false;for(var j=0;j<this.length;j++){if(typeof(h)=="function"){if(h.test(this[j])){if(!k){k=[]}k.push(j)}}else{if(this[j]===h){if(!k){k=[]}k.push(j)}}}return k};var b=d.fieldForm.getComponent("aditionalProperties");var c=b.items.keys;function g(h){for(var j=0;j<c.length;j++){if(!h.find(c[j])){b.getComponent(c[j]).hide();b.getComponent(c[j]).disable()}else{b.getComponent(c[j]).show();b.getComponent(c[j]).enable()}}}var a;if(e=="fieldset"){a=["title","collapsible","collapsed","checkboxToggle","margin","columnWidth"]}else{if(e=="fieldcontainer"){a=["fieldLabel","labelWidth","hideLabel","width","layout","margin","columnWidth"]}else{if(e=="combobox"){a=["name","width","emptyText","fieldLabel","hideLabel","labelWidth","margin","allowBlank","list_id"]}else{if(e=="mitos.checkbox"){a=["name","width","fieldLabel","hideLabel","labelWidth","margin"]}else{if(e=="textfield"){a=["name","width","anchor","emptyText","fieldLabel","hideLabel","labelWidth","allowBlank","margin"]}else{if(e=="textareafield"){a=["name","width","anchor","height","emptyText","fieldLabel","hideLabel","labelWidth","allowBlank","grow","growMin","growMax","margin"]}else{if(e=="numberfield"){a=["name","width","value","emptyText","maxValue","minValue","increment","fieldLabel","labelWidth","hideLabel","margin"]}else{if(e=="timefield"){a=["name","width","value","emptyText","timeMaxValue","timeMinValue","increment","fieldLabel","labelWidth","hideLabel","margin"]}else{if(e=="radiofield"){a=["name","width","boxLabel","labelWidth","hideLabel","margin","inputValue"]}else{if(e=="datefield"||e=="mitos.datetime"){a=["name","width","value","layout","emptyText","fieldLabel","labelWidth","hideLabel","allowBlank","margin"]}else{a=["name","width","emptyText","fieldLabel","labelWidth","hideLabel","margin"]}}}}}}}}}}g(a)},onFormPreview:function(b,a){var c=this;if(a===true){c.previewFormRender();c.fromPreview.expand(false)}else{c.fromPreview.collapse(false)}},previewFormRender:function(){var b=this,a=this.fromPreview;a.el.mask();b.getFormItems(a,b.currForm,function(){a.doLayout();a.el.unmask()})},loadFieldsGrid:function(){var a=this,b=a.formsGrid.getSelectionModel();if(a.currForm===null){b.select(0)}a.currForm=b.getLastSelected().data.id;a.fieldsGridStore.load({params:{currForm:a.currForm}});a.parentFieldsStore.load({params:{currForm:a.currForm}});a.previewFormRender();a.fieldsGrid.doLayout()},onActive:function(b){var a=this;a.onFormReset();a.fieldForm.el.mask(i18n.or_select_a_field_to_update);a.selectListoptionsStore.load({callback:function(){a.loadFieldsGrid()}});b(true)}});Ext.define("App.view.administration.Lists",{extend:"App.classes.RenderPanel",id:"panelLists",pageTitle:i18n.select_list_options,pageLayout:"border",uses:["App.classes.GridPanel","App.classes.form.Panel","Ext.grid.plugin.RowEditing"],initComponent:function(){var a=this;a.currList=null;a.currTask=null;Ext.define("ListOptionsModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"list_id",type:"string"},{name:"option_value",type:"string"},{name:"option_name",type:"string"},{name:"seq",type:"string"},{name:"notes",type:"string"},{name:"active",type:"bool"}]});a.optionsStore=Ext.create("Ext.data.Store",{model:"ListOptionsModel",proxy:{type:"direct",api:{read:Lists.getOptions,create:Lists.addOption,update:Lists.updateOption}},autoLoad:false});Ext.define("ListsGridModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"active",type:"bool"},{name:"in_use",type:"bool"}]});a.listsStore=Ext.create("Ext.data.Store",{model:"ListsGridModel",proxy:{type:"direct",api:{read:Lists.getLists,create:Lists.addList,update:Lists.updateList}},autoLoad:false});a.optionsRowEditing=Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,errorSummary:false,listeners:{scope:a,afteredit:a.afterEdit,canceledit:a.onCancelEdit}});a.listsRowEditing=Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,errorSummary:false,listeners:{scope:a,afteredit:a.afterEdit,canceledit:a.onCancelEdit}});a.listsGrid=Ext.create("App.classes.GridPanel",{store:a.listsStore,itemId:"listsGrid",plugins:[a.listsRowEditing],width:320,margin:"0 2 0 0",region:"west",columns:[{text:i18n.select_lists,flex:1,sortable:false,dataIndex:"title",editor:{allowBlank:false}},{text:i18n.active,width:55,sortable:false,dataIndex:"active",renderer:a.boolRenderer,editor:{xtype:"mitos.checkbox",padding:"0 0 0 18"}},{text:i18n.in_use,width:55,sortable:false,dataIndex:"in_use",renderer:a.boolRenderer}],listeners:{scope:a,selectionchange:a.onListsGridClick},dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:i18n.new_list,iconCls:"icoAddRecord",scope:a,handler:a.onNewList},"->",{text:i18n.delete_list,iconCls:"icoDeleteBlack",itemId:"listDeleteBtn",disabled:true,scope:a,handler:a.onDelete,tooltip:i18n.can_be_disable}]}]});a.optionsGrid=Ext.create("App.classes.GridPanel",{store:a.optionsStore,itemId:"optionsGrid",plugins:[a.optionsRowEditing],region:"center",viewConfig:{plugins:{ptype:"gridviewdragdrop",dragText:i18n.drag_and_drop_reorganize},listeners:{scope:a,drop:a.onDragDrop}},columns:[{text:i18n.option_title,width:200,sortable:true,dataIndex:"option_name",editor:{allowBlank:false,enableKeyEvents:true,listeners:{scope:a,keyup:a.onOptionTitleChange}}},{text:i18n.option_value,width:200,sortable:true,dataIndex:"option_value",editor:{allowBlank:false,readOnly:true,itemId:"optionValueTextField"}},{text:i18n.notes,sortable:true,dataIndex:"notes",flex:1,editor:{allowBlank:true}},{text:i18n.active,width:55,sortable:false,dataIndex:"active",renderer:a.boolRenderer,editor:{xtype:"mitos.checkbox",padding:"0 0 0 18"}}],dockedItems:[{xtype:"toolbar",dock:"top",items:["->",{text:i18n.add_option,iconCls:"icoAddRecord",scope:a,handler:a.onNewOption}]}]});a.pageBody=[a.listsGrid,a.optionsGrid];a.callParent(arguments)},onNewList:function(){var b=this;b.listsRowEditing.cancelEdit();var a=Ext.create("ListsGridModel",{});b.listsStore.insert(0,a);b.listsRowEditing.startEdit(0,0)},onListsGridClick:function(b,c){var d=this,e=d.listsGrid.down("toolbar").getComponent("listDeleteBtn"),a=!!c[0].data.in_use=="1";d.currList=c[0].data.id;d.optionsStore.load({params:{list_id:d.currList}});a?e.disable():e.enable()},onNewOption:function(){var b=this;b.optionsRowEditing.cancelEdit();var a=Ext.create("ListOptionsModel",{list_id:b.currList});b.optionsStore.insert(0,a);b.optionsRowEditing.startEdit(0,0)},onOptionTitleChange:function(b){var c=b.getValue(),d=b.up("container").getComponent("optionValueTextField");d.setValue(c)},onDragDrop:function(e,g,f){var d=this,b=f.stores[0].data.items,a=[];for(var c=0;c<b.length;c++){a.push(b[c].data.id)}var h={list_id:g.records[0].data.list_id,fields:a};Lists.sortOptions(h,function(){d.optionsStore.load({params:{list_id:d.currList}})})},afterEdit:function(b){b.context.store.sync()},onCancelEdit:function(b){say(b);b.context.store.load({params:{list_id:this.currList}})},onDelete:function(c){var f=this,e=c.up("grid"),d=e.getStore(),g=e.getSelectionModel(),b=g.getLastSelected();Ext.Msg.show({title:i18n.please_confirm+"...",icon:Ext.MessageBox.QUESTION,msg:i18n.delete_this_record,buttons:Ext.Msg.YESNO,scope:f,fn:function(a){if(a=="yes"){Lists.deleteList(b.data,function(i,h){if(h.result.success){f.msg("Sweet!",i18n.list+' "'+b.data.title+'" '+i18n.deleted+".");d.load();f.optionsStore.load()}else{Ext.Msg.alert("Oops!",i18n.unable_to_delete+' "'+b.data.title+'"<br>'+i18n.list_currently_used_forms+".")}})}}})},loadGrid:function(){var a=this;if(a.currList===null){a.currList=a.listsStore.getAt(0).data.id}a.optionsStore.load({params:{list_id:a.currList}})},onActive:function(b){var a=this;this.listsStore.load({scope:a,callback:a.loadGrid});b(true)}});Ext.define("App.view.administration.Log",{extend:"App.classes.RenderPanel",id:"panelLog",uses:["App.classes.GridPanel"],pageTitle:i18n.event_history_log,initComponent:function(){var a=this;Ext.define("LogsModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"date",type:"string"},{name:"event",type:"auto"},{name:"user",type:"string"},{name:"facility",type:"string"},{name:"comments",type:"string"},{name:"user_notes",type:"string"},{name:"patient_id",type:"string"},{name:"success",type:"int"},{name:"checksum",type:"string"},{name:"crt_user",type:"string"}]});a.logStore=Ext.create("Ext.data.Store",{model:"LogsModel",proxy:{type:"direct",api:{read:Logs.getLogs},reader:{totalProperty:"totals",root:"rows"}},autoLoad:false});a.logGrid=Ext.create("App.classes.GridPanel",{store:a.logStore,columns:[{text:"id",sortable:false,dataIndex:"id",hidden:true},{width:120,text:"Date",sortable:true,dataIndex:"date"},{width:160,text:"User",sortable:true,dataIndex:"user"},{width:100,text:"Event",sortable:true,dataIndex:"event"},{flex:1,text:"Activity",sortable:true,dataIndex:"comments"}],listeners:{scope:this,itemclick:a.onItemclick,itemdblclick:a.onItemdblclick},tbar:Ext.create("Ext.PagingToolbar",{store:a.logStore,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:[{xtype:"button",text:i18n.view_log_event_details,iconCls:"edit",itemId:"detail",disabled:true,handler:function(){a.winLog.show()}}]})});a.winLog=Ext.create("Ext.window.Window",{title:i18n.log_event_details,width:500,closeAction:"hide",items:[{xtype:"form",bodyStyle:"padding: 10px;",autoWidth:true,border:false,hideLabels:true,defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"textfield",hidden:true,name:"id"},{fieldLabel:i18n.date,xtype:"displayfield",name:"date"},{fieldLabel:i18n.event,xtype:"displayfield",name:"event"},{fieldLabel:i18n.user,xtype:"displayfield",name:"user"},{fieldLabel:i18n.facility,xtype:"displayfield",name:"facility"},{fieldLabel:i18n.comments,xtype:"displayfield",name:"comments"},{fieldLabel:i18n.user_notes,xtype:"displayfield",name:"user_notes"},{fieldLabel:i18n.patient_id,xtype:"displayfield",name:"patient_id"},{fieldLabel:i18n.success,xtype:"displayfield",name:"success"},{fieldLabel:i18n.check_sum,xtype:"displayfield",name:"checksum"},{fieldLabel:i18n.crt_user,xtype:"displayfield",name:"crt_user"}]}],buttons:[{text:i18n.close,handler:function(){this.up("window").hide()}}]});a.pageBody=[a.logGrid];a.callParent(arguments)},onItemclick:function(b,a){var c=this.winLog.down("form"),d=this.logGrid.down("toolbar").getComponent("detail");c.getForm().loadRecord(a);d.enable()},onItemdblclick:function(b,a){var c=this.winLog.down("form");c.getForm().loadRecord(a);this.winLog.show()},onActive:function(a){this.logStore.load();a(true)}});Ext.define("App.view.administration.Medications",{extend:"App.classes.RenderPanel",id:"panelMedications",pageTitle:i18n.medications,initComponent:function(){var a=this;a.query="";a.storeMedications=Ext.create("App.store.administration.Medications");a.medicationsGrid=Ext.create("App.classes.GridPanel",{region:"center",store:a.storeMedications,columns:[{width:70,header:i18n.number,dataIndex:"PRODUCTNDC",sortable:true},{width:80,header:i18n.name,dataIndex:"PROPRIETARYNAME",sortable:true},{width:200,header:i18n.active_component,dataIndex:"NONPROPRIETARYNAME",sortable:true},{width:175,header:i18n.dosage,dataIndex:"DOSAGEFORMNAME",sortable:true},{width:45,header:i18n.number,dataIndex:"ACTIVE_NUMERATOR_STRENGTH",sortable:true},{flex:1,header:i18n.unit,dataIndex:"ACTIVE_INGRED_UNIT",sortable:true}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,enableRemove:true,formItems:[{title:"general",xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:i18n.name,width:150,labelWidth:50,name:"PROPRIETARYNAME"},{xtype:"textfield",fieldLabel:i18n.active_component,width:350,labelWidth:125,name:"NONPROPRIETARYNAME"},{xtype:"textfield",fieldLabel:i18n.dosage,width:200,labelWidth:50,name:"DOSAGEFORMNAME"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:i18n.code,labelWidth:50,width:150,name:"PRODUCTNDC"},{xtype:"textfield",fieldLabel:i18n.dosis,margin:"0 0 5 0",value:0,minValue:0,width:275,labelWidth:125,name:"ACTIVE_NUMERATOR_STRENGTH"},{xtype:"textfield",name:"ACTIVE_INGRED_UNIT",width:75}]}]}]}),tbar:Ext.create("Ext.PagingToolbar",{store:a.storeMedications,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{text:"Add New",scope:a,handler:a.onAddMedication},"-",{xtype:"textfield",emptyText:i18n.search,enableKeyEvents:true,itemId:"query",listeners:{scope:a,keyup:a.onSearchMedications,buffer:500}},"-",{text:i18n.reset,scope:a,handler:a.onFieldReset}]})});a.pageBody=[a.medicationsGrid];a.callParent(arguments)},onFieldReset:function(){},onAddMedication:function(){this.medicationsGrid.editingPlugin.cancelEdit();this.storeMedications.insert(0,{});this.medicationsGrid.editingPlugin.startEdit(0,0)},onSearchMedications:function(c){var b=this,a=b.storeMedications;b.query=c.getValue();a.proxy.extraParams={query:b.query};a.load()},onActive:function(){this.medicationsGrid.down("toolbar").getComponent("query").reset();this.storeMedications.proxy.extraParams={};this.storeMedications.load()}});Ext.define("App.view.administration.FloorPlans",{extend:"App.classes.RenderPanel",id:"panelFloorPlans",pageTitle:i18n.floor_plan_editor,pageLayout:"border",floorPlanId:null,activeZone:null,initComponent:function(){var a=this;a.floorPlansStore=Ext.create("App.store.administration.FloorPlans",{autoLoad:true});a.floorPlanZonesStore=Ext.create("App.store.administration.FloorPlanZones");a.floorPlans=Ext.create("Ext.grid.Panel",{title:i18n.floor_plans,region:"west",width:200,split:true,hideHeaders:true,store:a.floorPlansStore,plugins:[a.floorPlanEditing=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2})],columns:[{dataIndex:"title",sortable:false,hideable:false,flex:1,editor:{xtype:"textfield"}}],tbar:["->",{text:i18n.add_floor_plan,action:"newFloorPlan",scope:a,handler:a.onNewFloorPlan}],listeners:{scope:a,select:a.onFloorPlanSelected}});a.floorPlan=Ext.create("Ext.panel.Panel",{title:i18n.floor_plan,region:"center",bodyCls:"floorPlan",layout:"absolute",tbar:["->",{text:i18n.add_zone,action:"newZone",scope:a,handler:a.onNewZone}]});a.listeners={show:function(){a.nav=Ext.create("Ext.util.KeyNav",Ext.getDoc(),{scope:a,left:function(){a.moveZone("left")},up:function(){a.moveZone("up")},right:function(){a.moveZone("right")},down:function(){a.moveZone("down")}})},hide:function(){if(a.nav){Ext.destroy(a.nav)}}};a.pageBody=[a.floorPlans,a.floorPlan];a.callParent(arguments)},onNewZone:function(){this.createZone(null)},createZone:function(b){var d=this,a,c;a=Ext.create("Ext.button.Split",{text:b?b.data.title:i18n.new_zone,toggleGroup:"zones",draggable:{listeners:{scope:d,dragend:d.zoneDragged}},scale:"medium",x:b?b.data.x:0,y:b?b.data.y:0,enableToggle:true,toggleHandler:function(e,f){if(f){d.activeZone=a;d.floorPlan.focus()}else{d.activeZone=null;var g=e.menu.items.items[0].getForm().getRecord();g.set({x:e.x,y:e.y})}},menu:[c=Ext.create("Ext.form.Panel",{bodyPadding:"5 5 0 5",items:[{xtype:"textfield",fieldLabel:i18n.zone_name,labelWidth:80,name:"title"}]})],listeners:{scope:d,menushow:d.afterMenuShow,menuhide:d.afterMenuHide}});d.floorPlan.add(a);if(b!=null){c.getForm().loadRecord(b)}else{d.floorPlanZonesStore.add({floor_plan_id:d.floorPlanId,title:i18n.new_zone,x:0,y:0,active:1});d.floorPlanZonesStore.sync({callback:function(f,e){c.getForm().loadRecord(f.operations[0].records[0])}})}},afterMenuShow:function(a){a.toggle(true)},afterMenuHide:function(b){var c=b.menu.items.items[0].getForm(),a=c.getValues(),d=c.getRecord();b.setText(a.title);d.set(a)},moveZone:function(b){if(app.currCardCmp==this&&this.activeZone!=null){var a=this.activeZone.x,c=this.activeZone.y;if(b=="left"){a=a-1}else{if(b=="right"){a=a+1}else{if(b=="up"){c=c-1}else{if(b=="down"){c=c+1}}}}this.activeZone.setPosition(a,c)}},zoneDragged:function(a){var b=this,c=a.comp.menu.items.items[0].getForm().getRecord();c.set({x:a.comp.x,y:a.comp.y})},onNewFloorPlan:function(){this.floorPlansStore.add({title:i18n.new_floor_plan})},onFloorPlanSelected:function(b,a){this.floorPlanId=a.data.id;this.reloadFloorPlanZones()},reloadFloorPlanZones:function(){var a=this;a.floorPlan.removeAll();a.floorPlanZonesStore.load({params:{floor_plan_id:this.floorPlanId},scope:a,callback:function(c,b,e){this.activeZone=null;for(var d=0;d<c.length;d++){a.createZone(c[d])}}})},onActive:function(b){var a=this;a.floorPlans.getSelectionModel().select(0);b(true)}});Ext.define("App.view.administration.Practice",{extend:"App.classes.RenderPanel",id:"panelPractice",pageTitle:i18n.practice_settings,uses:["App.classes.combo.Titles","App.classes.combo.TransmitMethod","App.classes.combo.InsurancePayerType"],initComponent:function(){var b=this;Ext.define("pharmacyGridModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"transmit_method",type:"string"},{name:"email",type:"string"},{name:"address_id",type:"int"},{name:"line1",type:"string"},{name:"line2",type:"string"},{name:"city",type:"string"},{name:"state",type:"string"},{name:"zip",type:"string"},{name:"plus_four",type:"string"},{name:"country",type:"string"},{name:"address_full",type:"string"},{name:"phone_id",type:"int"},{name:"phone_country_code",type:"string"},{name:"phone_area_code",type:"string"},{name:"phone_prefix",type:"string"},{name:"phone_number",type:"string"},{name:"phone_full",type:"string"},{name:"fax_id",type:"int"},{name:"fax_country_code",type:"string"},{name:"fax_area_code",type:"string"},{name:"fax_prefix",type:"string"},{name:"fax_number",type:"string"},{name:"fax_full",type:"string"},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:Practice.getPharmacies,create:Practice.addPharmacy,update:Practice.updatePharmacy}}});b.pharmacyStore=Ext.create("Ext.data.Store",{model:"pharmacyGridModel",remoteSort:false,autoSync:true});Ext.define("insuranceGridModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"attn",type:"string"},{name:"cms_id",type:"string"},{name:"freeb_type",type:"string"},{name:"x12_receiver_id",type:"string"},{name:"x12_default_partner_id",type:"string"},{name:"alt_cms_id",type:"string"},{name:"address_id",type:"int"},{name:"line1",type:"string"},{name:"line2",type:"string"},{name:"city",type:"string"},{name:"state",type:"string"},{name:"zip",type:"string"},{name:"plus_four",type:"string"},{name:"country",type:"string"},{name:"address_full",type:"string"},{name:"phone_id",type:"int"},{name:"phone_country_code",type:"string"},{name:"phone_area_code",type:"string"},{name:"phone_prefix",type:"string"},{name:"phone_number",type:"string"},{name:"phone_full",type:"string"},{name:"fax_id",type:"int"},{name:"fax_country_code",type:"string"},{name:"fax_area_code",type:"string"},{name:"fax_prefix",type:"string"},{name:"fax_number",type:"string"},{name:"fax_full",type:"string"},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:Practice.getInsurances,create:Practice.addInsurance,update:Practice.updateInsurance}}});b.insuranceStore=Ext.create("Ext.data.Store",{model:"insuranceGridModel",remoteSort:false,autoSync:true});function a(c){if(c=="1"){return"Print"}else{if(c=="2"){return"Email"}else{if(c=="3"){return"Email"}}}return c}b.rowEditingPharmacy=Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{xtype:"container",layout:"hbox",width:900,items:[{xtype:"container",width:450,layout:"anchor",items:[{xtype:"textfield",fieldLabel:i18n.name,name:"name",allowBlank:false,width:385},{xtype:"textfield",fieldLabel:i18n.address,name:"line1",width:385},{xtype:"textfield",fieldLabel:i18n.address_cont,name:"line2",width:385},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:true},items:[{xtype:"displayfield",width:105,value:i18n.city_state_zip},{xtype:"textfield",width:150,name:"city"},{xtype:"displayfield",width:5,value:","},{xtype:"textfield",width:50,name:"state"},{xtype:"textfield",width:75,name:"zip"}]}]},{xtype:"container",width:300,layout:"anchor",items:[{xtype:"textfield",fieldLabel:i18n.email,name:"email",width:275},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:true},items:[{xtype:"displayfield",width:100,value:i18n.phone},{xtype:"displayfield",width:5,value:"("},{xtype:"textfield",width:40,name:"phone_area_code"},{xtype:"displayfield",width:5,value:")"},{xtype:"textfield",width:50,name:"phone_prefix"},{xtype:"displayfield",width:5,value:"-"},{xtype:"textfield",width:70,name:"phone_number"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:true},items:[{xtype:"displayfield",width:100,value:i18n.fax},{xtype:"displayfield",width:5,value:"("},{xtype:"textfield",width:40,name:"fax_area_code"},{xtype:"displayfield",width:5,value:")"},{xtype:"textfield",width:50,name:"fax_prefix"},{xtype:"displayfield",width:5,value:"-"},{xtype:"textfield",width:70,name:"fax_number"}]},{xtype:"transmitmethodcombo",fieldLabel:i18n.default_method,labelWidth:100,width:275}]},{xtype:"mitos.checkbox",fieldLabel:i18n.active,labelWidth:60,name:"active"}]}]});b.rowEditingInsurance=Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,formItems:[{xtype:"container",layout:"hbox",width:900,items:[{xtype:"container",width:450,layout:"anchor",items:[{xtype:"textfield",fieldLabel:i18n.name,name:"name",allowBlank:false,width:385},{xtype:"textfield",fieldLabel:i18n.address,name:"line1",width:385},{xtype:"textfield",fieldLabel:i18n.address_cont,name:"line2",width:385},{xtype:"fieldcontainer",defaults:{hideLabel:true},layout:"hbox",items:[{xtype:"displayfield",width:105,value:i18n.city_state_zip},{xtype:"textfield",width:150,name:"city"},{xtype:"displayfield",width:5,value:","},{xtype:"textfield",width:50,name:"state"},{xtype:"textfield",width:75,name:"zip"}]}]},{xtype:"container",width:300,layout:"anchor",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:true},items:[{xtype:"displayfield",width:100,value:i18n.phone},{xtype:"displayfield",width:5,value:"("},{xtype:"textfield",width:40,name:"phone_area_code"},{xtype:"displayfield",width:5,value:")"},{xtype:"textfield",width:50,name:"phone_prefix"},{xtype:"displayfield",width:5,value:"-"},{xtype:"textfield",width:70,name:"phone_number"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:true},items:[{xtype:"displayfield",width:100,value:i18n.fax},{xtype:"displayfield",width:5,value:"("},{xtype:"textfield",width:40,name:"fax_area_code"},{xtype:"displayfield",width:5,value:")"},{xtype:"textfield",width:50,name:"fax_prefix"},{xtype:"displayfield",width:5,value:"-"},{xtype:"textfield",width:70,name:"fax_number"}]},{xtype:"textfield",fieldLabel:i18n.cms_id,name:"cms_id",width:275},{xtype:"mitos.insurancepayertypecombo",fieldLabel:i18n.payer_type,labelWidth:100,width:275},{xtype:"textfield",fieldLabel:"X12 Partner",name:"x12_default_partner_id"}]},{xtype:"checkbox",fieldLabel:i18n.active,labelWidth:60,name:"active"}]}]});b.pharmacyGrid=Ext.create("Ext.grid.Panel",{title:i18n.pharmacies,store:b.pharmacyStore,border:false,frame:false,viewConfig:{stripeRows:true},plugins:[b.rowEditingPharmacy],columns:[{header:i18n.pharmacy_name,width:150,sortable:true,dataIndex:"name"},{header:i18n.address,flex:1,sortable:true,dataIndex:"address_full"},{header:i18n.phone,width:120,sortable:true,dataIndex:"phone_full"},{header:i18n.Fax,width:120,sortable:true,dataIndex:"fax_full"},{header:i18n.default_method,flex:1,sortable:true,dataIndex:"transmit_method",renderer:a},{header:i18n.active,width:55,sortable:true,dataIndex:"active",renderer:b.boolRenderer}],tbar:[{text:i18n.add_new_pharmacy,iconCls:"save",action:"pharmacyGridModel",scope:b,handler:b.onNewRec}]});b.insuranceGrid=Ext.create("Ext.grid.Panel",{title:i18n.insurance_companies,store:b.insuranceStore,border:false,frame:false,viewConfig:{stripeRows:true},plugins:[b.rowEditingInsurance],columns:[{header:i18n.insurance_name,width:150,sortable:true,dataIndex:"name"},{header:i18n.address,flex:1,sortable:true,dataIndex:"address_full"},{header:i18n.Phone,width:120,sortable:true,dataIndex:"phone_full"},{header:i18n.fax,width:120,sortable:true,dataIndex:"fax_full"},{header:i18n.default_x12_partner,flex:1,sortable:true,dataIndex:"x12_default_partner_id"},{header:i18n.active,width:55,sortable:true,dataIndex:"active",renderer:b.boolRenderer}],tbar:[{text:i18n.add_new_insurance,iconCls:"save",action:"insuranceGridModel",scope:b,handler:b.onNewRec}]});b.x12ParnersGrid=Ext.create("Ext.grid.Panel",{title:i18n.x12_partners_clearing_houses,border:false,frame:false,viewConfig:{stripeRows:true},columns:[{text:i18n.name,flex:1,sortable:true,dataIndex:"name"},{text:i18n.sender_id,flex:1,width:100,sortable:true,dataIndex:"phone"},{text:i18n.receiver_id,flex:1,width:100,sortable:true,dataIndex:"phone"},{text:i18n.version,flex:1,width:100,sortable:true,dataIndex:"phone"}]});b.praticePanel=Ext.create("Ext.tab.Panel",{activeTab:0,items:[b.pharmacyGrid,b.insuranceGrid,b.x12ParnersGrid,{title:i18n.hl7_viewer,frame:false,border:false,items:[{}],tbar:[{xtype:"button",text:i18n.clear_hl7_data,iconCls:"save",handler:function(){b.onWinOpen()}},"-",{xtype:"button",text:i18n.parse_hl7,iconCls:"save",handler:function(){b.onWinOpen()}}]}]});b.pageBody=[b.praticePanel];b.callParent(arguments)},onNewRec:function(e){var g=this,d=e.up("grid"),a=d.store,b=e.action,f=d.editingPlugin,c;say(d);say(f);say(b);f.cancelEdit();c=Ext.ModelManager.create({active:1},b);say(c);a.insert(0,c);f.startEdit(0,0)},onActive:function(a){this.pharmacyStore.load();this.insuranceStore.load();a(true)}});Ext.define("App.view.administration.PreventiveCare",{extend:"App.classes.RenderPanel",id:"panelPreventiveCare",pageTitle:i18n.preventive_care,uses:["App.classes.GridPanel","App.classes.combo.CodesTypes","App.classes.combo.Titles"],initComponent:function(){var b=this;b.active=1;b.dataQuery="";b.category_id="3";b.store=Ext.create("App.store.administration.PreventiveCare");b.activeProblemsStore=Ext.create("App.store.administration.PreventiveCareActiveProblems");b.medicationsStore=Ext.create("App.store.administration.PreventiveCareMedications");b.labsStore=Ext.create("App.store.administration.PreventiveCareLabs");function a(c){if(c=="1"){return"CPT4"}else{if(c=="2"){return"ICD9"}else{if(c=="3"){return"HCPCS"}else{if(c=="100"){return"CVX"}}}}return c}b.guidelineGrid=Ext.create("App.classes.GridPanel",{region:"center",store:b.store,columns:[{xtype:"actioncolumn",width:30,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,handler:function(d,f,c){var e=d.getStore().getAt(f)},getClass:function(){return"x-grid-icon-padding"}}]},{flex:1,header:i18n.description,sortable:true,dataIndex:"description"},{width:100,header:i18n.age_start,sortable:true,dataIndex:"age_start"},{width:100,header:i18n.age_end,sortable:true,dataIndex:"age_end"},{width:100,header:i18n.sex,sortable:true,dataIndex:"sex"},{width:100,header:i18n.frequency,sortable:true,dataIndex:"frequency"}],plugins:Ext.create("App.classes.grid.RowFormEditing",{autoCancel:false,errorSummary:false,clicksToEdit:1,listeners:{scope:b,beforeedit:b.beforeServiceEdit,edit:b.onServiceEdit,canceledit:b.onServiceCancelEdit},formItems:[{xtype:"tabpanel",action:i18n.immunizations,layout:"fit",plain:true,listeners:{scope:b,tabchange:b.onFormTapChange},items:[{title:i18n.general,xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:i18n.description,name:"description",labelWidth:130,width:703},{xtype:"mitos.sexcombo",fieldLabel:i18n.sex,name:"sex",width:100,labelWidth:30},{fieldLabel:i18n.active,xtype:"checkboxfield",labelWidth:75,name:"active"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"mitos.codestypescombo",fieldLabel:i18n.coding_system,labelWidth:130,value:"CVX",name:"coding_system",readOnly:true},{xtype:"numberfield",fieldLabel:i18n.frequency,margin:"0 0 5 0",value:0,minValue:0,width:150,name:"frequency"},{xtype:"mitos.timecombo",name:"frequency_time",width:100},{xtype:"numberfield",fieldLabel:i18n.age_start,name:"age_start",labelWidth:75,width:140,value:0,minValue:0},{fieldLabel:i18n.must_be_pregnant,xtype:"checkboxfield",labelWidth:105,name:"pregnant"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:i18n.code,name:"code",labelWidth:130},{xtype:"numberfield",fieldLabel:i18n.times_to_perform,name:"times_to_perform",width:250,value:0,minValue:0,tooltip:i18n.greater_than_1_or_just_check_perform_once},{xtype:"numberfield",fieldLabel:i18n.age_end,name:"age_end",labelWidth:75,width:140,value:0,minValue:0},{fieldLabel:i18n.perform_only_once,xtype:"checkboxfield",labelWidth:105,name:"only_once"}]}]},{title:i18n.active_problems,action:"problems",xtype:"grid",margin:5,store:b.activeProblemsStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:b,handler:b.onRemoveRelation}]},{header:i18n.code,width:100,dataIndex:"code"},{header:i18n.description,flex:1,dataIndex:"code_text"}],bbar:{xtype:"liveicdxsearch",margin:5,fieldLabel:i18n.add_problem,hideLabel:false,listeners:{scope:b,select:b.addActiveProblem}}},{title:i18n.medications,action:"medications",xtype:"grid",width:300,store:b.medicationsStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:b,handler:b.onRemoveRelation}]},{header:i18n.code,width:100,dataIndex:"code"},{header:i18n.description,flex:1,dataIndex:"code_text"}],bbar:{xtype:"medicationlivetsearch",margin:5,fieldLabel:i18n.add_problem,hideLabel:false,listeners:{scope:b,select:b.addMedications}}},{title:i18n.labs,action:"labs",xtype:"grid",store:b.labsStore,width:300,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:i18n.remove,scope:b,handler:b.onRemoveRelation}]},{header:i18n.value_name,flex:1,dataIndex:"value_name"},{header:i18n.less_than,flex:1,dataIndex:"less_than",editor:{xtype:"numberfield"}},{header:i18n.greater_than,flex:1,dataIndex:"greater_than",editor:{xtype:"numberfield"}},{header:i18n.equal_to,flex:1,dataIndex:"equal_to",editor:{xtype:"numberfield"}}],plugins:Ext.create("Ext.grid.plugin.CellEditing",{autoCancel:true,errorSummary:false,clicksToEdit:2,listeners:{scope:b,edit:b.afterLabTimeEdit}}),bbar:{xtype:"labslivetsearch",margin:5,fieldLabel:i18n.add_labs,hideLabel:false,listeners:{scope:b,select:b.addLabs}}}]}]}),tbar:b.PagingToolbar=Ext.create("Ext.PagingToolbar",{store:b.store,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{xtype:"mitos.preventivecaretypescombo",width:150,listeners:{scope:b,select:b.onCodeTypeSelect}}]})});b.pageBody=[b.guidelineGrid];b.callParent(arguments)},onServiceEdit:function(a,b){},onServiceCancelEdit:function(a,b){},afterLabTimeEdit:function(a,b){},beforeServiceEdit:function(b,f){var c=b.editor,d=c.query("grid");for(var a=0;a<d.length;a++){d[a].store.load({params:{id:f.record.data.id}})}},onFormTapChange:function(b,a,c){},onCodeTypeSelect:function(c,a){var b=this;b.category_id=a[0].data.option_value;if(b.category_id=="dismiss"){}else{b.PagingToolbar.moveFirst();b.store.proxy.extraParams={category_id:b.category_id};b.store.load()}},addActiveProblem:function(b,a){this.activeProblemsStore.add({code:a[0].data.code,code_text:a[0].data.code_text,guideline_id:this.getSelectId()});b.reset()},addMedications:function(b,a){this.medicationsStore.add({code:a[0].data.id,code_text:a[0].data.PROPRIETARYNAME,guideline_id:this.getSelectId()});b.reset()},addLabs:function(b,a){this.labsStore.add({code:a[0].data.loinc_number,value_name:a[0].data.loinc_name,less_than:"0",greater_than:"0",equal_to:"0",preventive_care_id:this.getSelectId()});b.reset()},onRemoveRelation:function(d,f,c){var e=this,b=d.getStore(),a=b.getAt(f);b.remove(a)},getSelectId:function(){var a=this.guidelineGrid.getSelectionModel().getLastSelected();return a.data.id},onActive:function(a){this.guidelineGrid.query("combobox")[0].setValue(this.category_id);this.store.proxy.extraParams={category_id:this.category_id};this.store.load();a(true)}});Ext.define("App.view.administration.Roles",{extend:"App.classes.RenderPanel",id:"panelRoles",pageTitle:i18n.roles_and_permissions,pageLayout:{type:"vbox",align:"stretch"},initComponent:function(){var a=this;a.header=Ext.create("Ext.container.Container",{height:30,html:'<div class="roleHeader"><span class="perm">'+i18n.permission+'</span><span class="role">'+i18n.front_office+'</span><span class="role">'+i18n.auditors+'</span><span class="role">'+i18n.clinician+'</span><span class="role">'+i18n.physician+'</span><span class="role">'+i18n.administrator+"</span></div>"});a.form=Ext.create("Ext.form.Panel",{flex:1,frame:true,bodyStyle:"background-color:white",bodyPadding:10,items:[{xtype:"fieldcontainer",defaultType:"mitos.checkbox",layout:"hbox"}],buttons:[{text:i18n.save,iconCls:"save",margin:"0 20 0 0",scope:a,handler:a.onSave}]});a.pageBody=[a.header,a.form];a.callParent(arguments)},onSave:function(){var d=this,c=d.form.getForm(),b=c.getValues(),a=c.getRecord(),e;if(a.set(b)!==null){d.form.el.mask(i18n.saving_roles+"...");e=a.getChanges();Roles.saveRolesData(e,function(g,f){if(f.result){d.form.el.unmask();d.msg("Sweet!",i18n.roles_updated);a.commit()}})}},getFormData:function(){var f=this,e=f.form,d=e.getForm().getFields(),a=[],b;for(var c=0;c<d.items.length;c++){a.push({name:d.items[c].name,type:"bool"})}b=Ext.define(e.itemId+"Model",{extend:"Ext.data.Model",fields:a,proxy:{type:"direct",api:{read:Roles.getRolesData}}});f.store=Ext.create("Ext.data.Store",{model:b});f.store.load({scope:this,callback:function(h,g,i){if(i){e.getForm().loadRecord(h[0]);e.el.unmask()}}})},onActive:function(callback){var me=this,form=me.form;form.el.mask(i18n.loading+"...");form.removeAll();Roles.getRoleForm(null,function(provider,response){form.add(eval(response.result));me.getFormData()});callback(true)}});Ext.define("App.view.administration.ExternalDataLoads",{extend:"App.classes.RenderPanel",id:"panelExternalDataLoads",pageTitle:i18n.external_data_loads,pageLayout:{type:"accordion",animate:true,activeOnTop:true},initComponent:function(){var a=this;a.stores=[];a.stores.push(a.icd9Store=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"ICD9"}));a.stores.push(a.icd10Store=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"ICD10",groupField:"version"}));a.stores.push(a.rxnormStore=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"RXNORM"}));a.stores.push(a.snomedStore=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"SNOMED"}));a.icd9Grid=a.getCodeGrid("Available ICD9 Data",a.icd9Store,false);a.icd10Grid=a.getCodeGrid("Available ICD10 Data",a.icd10Store,true);a.rxnormGrid=a.getCodeGrid("Available RxNorm Data",a.rxnormStore,false);a.snomedGrid=a.getCodeGrid("Available SNOMED Data",a.snomedStore,false);a.icd9Form=a.getCodeForm("ICD9");a.icd10Form=a.getCodeForm("ICD10");a.rxnormForm=a.getCodeForm("RXNORM");a.snomedForm=a.getCodeForm("SNOMED");a.icd9=Ext.create("Ext.form.Panel",{title:i18n.update_icd9,layout:"border",items:[a.icd9Grid,a.icd9Form]});a.icd10=Ext.create("Ext.panel.Panel",{title:i18n.update_icd10,layout:"border",items:[a.icd10Grid,a.icd10Form]});a.rxnorm=Ext.create("Ext.panel.Panel",{title:i18n.update_rxnorm,layout:"border",items:[a.rxnormGrid,a.rxnormForm]});a.snomed=Ext.create("Ext.panel.Panel",{title:i18n.update_snomed,layout:"border",items:[a.snomedGrid,a.snomedForm]});a.pageBody=[a.icd9,a.icd10,a.rxnorm,a.snomed];a.callParent(arguments)},getCodeForm:function(b){var a=this;return Ext.create("Ext.form.Panel",{bodyPadding:10,region:"center",action:b,frame:true,bodyStyle:"background-color:white",bodyBorder:true,margin:"5 0 5 0",items:[{xtype:"fieldset",styleHtmlContent:true,action:b,title:i18n.current_version_installed,html:i18n.no_data_installed,tpl:i18n.revivion_name+":  {revision_name}<br>"+i18n.revision_number+":  {revision_number}<br>"+i18n.revision_version+": {revision_version}<br>"+i18n.revision_date+":    {revision_date}<br>"+i18n.imported_on+":      {imported_date}"},{xtype:"fieldset",title:i18n.installation,action:"installation",styleHtmlContent:true,html:a.getInstallationDetails(b)},{xtype:"fieldset",title:i18n.upload,action:"upload",items:[{xtype:"filefield",name:"filePath",buttonText:i18n["Select file"]+"...",emptyText:i18n.data_file,width:350,labelWidth:50,allowBlank:false}]}],api:{submit:ExternalDataUpdate.updateCodesWithUploadFile},buttons:[{text:i18n.update,action:b,scope:a,handler:a.uploadFile}]})},getCodeGrid:function(d,a,c){var b=this;return Ext.create("Ext.grid.Panel",{title:d,store:a,region:"west",width:500,margin:"5 0 5 0",padding:0,split:true,columns:b.getDefaultColumns(),listeners:{scope:b,itemdblclick:b.onCodeDblClick},features:c?[{ftype:"grouping"}]:[]})},getDefaultColumns:function(){return[{header:i18n.date,dataIndex:"date",width:98},{header:i18n.version,dataIndex:"version",width:98},{header:i18n.file,dataIndex:"basename",width:300}]},getInstallationDetails:function(a){if(a=="ICD9"){return'<p>Steps to install the ICD 9 database:</p><ol><li>The raw data feed release can be obtained from <a href="https://www.cms.gov/Medicare/Coding/ICD9ProviderDiagnosticCodes/codes.html">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded ICD 9 database zip file into the following directory: contrib/icd9</li><li>Double Click the zip file from the "Available ICD9 Data" grid to install</li></ol><p style="color:red">NOTE: Importing external data can take more than an hour depending on your hardware configuration. For example, one of the RxNorm data tables contain in excess of 6 million rows.</p>'}else{if(a=="ICD10"){return'<p>Steps to install the ICD 10 database:</p><ol><li>The raw data feed release can be obtained from <a href="https://www.cms.gov/Medicare/Coding/ICD10">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded ICD 10 database zip files into the following directory: contrib/icd10</li><li>Double Click the zip file from the "Available ICD10 Data" grid to install</li></ol><p>These are the ICD10 2012 links:</p><ol><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/DiagnosisGEMs_2012.zip">DiagnosisGEMs_2012</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/ProcedureGEMs_2012.zip">ProcedureGEMs_2012</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/ReimbursementMapping_2012.zip">ReimbursementMapping_2012</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/2012_PCS_long_and_abbreviated_titles.zip">2012_PCS_long_and_abbreviated_titles</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/ICD10OrderFiles_2012.zip">ICD10OrderFiles_2012</a></li></ol><p style="color:red">NOTE: Importing external data can take more than an hour depending on your hardware configuration. For example, one of the RxNorm data tables contain in excess of 6 million rows.</p>'}else{if(a=="RXNORM"){return'<p>Steps to install the RxNorm database:</p><ol><li>The first step is to open an account with the Unified Medical Language System web site <a href="https://utslogin.nlm.nih.gov/cas/login">here</a></li><li>Then the raw data feed release can be obtained from <a href="http://www.nlm.nih.gov/research/umls/rxnorm/docs/rxnormfiles.html">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded RxNorm database zip file into the following directory: contrib/rxnorm.</li><li>Double Click the zip file from the "Available RxNorm Data" grid to install</li></ol><p style="color:red">NOTE: Only the full monthly RxNorm release is currently supported</p>'}else{if(a=="SNOMED"){return"Lorem ipsum dolor sit amet, porta nam suscipit sed id, vestibulum velit tortor velit viverra, non enim justo, purus nec, libero sociis lobortis, eu et leo mauris velit. Magnis tellus blandit fringilla, morbi mauris commodo, nec morbi ac non"}}}}},uploadFile:function(a){var c=this,b=a.up("form").getForm();if(b.isValid()){b.submit({waitMsg:i18n.uploading_and_updating_code_database+"...",scope:c,params:{codeType:a.action},success:function(d,e){say(e.result)},failure:function(d,e){say(e.result)}})}},onCodeDblClick:function(b,a){var c=this;app.setTask(false);b.el.mask(i18n.installing_database_please_wait+"...");ExternalDataUpdate.updateCodes(a.data,function(e,d){b.el.unmask();if(d.result.success){c.setCurrentCodesInfo();c.alert(i18n.new_database_installed,"info")}else{c.alert(d.result.error,"error")}app.setTask(true)})},setCurrentCodesInfo:function(){var c=this,b,a;ExternalDataUpdate.getCurrentCodesInfo(function(f,d){b=d.result;for(var e=0;e<b.length;e++){if(b[e].data!==false){a=c.query('fieldset[action="'+b[e].data.codeType+'"]')[0];a.update(b[e].data)}}})},loadStores:function(){var b=this;for(var a=0;a<b.stores.length;a++){b.stores[a].load({params:{pid:b.pid}})}},onActive:function(a){this.loadStores();this.setCurrentCodesInfo();a(true)}});Ext.define("App.view.administration.Users",{extend:"App.classes.RenderPanel",id:"panelUsers",pageTitle:i18n.users,uses:["App.classes.GridPanel"],initComponent:function(){var b=this;Ext.define("UserModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"username",type:"string"},{name:"password",type:"auto"},{name:"authorized",type:"bool"},{name:"active",type:"bool"},{name:"info",type:"string"},{name:"source",type:"int"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"fullname",type:"string"},{name:"federaltaxid",type:"string"},{name:"federaldrugid",type:"string"},{name:"upin",type:"string"},{name:"facility_id",type:"int"},{name:"see_auth",type:"bool"},{name:"active",type:"bool"},{name:"npi",type:"string"},{name:"title",type:"string"},{name:"specialty",type:"string"},{name:"cal_ui",type:"string"},{name:"taxonomy",type:"string"},{name:"calendar",type:"bool"},{name:"abook_type",type:"string"},{name:"default_warehouse",type:"string"},{name:"role_id",type:"int"}]});b.userStore=Ext.create("Ext.data.Store",{model:"UserModel",proxy:{type:"direct",api:{read:User.getUsers,create:User.addUser,update:User.updateUser}},autoLoad:false});function a(c){if(c=="1"){return'<img src="resources/images/icons/yes.gif" />'}else{if(c=="0"){return'<img src="resources/images/icons/no.gif" />'}}return c}b.userGrid=Ext.create("App.classes.GridPanel",{store:b.userStore,columns:[{text:"id",sortable:false,dataIndex:"id",hidden:true},{width:100,text:i18n.username,sortable:true,dataIndex:"username"},{width:200,text:i18n.name,sortable:true,dataIndex:"fullname"},{flex:1,text:i18n.aditional_info,sortable:true,dataIndex:"info"},{text:i18n.active,sortable:true,dataIndex:"active",renderer:a},{text:i18n.authorized,sortable:true,dataIndex:"authorized",renderer:a},{text:i18n.calendar_q,sortable:true,dataIndex:"calendar",renderer:a}],listeners:{scope:b,itemdblclick:function(d,c){b.onItemdblclick(b.userStore,c,i18n.edit_user)}},dockedItems:[{xtype:"toolbar",dock:"top",items:[{xtype:"button",text:i18n.add_new_user,iconCls:"save",handler:function(){var c=b.win.down("form");b.onNew(c,"UserModel",i18n.add_new_user)}}]}]});b.win=Ext.create("App.classes.window.Window",{width:600,items:[{xtype:"mitos.form",fieldDefaults:{msgTarget:"side",labelWidth:100},defaultType:"textfield",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"textfield",hidden:true,name:"id"},{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:100,xtype:"displayfield",value:i18n.username+": "},{width:100,xtype:"textfield",name:"username",allowBlank:false},{width:100,xtype:"displayfield",value:i18n.password+": "},{width:105,xtype:"textfield",name:"password",inputType:"password"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:100,xtype:"displayfield",value:i18n.first_middle_last},{width:50,xtype:"mitos.titlescombo",name:"title"},{width:80,xtype:"textfield",name:"fname",allowBlank:false},{width:65,xtype:"textfield",name:"mname"},{width:105,xtype:"textfield",name:"lname"}]},{xtype:"fieldcontainer",msgTarget:"under",items:[{width:150,xtype:"mitos.checkbox",fieldLabel:i18n.active,name:"active"},{width:150,xtype:"mitos.checkbox",fieldLabel:i18n.authorized,name:"authorized"},{width:150,xtype:"mitos.checkbox",fieldLabel:i18n.calendar_q,name:"calendar"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:100,xtype:"displayfield",value:i18n.default_facility+": "},{width:100,xtype:"mitos.facilitiescombo",name:"facility_id"},{width:100,xtype:"displayfield",value:i18n.authorizations+": "},{width:105,xtype:"mitos.authorizationscombo",name:"see_auth"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:100,xtype:"displayfield",value:i18n.access_control+": "},{width:100,xtype:"mitos.rolescombo",name:"role_id",allowBlank:false},{width:100,xtype:"displayfield",value:i18n.taxonomy+": "},{width:105,xtype:"textfield",name:"taxonomy"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:100,xtype:"displayfield",value:i18n.federal_tax_id+": "},{width:100,xtype:"textfield",name:"federaltaxid"},{width:100,xtype:"displayfield",value:i18n.fed_drug_id+": "},{width:105,xtype:"textfield",name:"federaldrugid"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:100,xtype:"displayfield",value:i18n.upin+": "},{width:100,xtype:"textfield",name:"upin"},{width:100,xtype:"displayfield",value:i18n.npi+": "},{width:105,xtype:"textfield",name:"npi"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:100,xtype:"displayfield",value:i18n.job_description+": "},{width:315,xtype:"textfield",name:"specialty"}]},{width:410,height:50,xtype:"textfield",name:"info",emptyText:i18n.additional_info}]}],buttons:[{text:i18n.save,cls:"winSave",handler:function(){var c=b.win.down("form").getForm();if(c.isValid()){b.onSave(c,b.userStore)}}},"-",{text:i18n.cancel,scope:b,handler:function(c){c.up("window").close()}}],listeners:{scope:b,close:function(){b.action("close")}}});b.pageBody=[b.userGrid];b.callParent(arguments)},onNew:function(c,a,d){this.setForm(c,d);c.getForm().reset();var b=Ext.ModelManager.create({},a);c.getForm().loadRecord(b);this.action("new");this.win.show()},onSave:function(d,a){var c=this,b=d.findField("password").getValue(),e=d.findField("id").getValue();if(b!=""){User.chechPasswordHistory({password:b,id:e},function(g,f){if(f.result.error){Ext.Msg.alert("Opps!",i18n.password_currently_used)}else{c.saveUser(d,a)}})}else{c.saveUser(d,a)}},saveUser:function(d,c){var a=d.getRecord(),b=d.getValues(),e=c.indexOf(a);if(e==-1){c.add(b)}else{a.set(b)}c.sync();this.win.close()},onItemdblclick:function(b,a,d){var c=this.win.down("form");this.setForm(c,d);c.getForm().loadRecord(a);this.action("old");this.win.show()},setForm:function(a,b){a.up("window").setTitle(b)},openWin:function(){this.win.show()},action:function(b){var c=this.win,a=c.down("form");if(b=="close"){a.getForm().reset()}},onActive:function(a){this.userStore.load();a(true)}});Ext.define("App.view.miscellaneous.Addressbook",{extend:"App.classes.RenderPanel",id:"panelAddressbook",pageTitle:i18n.address_book,uses:["App.classes.GridPanel","App.classes.combo.Titles","App.classes.window.Window","App.classes.combo.Types"],initComponent:function(){var b=this;var a;Ext.define("addressBookModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"username",type:"string"},{name:"password",type:"string"},{name:"authorized",type:"string"},{name:"info",type:"string"},{name:"source",type:"int"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"fullname",type:"string"},{name:"federaltaxid",type:"string"},{name:"federaldrugid",type:"string"},{name:"upin",type:"string"},{name:"facility",type:"string"},{name:"facility_id",type:"int"},{name:"see_auth",type:"int"},{name:"active",type:"int"},{name:"npi",type:"string"},{name:"title",type:"string"},{name:"specialty",type:"string"},{name:"billname",type:"string"},{name:"email",type:"string"},{name:"url",type:"string"},{name:"assistant",type:"string"},{name:"organization",type:"string"},{name:"valedictory",type:"string"},{name:"fulladdress",type:"string"},{name:"street",type:"string"},{name:"streetb",type:"string"},{name:"city",type:"string"},{name:"state",type:"string"},{name:"zip",type:"string"},{name:"street2",type:"string"},{name:"streetb2",type:"string"},{name:"city2",type:"string"},{name:"state2",type:"string"},{name:"zip2",type:"string"},{name:"phone",type:"string"},{name:"fax",type:"string"},{name:"phonew1",type:"string"},{name:"phonew2",type:"string"},{name:"phonecell",type:"string"},{name:"notes",type:"string"},{name:"cal_ui",type:"string"},{name:"taxonomy",type:"string"},{name:"ssi_relayhealth",type:"string"},{name:"calendar",type:"int"},{name:"abook_type",type:"string"},{name:"pwd_expiration_date",type:"string"},{name:"pwd_history1",type:"string"},{name:"pwd_history2",type:"string"},{name:"default_warehouse",type:"string"}],proxy:{type:"direct",api:{read:AddressBook.getAddresses,create:AddressBook.addContact,update:AddressBook.updateAddress},reader:{totalProperty:"totals",root:"rows"}}});b.store=Ext.create("Ext.data.Store",{model:"addressBookModel",remoteSort:false});b.win=Ext.create("App.classes.window.Window",{width:755,title:i18n.add_or_edit_contact,items:[{xtype:"mitos.form",items:[{xtype:"fieldset",title:i18n.primary_info,collapsible:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:100,xtype:"displayfield",value:"Type: "},{width:130,xtype:"mitos.typescombobox"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:100,xtype:"displayfield",value:"First, Middle, Last: "},{width:55,xtype:"mitos.titlescombo",name:"title"},{width:130,xtype:"textfield",name:"fname"},{width:100,xtype:"textfield",name:"mname"},{width:280,xtype:"textfield",name:"lname"}]},{xtype:"fieldcontainer",msgTarget:"side",items:[{width:100,xtype:"displayfield",value:"Specialty: "},{width:130,xtype:"textfield",name:"specialty"},{width:90,xtype:"displayfield",value:"Organization: "},{width:120,xtype:"textfield",name:"organization"},{width:80,xtype:"displayfield",value:"Valedictory: "},{width:135,xtype:"textfield",name:"valedictory"}]}]},{xtype:"fieldset",title:i18n.primary_address,collapsible:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"Address: "},{width:130,xtype:"textfield",name:"street"},{width:100,xtype:"displayfield",value:"Addrress Cont: "},{width:335,xtype:"textfield",name:"streetb"}]},{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"City: "},{width:130,xtype:"textfield",name:"city"},{width:100,xtype:"displayfield",value:"State: "},{width:120,xtype:"textfield",name:"state"},{width:80,xtype:"displayfield",value:"Postal Code: "},{width:125,xtype:"textfield",name:"zip"}]}]},{xtype:"fieldset",title:i18n.secondary_address,collapsible:true,collapsed:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"Address: "},{width:130,xtype:"textfield",name:"street2"},{width:100,xtype:"displayfield",value:"Cont.: "},{width:335,xtype:"textfield",name:"streetb2"}]},{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"City: "},{width:130,xtype:"textfield",name:"city2"},{width:100,xtype:"displayfield",value:"State: "},{width:120,xtype:"textfield",name:"state2"},{width:80,xtype:"displayfield",value:"Postal Code: "},{width:125,xtype:"textfield",name:"zip2"}]}]},{xtype:"fieldset",title:i18n.phone_numbers,collapsible:true,collapsed:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"Home Phone: "},{width:130,xtype:"textfield",name:"phone"},{width:90,xtype:"displayfield",value:"Mobile Phone: "},{width:130,xtype:"textfield",name:"phonecell"}]},{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"Work Phone: "},{width:130,xtype:"textfield",name:"phonew1"},{width:90,xtype:"displayfield",value:"Work Phone: "},{width:130,xtype:"textfield",name:"phonew2"},{width:60,xtype:"displayfield",value:"FAX: "},{width:140,xtype:"textfield",name:"fax"}]}]},{xtype:"fieldset",title:i18n.online_info,collapsible:true,collapsed:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",items:[{width:100,xtype:"displayfield",value:"Email: "},{width:130,xtype:"textfield",name:"email"},{width:90,xtype:"displayfield",value:"Assistant: "},{width:130,xtype:"textfield",name:"assistant"},{width:60,xtype:"displayfield",value:"Website: "},{width:140,xtype:"textfield",name:"url"}]}]},{xtype:"fieldset",title:i18n.other_info,collapsible:true,collapsed:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",items:[{width:50,xtype:"displayfield",value:"UPIN: "},{width:80,xtype:"textfield",name:"upin"},{width:50,xtype:"displayfield",value:"NPI: "},{width:80,xtype:"textfield",name:"npi"},{width:50,xtype:"displayfield",value:"TIN: "},{width:80,xtype:"textfield",name:"federaltaxid"},{width:80,xtype:"displayfield",value:"Taxonomy: "},{width:90,xtype:"textfield",name:"taxonomy"}]}]},{width:720,xtype:"htmleditor",name:"notes",emptyText:i18n.notes}]}],buttons:[{text:i18n.save,scope:b,handler:b.onSave},{text:i18n.cancel,scope:b,handler:b.onCancel}],listeners:{close:b.onWinClose}});b.grid=Ext.create("Ext.grid.GridPanel",{store:b.store,layout:"fit",frame:true,loadMask:true,viewConfig:{stripeRows:true},listeners:{scope:b,itemclick:b.girdItemclick,itemdblclick:b.gridItemdblclick},columns:[{header:i18n.name,width:150,sortable:true,dataIndex:"fullname"},{header:i18n.local,width:50,sortable:true,dataIndex:"username",renderer:b.local},{header:i18n.type,sortable:true,dataIndex:"ab_title"},{header:i18n.specialty,sortable:true,dataIndex:"specialty"},{header:i18n.work_phone,sortable:true,dataIndex:"phonew1"},{header:i18n.mobile,sortable:true,dataIndex:"phonecell"},{header:i18n.fax,sortable:true,dataIndex:"fax"},{header:i18n.email,flex:1,sortable:true,dataIndex:"email"},{header:i18n.primary_address,flex:1,sortable:true,dataIndex:"fulladdress"}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:i18n.add_contact,iconCls:"icoAddressBook",scope:b,handler:b.onAddContact}]}]});b.pageBody=[b.grid];b.callParent(arguments)},onAddContact:function(){this.win.show()},onSave:function(d){var f=this,h=d.up("window"),e=h.down("form").getForm(),c=f.store;if(e.isValid()){var a=e.getRecord(),b=e.getValues(),g=c.indexOf(a);if(g==-1){c.add(b)}else{a.set(b)}c.sync();c.load();h.close();f.msg("Sweet!",i18n.message_sent)}},onCancel:function(){this.win.close()},girdItemclick:function(b,a){},gridItemdblclick:function(b,a){this.win.down("form").getForm().loadRecord(a);this.win.show()},onWinClose:function(a){a.down("form").getForm().reset()},onCopyClipBoard:function(b){var c=Ext.getCmp("grid").store;var a=c.getById(b);var d="";for(key in a.data){d+=key+": "+a.data[key]+"\n"}alert(i18n.following_data_copied_to_clipboard+":\n\n"+d);if(window.clipboardData){window.clipboardData.setData("text",d)}else{return(d)}},local:function(a){if(a!==""){return'<img src="resources/images/icons/yes.gif" />'}return a},onActive:function(a){this.store.load();a(true)}});Ext.define("App.view.miscellaneous.MyAccount",{extend:"App.classes.RenderPanel",id:"panelMyAccount",pageTitle:i18n.my_account,uses:["App.classes.combo.Titles","App.classes.window.Window","App.classes.combo.Facilities","App.classes.combo.Authorizations"],initComponent:function(){var a=this;Ext.define("UsersModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"username",type:"string"},{name:"password",type:"string"},{name:"oPassword",type:"string"},{name:"nPassword",type:"string"},{name:"facility_id",type:"int"},{name:"see_auth",type:"string"},{name:"taxonomy",type:"string"},{name:"federaltaxid",type:"string"},{name:"federaldrugid",type:"string"},{name:"upin",type:"string"},{name:"npi",type:"string"},{name:"specialty",type:"string"}],proxy:{type:"direct",api:{read:User.getCurrentUserData,update:User.getCurrentUserData}}});a.store=Ext.create("Ext.data.Store",{model:"UsersModel",remoteSort:false});a.myAccountForm=Ext.create("App.classes.form.Panel",{cls:"form-white-bg",frame:true,hideLabels:true,defaults:{labelWidth:89,layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"textfield",hidden:true,name:"id"},{xtype:"fieldset",title:i18n.personal_info,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:110,xtype:"displayfield",value:"First, Middle, Last: "},{width:55,xtype:"mitos.titlescombo",name:"title"},{width:105,xtype:"textfield",name:"fname"},{width:100,xtype:"textfield",name:"mname"},{width:175,xtype:"textfield",name:"lname"}]}]},{xtype:"fieldset",title:i18n.login_info,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:110,xtype:"displayfield",value:"Username: "},{width:150,xtype:"textfield",name:"username"},{width:120,xtype:"displayfield",value:"Password: "},{width:175,xtype:"textfield",name:"password",inputType:"password",disabled:true}]}]},{xtype:"fieldset",title:i18n.other_info,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",defaults:{hideLabel:true},msgTarget:"under",items:[{width:110,xtype:"displayfield",value:"Default Facility: "},Ext.create("App.classes.combo.Facilities",{width:170}),{width:100,xtype:"displayfield",value:"Authorizations: "},Ext.create("App.classes.combo.Authorizations",{width:175})]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:110,xtype:"displayfield",value:"Access Control: "},Ext.create("App.classes.combo.Roles",{width:170}),{width:100,xtype:"displayfield",value:"Taxonomy: "},{width:175,xtype:"textfield",name:"taxonomy"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:110,xtype:"displayfield",value:"Federal Tax ID: "},{width:170,xtype:"textfield",name:"federaltaxid"},{width:100,xtype:"displayfield",value:"Fed Drug ID: "},{width:175,xtype:"textfield",name:"federaldrugid"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:110,xtype:"displayfield",value:"UPIN: "},{width:170,xtype:"textfield",name:"upin"},{width:100,xtype:"displayfield",value:"NPI: "},{width:175,xtype:"textfield",name:"npi"}]},{xtype:"fieldcontainer",defaults:{hideLabel:true},items:[{width:110,xtype:"displayfield",value:"Job Description: "},{width:455,xtype:"textfield",name:"specialty"}]}]}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:i18n.save,iconCls:"save",handler:function(){}},{text:i18n.change_password,iconCls:"save",scope:a,handler:a.onPasswordChange}]}],listeners:{afterrender:{fn:function(){}}}});a.win=Ext.create("App.classes.window.Window",{width:420,title:i18n.change_you_password,items:[{xtype:"form",bodyPadding:15,defaultType:"textfield",defaults:{labelWidth:130,width:380,inputType:"password"},items:[{name:"id",hidden:true},{fieldLabel:i18n.old_password,name:"oPassword",allowBlank:false},{fieldLabel:i18n.new_password,name:"nPassword",allowBlank:false,id:"myAccountPage_nPassword"},{fieldLabel:i18n.re_type_password,name:"vPassword",allowBlank:false,vtype:"password",initialPassField:"myAccountPage_nPassword",validateOnChange:true}]}],buttons:[{text:i18n.save,scope:a,handler:a.onPasswordSave},{text:i18n.cancel,scope:a,handler:a.onCancel}],listeners:{scope:a,close:a.onClose}});a.pageBody=[a.myAccountForm];a.callParent(arguments)},onPasswordSave:function(){},onPasswordChange:function(){this.win.show()},onCancel:function(){this.win.close()},onClose:function(){this.win.down("form").getForm().reset()},onActive:function(c){var b=this,a=b.myAccountForm.getForm();this.store.load({scope:b,callback:function(d){a.loadRecord(d[0])}});c(true)}});Ext.define("App.view.miscellaneous.MySettings",{extend:"App.classes.RenderPanel",id:"panelMySettings",pageTitle:i18n.my_settings,uses:["App.classes.GridPanel"],initComponent:function(){var a=this;a.uSettingsForm=Ext.create("App.classes.form.Panel",{id:"uSettingsForm",bodyStyle:"padding: 10px;",cls:"form-white-bg",frame:true,hideLabels:true,items:[{xtype:"textfield",hidden:true,id:"id",name:"id"},{xtype:"fieldset",title:i18n.appearance_settings,collapsible:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{},{},{}]},{xtype:"fieldset",title:i18n.locale_settings,collapsible:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{},{},{}]},{xtype:"fieldset",title:i18n.calendar_settings,collapsible:true,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{},{},{}]}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:i18n.save,iconCls:"save",id:"cmdSave",disabled:true,handler:function(){}}]}]});a.pageBody=[a.uSettingsForm];a.callParent(arguments)},onActive:function(a){a(true)}});Ext.define("App.view.miscellaneous.OfficeNotes",{extend:"App.classes.RenderPanel",id:"panelOfficeNotes",pageTitle:i18n.office_notes,pageLayout:"border",initComponent:function(){var a=this;a.store=Ext.create("App.store.miscellaneous.OfficeNotes");a.form=Ext.create("Ext.form.FormPanel",{region:"north",frame:true,height:97,margin:"0 0 3 0",items:[{xtype:"textareafield",allowBlank:false,grow:true,margin:0,itemId:"body",name:"body",anchor:"100%",emptyText:i18n.type_new_note_here+"...",listeners:{scope:a,validitychange:a.onValidityChange}}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:i18n.save,iconCls:"save",itemId:"cmdSave",disabled:true,scope:a,handler:a.onNoteSave},"-",{text:i18n.hide_this_note,iconCls:"save",itemId:"cmdHide",tooltip:i18n.hide_selected_office_note,disabled:true,scope:a,handler:a.onNoteHide},"-",{text:i18n.reset,iconCls:"save",itemId:"cmdReset",disabled:true,scope:a,handler:a.onFormReset}]}]});a.grid=Ext.create("Ext.grid.Panel",{region:"center",store:a.store,listeners:{scope:a,itemclick:a.onItemClick},columns:[{width:150,header:i18n.date,sortable:true,dataIndex:"date",renderer:Ext.util.Format.dateRenderer("Y-m-d H:i:s")},{width:150,header:i18n.user,sortable:true,dataIndex:"user"},{flex:1,header:i18n.note,sortable:true,dataIndex:"body"}],tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:true,emptyMsg:i18n.no_office_notes_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:[{text:i18n.show_only_active_notes,iconCls:"save",enableToggle:true,pressed:true,handler:function(){a.store.load({params:{show:"active"}})}},"-",{text:i18n.show_all_notes,iconCls:"save",enableToggle:true,handler:function(){a.store.load({params:{show:"all"}})}}]})});a.pageBody=[a.form,a.grid];a.callParent(arguments)},onNoteSave:function(d){var e=d.up("form").getForm(),c=this.store,a=e.getRecord(),b=e.getValues(),f=c.indexOf(a);if(f==-1){c.add(b)}else{a.set(b)}c.sync()},onNoteHide:function(){},onFormReset:function(c){var b=this.form,f=b.getForm(),e=b.down("toolbar"),a=e.getComponent("cmdSave"),g=e.getComponent("cmdHide"),d=e.getComponent("cmdReset");f.reset();a.disable();g.disable();d.disable();a.setText("Save")},onItemClick:function(d,c){var b=this.form,g=b.getForm(),f=b.down("toolbar"),a=f.getComponent("cmdSave"),h=f.getComponent("cmdHide"),e=f.getComponent("cmdReset");g.reset();g.loadRecord(c);a.enable();h.enable();e.enable();a.setText("Update")},onValidityChange:function(){var b=this.form,e=b.getComponent("body"),d=b.down("toolbar"),a=d.getComponent("cmdSave"),c=d.getComponent("cmdReset");if(e.isValid()){a.enable();c.enable()}else{a.disable()}},onActive:function(a){this.store.load({params:{show:"active"}});a(true)}});Ext.define("App.view.miscellaneous.Websearch",{extend:"App.classes.RenderPanel",id:"panelWebsearch",pageTitle:i18n.national_library,pageLayout:"border",uses:["App.classes.GridPanel"],initComponent:function(){var a=this;var b;var c;if(!Ext.ModelManager.isRegistered("webSearch")){Ext.define("webSearch",{extend:"Ext.data.Model",fields:[{name:"title",type:"string"},{name:"source",type:"string"},{name:"FullSummary",type:"string"},{name:"snippet",type:"string"}]})}a.store=Ext.create("Ext.data.Store",{pageSize:15,model:"webSearch",proxy:{type:"ajax",url:"app/miscellaneous/websearch/data_read.ejs.php",noCache:false,startParam:"retstart",limitParam:"retmax",pageParam:"file",reader:{type:"json",root:"row",totalProperty:"totals",idProperty:"id"}}});a.searchPanel=Ext.create("Ext.panel.Panel",{region:"north",bodyPadding:"8 11 5 11",margin:"0 0 2 0",layout:"anchor",items:[{xtype:"radiogroup",fieldLabel:i18n.search_by,items:[{boxLabel:i18n.heath_topics,name:"type",inputValue:"health_topics"},{boxLabel:"ICD-9-CM",name:"type",inputValue:"icd9cm"}],listeners:{change:function(){var d=this.getValue();b=d.type;a.searchField.enable();a.searchField.reset()}}},a.searchField=Ext.create("Ext.form.field.Text",{emptyText:i18n.web_search+"...",enableKeyEvents:true,hideLabel:true,anchor:"100%",disabled:true,listeners:{keyup:function(){var d=this.getValue();if(d.length>2){a.store.load({params:{type:b,q:d}})}},buffer:500,focus:function(){a.viewPanel.collapse()}}})]});a.searchRow=function(e,f,d){return Ext.String.format('<div class="topic"><span class="search_title">{0}</span><br><span class="search_source">{1}</span><br><span class="search_snippet" style="white-space: normal;">{2}</span></div>',e,d.get("source")||"Unknown",d.get("snippet")||"Unknown")};a.onotesGrid=Ext.create("App.classes.GridPanel",{margin:"0 0 2 0",region:"center",store:a.store,viewConfig:{deferEmptyText:false,emptyText:'<p class="search_nothing_found" style="padding: 10px 0 0 20px; font-size: 24px">'+i18n.nothing_found+"!</p>",stripeRows:true,loadingText:i18n.searching+"... "+i18n.please_wait},columns:[{flex:1,header:i18n.search_results,sortable:true,dataIndex:"title",renderer:a.searchRow},{hidden:true,sortable:true,dataIndex:"source"},{hidden:true,sortable:true,dataIndex:"snippet"}],tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:true,emptyMsg:i18n.nothing_to_display,plugins:Ext.create("Ext.ux.SlidingPager",{})}),listeners:{itemclick:function(g,d,e,f){a.viewPanel.expand();c=a.store.getAt(f);a.viewPanel.update(c.data)}}});a.viewPanel=Ext.create("Ext.panel.Panel",{region:"south",height:300,collapsible:true,collapsed:true,layout:"fit",frame:true,bodyBorder:true,tpl:Ext.create("Ext.XTemplate",'<div class="search_container">','<div class="search_data">','<h3 class="search_title">'+i18n.title+": {title}</h3>",'<h4 class="search_source">'+i18n.source+": {source}</h4>","</div>",'<div class="search_body">{FullSummary}</div>',"</div>")});a.pageBody=[a.searchPanel,a.onotesGrid,a.viewPanel];a.callParent(arguments)},onActive:function(a){a(true)}});Ext.define("App.view.signature.SignatureWindow",{extend:"Ext.window.Window",title:i18n.please_sign,closeAction:"hide",height:250,width:500,bodyStyle:"background-color:#fff",modal:true,layout:"fit",initComponent:function(){var a=this;a.html=a.signature='<iframe id="svgSignature" src="app/view/signature/signature.svg" height="100%" width="100%" scrolling="no" frameborder="0"></iframe>';a.buttons=[{text:i18n.save,scope:a,handler:a.signatureSave},{text:i18n.reset,scope:a,handler:a.signatureCancel}];this.callParent(arguments)},signatureSave:function(){var a=document.getElementById("svgSignature").contentWindow;say(a.getSignature())},signatureCancel:function(){var a=document.getElementById("svgSignature").contentWindow;a.clearSignature()}});Ext.define("Modules.Module",{extend:"Ext.Component",constructor:function(){var a=this;a.callParent()},addAppPanel:function(a){app.MainPanel.add(a)},addHeaderItem:function(a){app.Header.add(a)},addNavigationNodes:function(e,d){var c;if(e=="root"||e==null){c=app.storeTree.tree.getRootNode()}else{c=app.storeTree.tree.getNodeById(e)}var b=c.findChildBy(function(f){return f.hasChildNodes()});if(Ext.isArray(d)){for(var a=0;a<d.length;a++){c.insertBefore(d[a],b)}}else{c.insertBefore(d,b)}},addLanguages:function(a){}});Ext.define("App.view.Viewport",{extend:"Ext.Viewport",requires:window.requires,minWidthToFullMode:1585,currency:"$",activityMonitorInterval:60,activityMonitorMaxInactive:10,cronTaskInterval:10,initComponent:function(){Ext.tip.QuickTipManager.init();var a=this;a.lastCardNode=null;a.currCardCmp=null;a.fullMode=window.innerWidth>=a.minWidthToFullMode;a.patient={name:null,pid:null,sex:null,dob:null,age:null,eid:null,readOnly:false};a.user=window.user;a.cronTask={scope:a,run:function(){a.checkSession();a.getPatientsInPoolArea();CronJob.run()},interval:a.cronTaskInterval*1000};a.storeTree=Ext.create("App.store.navigation.Navigation",{autoLoad:true,listeners:{scope:a,load:a.afterNavigationLoad}});a.patientPoolStore=Ext.create("App.store.areas.PoolArea");if(a.currency=="$"){a.icoMoney="icoDollar"}else{if(a.currency=="€"){a.icoMoney="icoEuro"}else{if(a.currency=="£"){a.icoMoney="icoLibra"}else{if(a.currency=="¥"){a.icoMoney="icoYen"}}}}a.winSupport=Ext.create("Ext.window.Window",{title:i18n.support,closeAction:"hide",bodyStyle:"background-color: #ffffff; padding: 5px;",animateTarget:a.Footer,resizable:false,draggable:false,maximizable:false,autoScroll:true,maximized:true,dockedItems:{xtype:"toolbar",dock:"top",items:["-",{text:"List issues",iconCls:"list",action:"http://GaiaEHR.org/projects/GaiaEHR001/issues",scope:a,handler:a.showMiframe},"-",{text:"Create an issue",iconCls:"icoAddRecord",action:"http://GaiaEHR.org/projects/GaiaEHR001/issues/new",scope:a,handler:a.showMiframe}]}});a.Header=Ext.create("Ext.container.Container",{region:"north",height:44,split:false,collapsible:false,collapsed:true,frame:false,border:false,bodyStyle:"background: transparent",margins:"0 0 0 0"});a.patientBtn=a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:0,scope:a,handler:a.openPatientSummary,listeners:{scope:a,afterrender:a.patientBtnRender},tpl:a.patientBtnTpl()});a.patientOpenVisitsBtn=a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,iconCls:"icoBackClock",scope:a,handler:a.openPatientVisits,tooltip:i18n.open_patient_visits_history});if(acl.add_encounters){a.patientCreateEncounterBtn=a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,iconCls:"icoClock",scope:a,handler:a.createNewEncounter,tooltip:i18n.create_new_encounter})}a.patientCloseCurrEncounterBtn=a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,iconCls:"icoArrowDown",scope:a,handler:a.stowPatientRecord,tooltip:i18n.show_patient_record});a.patientCheckOutBtn=a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,iconCls:"icoCheckOut",scope:a,handler:a.chargePatient,tooltip:i18n.check_out_patient});a.patientChargeBtn=a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,iconCls:a.icoMoney,scope:a,handler:a.onPaymentEntryWindow,tooltip:i18n.payment_entry});a.Header.add({xtype:"panel",bodyPadding:"8 11 5 11",margin:"0 0 0 3",style:"float:left",items:[{xtype:"patienlivetsearch",emptyText:i18n.patient_live_search+"...",fieldStyle:a.fullMode?"width:300":"width:250",listeners:{scope:a,select:a.liveSearchSelect,blur:function(b){b.reset()}}}]});a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",padding:4,itemId:"patientNewReset",iconCls:"icoAddPatient",scope:a,handler:a.newPatient,tooltip:i18n.create_a_new_patient});a.Header.add({xtype:"button",scale:"large",style:"float:left",margin:"0 0 0 3",cls:"headerLargeBtn emerBtn",overCls:"emerBtnOver",padding:0,itemId:"createEmergency",iconCls:"icoEmer",scope:a,handler:a.createEmergency,tooltip:i18n.create_new_emergency});a.Header.add({xtype:"button",text:user.title+" "+user.lname,scale:"large",iconCls:"icoDoctor",iconAlign:"left",cls:"drButton",style:"float:right",margin:"0 0 0 3",menu:[{text:i18n.my_account,iconCls:"icoArrowRight",handler:function(){a.navigateTo("panelMyAccount")}},{text:i18n.my_settings,iconCls:"icoArrowRight",handler:function(){a.navigateTo("panelMySettings")}},{text:i18n.logout,iconCls:"icoArrowRight",scope:a,handler:a.appLogout}]});a.Header.add({xtype:"button",scale:"large",style:"float:right",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,itemId:"patientCheckIn",iconCls:"icoLog",scope:a,handler:a.onPatientLog,tooltip:i18n.arrival_log});a.Header.add({xtype:"button",scale:"large",style:"float:right",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,itemId:"patientPoolArea",iconCls:"icoPoolArea",scope:a,handler:a.goToPoolAreas,tooltip:i18n.pool_areas});a.Header.add({xtype:"button",scale:"large",style:"float:right",margin:"0 0 0 3",cls:"headerLargeBtn",padding:0,itemId:"floorPlans",iconCls:"icoZoneAreasBig",scope:a,handler:a.goToFloorPlans,tooltip:i18n.floor_plans});a.navColumn=Ext.create("Ext.panel.Panel",{title:i18n.navigation,stateId:"navColumn",layout:"border",region:"west",width:200,split:true,collapsible:true,collapsed:false,items:[{xtype:"treepanel",region:"center",cls:"nav_tree",hideHeaders:true,rootVisible:false,border:false,store:a.storeTree,width:200,plugins:[{ptype:"nodedisabled"}],listeners:{scope:a,selectionchange:a.onNavigationNodeSelected}},a.patientPoolArea=Ext.create("Ext.Panel",{title:i18n.patient_pool_areas,layout:"fit",region:"south",bodyPadding:5,height:25,cls:"patient-pool",split:true,collapsible:true,border:false,items:[{xtype:"dataview",loadMask:false,cls:"patient-pool-view",tpl:'<tpl for="."><div class="patient-pool-btn x-btn x-btn-default-large {priority}"><div class="patient_btn_img"><img src="{photoSrc}" width="35" height="35"></div><div class="patient_btn_info"><div class="patient-name">{shortName}</div><div class="patient-name">#{pid} ({poolArea})</div></div></div></tpl>',itemSelector:"div.patient-pool-btn",overItemCls:"patient-over",selectedItemClass:"patient-selected",singleSelect:true,store:a.patientPoolStore,listeners:{scope:a,render:a.initializeOpenEncounterDragZone}}]})],dockedItems:[{xtype:"toolbar",dock:"bottom",border:true,margin:"3 0 0 0",padding:5,layout:{type:"hbox",pack:"center"},items:["-",{xtype:"button",frame:true,text:"GaiaEHR Support",iconCls:"icoHelp",action:"http://gaiaehr.org/",scope:a,handler:a.showMiframe},"-"]}],listeners:{scope:a,beforecollapse:a.navCollapsed,beforeexpand:a.navExpanded}});a.MainPanel=Ext.create("Ext.container.Container",{region:"center",layout:"card",border:true,itemId:"MainPanel",defaults:{layout:"fit",xtype:"container"},listeners:{scope:a,afterrender:a.initializeOpenEncounterDropZone}});a.MainPanel.add(Ext.create("App.view.dashboard.Dashboard"));a.MainPanel.add(Ext.create("App.view.calendar.Calendar"));a.MainPanel.add(Ext.create("App.view.messages.Messages"));a.MainPanel.add(Ext.create("App.view.search.PatientSearch"));a.MainPanel.add(Ext.create("App.view.areas.FloorPlan"));a.MainPanel.add(Ext.create("App.view.patient.NewPatient"));a.MainPanel.add(Ext.create("App.view.patient.Summary"));a.MainPanel.add(Ext.create("App.view.patient.Visits"));a.MainPanel.add(Ext.create("App.view.patient.Encounter"));a.MainPanel.add(Ext.create("App.view.patient.VisitCheckout"));a.MainPanel.add(Ext.create("App.view.fees.Billing"));a.MainPanel.add(Ext.create("App.view.fees.Payments"));a.MainPanel.add(Ext.create("App.view.miscellaneous.Addressbook"));a.MainPanel.add(Ext.create("App.view.miscellaneous.MyAccount"));a.MainPanel.add(Ext.create("App.view.miscellaneous.MySettings"));a.MainPanel.add(Ext.create("App.view.miscellaneous.OfficeNotes"));a.MainPanel.add(Ext.create("App.view.miscellaneous.Websearch"));a.ppdz=a.MainPanel.add(Ext.create("App.view.areas.PatientPoolDropZone"));if(acl.access_gloabal_settings){a.MainPanel.add(Ext.create("App.view.administration.Globals"))}if(acl.access_facilities){a.MainPanel.add(Ext.create("App.view.administration.Facilities"))}if(acl.access_users){a.MainPanel.add(Ext.create("App.view.administration.Users"))}if(acl.access_practice){a.MainPanel.add(Ext.create("App.view.administration.Practice"))}if(acl.access_data_manager){a.MainPanel.add(Ext.create("App.view.administration.DataManager"))}if(acl.access_preventive_care){a.MainPanel.add(Ext.create("App.view.administration.PreventiveCare"))}if(acl.access_medications){a.MainPanel.add(Ext.create("App.view.administration.Medications"))}if(acl.access_floor_plans){a.MainPanel.add(Ext.create("App.view.administration.FloorPlans"))}if(acl.access_roles){a.MainPanel.add(Ext.create("App.view.administration.Roles"))}if(acl.access_layouts){a.MainPanel.add(Ext.create("App.view.administration.Layout"))}if(acl.access_lists){a.MainPanel.add(Ext.create("App.view.administration.Lists"))}if(acl.access_event_log){a.MainPanel.add(Ext.create("App.view.administration.Log"))}if(acl.access_documents){a.MainPanel.add(Ext.create("App.view.administration.Documents"))}a.MainPanel.add(Ext.create("App.view.administration.ExternalDataLoads"));a.Footer=Ext.create("Ext.container.Container",{height:a.fullMode?30:60,split:false,padding:"3 0",region:"south",items:[{xtype:"dataview",margin:"0 0 3 0",hidden:true,hideMode:"offsets",cls:"patient-pool-view-footer x-toolbar x-toolbar-default x-box-layout-ct",tpl:'<div class="x-toolbar-separator x-toolbar-item x-toolbar-separator-horizontal" style="float:left; margin-top:5px;" role="presentation" tabindex="-1"></div><tpl for="."><div class="patient-pool-btn-small x-btn x-btn-default-small {priority}" style="float:left"><div class="patient_btn_info"><div class="patient-name">{name} ({pid})</div></div></div><div class="x-toolbar-separator x-toolbar-item x-toolbar-separator-horizontal" style="float:left; margin-top:5px; margin-left:3px;" role="presentation" tabindex="-1"></div></tpl>',itemSelector:"div.patient-pool-btn-small",overItemCls:"patient-over",selectedItemClass:"patient-selected",singleSelect:true,loadMask:false,store:a.patientPoolStore,listeners:{render:a.initializeOpenEncounterDragZone}},{xtype:"toolbar",dock:"bottom",items:[{text:"Copyright (C) 2011 GaiaEHR (Electronic Health Records) |:|  Open Source Software operating under GPLv3 ",iconCls:"icoGreen",disabled:true,action:"http://GaiaEHR.org/projects/GaiaEHR001",scope:a,handler:a.showMiframe},"->",{text:i18n.news,action:"http://GaiaEHR.org/projects/GaiaEHR001/news",scope:a,handler:a.showMiframe},"-",{text:i18n.wiki,action:"http://gaiaehr.org/",scope:a,handler:a.showMiframe},"-",{text:i18n.issues,action:"http://gaiaehr.org/",scope:a,handler:a.showMiframe},"-",{text:i18n.forums,action:"http://gaiaehr.org/",scope:a,handler:a.showMiframe}]}]});a.MedicalWindow=Ext.create("App.view.patient.windows.Medical");a.ChartsWindow=Ext.create("App.view.patient.windows.Charts");a.PaymentEntryWindow=Ext.create("App.view.fees.PaymentEntryWindow");a.PreventiveCareWindow=Ext.create("App.view.patient.windows.PreventiveCare");a.NewDocumentsWindow=Ext.create("App.view.patient.windows.NewDocuments");a.DocumentViewerWindow=Ext.create("App.view.patient.windows.DocumentViewer");a.layout={type:"border",padding:3};a.defaults={split:true};a.items=[a.Header,a.navColumn,a.MainPanel,a.Footer];a.listeners={render:a.appRender,beforerender:a.beforeAppRender};a.callParent(arguments);a.signature=Ext.create("App.view.signature.SignatureWindow")},onMedicalWin:function(a){this.MedicalWindow.show();this.MedicalWindow.down("toolbar").getComponent(a.action).toggle(true);this.MedicalWindow.cardSwitch(a)},onChartsWin:function(){this.ChartsWindow.show()},onNewDocumentsWin:function(a){this.NewDocumentsWindow.eid=this.patient.eid;this.NewDocumentsWindow.pid=this.patient.pid;this.NewDocumentsWindow.show();this.NewDocumentsWindow.cardSwitch(a)},onWebCamComplete:function(b){var a=this.getActivePanel();if(a.id=="panelSummary"){a.completePhotoId()}this.msg("Sweet!",i18n.patient_image_saved)},onPatientLog:function(){if(this.patientArrivalLog){this.patientArrivalLog.show()}else{this.patientArrivalLog=Ext.create("App.view.patient.windows.ArrivalLog").show()}},onPaymentEntryWindow:function(){this.PaymentEntryWindow.show()},newPatient:function(){var a=this;a.navigateTo("panelNewPatient")},createEmergency:function(){var b=this,a;Ext.Msg.show({title:i18n.wait+"!!!",msg:i18n.are_you_sure_you_want_to_create_a_new+' <span style="color: red">"'+i18n.emergency+'"</span>?',buttons:Ext.Msg.YESNO,icon:Ext.Msg.WARNING,fn:function(c){if(c=="yes"){Emergency.createNewEmergency(function(e,d){a=d.result.emergency;if(d.result.success){b.setPatient(a.pid,a.name,function(){b.openEncounter(a.eid)});b.msg("Sweet!",a.name+" "+i18n.created)}})}}})},createNewEncounter:function(){var a=this;if(acl.access_encounters&&acl.add_encounters){a.navigateTo("panelEncounter",function(b){if(b){a.currCardCmp.newEncounter()}})}else{a.accessDenied()}},openPatientSummary:function(){var a=this;if(a.currCardCmp==Ext.getCmp("panelSummary")){a.currCardCmp.onActive()}else{a.navigateTo("panelSummary")}},stowPatientRecord:function(){this.unsetPatient();this.navigateTo("panelDashboard")},openEncounter:function(a){var b=this;if(acl.access_encounters){b.navigateTo("panelEncounter",function(c){if(c){b.currCardCmp.openEncounter(a)}})}else{b.accessDenied()}},checkOutPatient:function(a){var b=this;b.navigateTo("panelVisitCheckout",function(c){if(c){b.currCardCmp.setPanel(a)}})},chargePatient:function(){this.navigateTo("panelVisitPayment")},openPatientVisits:function(){this.navigateTo("panelVisits")},goToPoolAreas:function(){this.navigateTo("panelPoolArea")},goToFloorPlans:function(){this.navigateTo("panelAreaFloorPlan")},navigateTo:function(f,e){var a=this.navColumn.down("treepanel"),c=a.getStore(),d=a.getSelectionModel(),b=c.getNodeById(f);d.select(b);if(typeof e=="function"){e(true)}},navigateToDefault:function(){this.navigateTo("panelDashboard")},afterNavigationLoad:function(){this.fullMode?this.navColumn.expand():this.navColumn.collapse();this.navigateToDefault();this.removeAppMask();this.setTask(true)},onNavigationNodeSelected:function(c,d){var f=this;if(0<d.length){if(d[0].data.leaf){var a=f.navColumn.down("treepanel"),h=a.getSelectionModel(),b=d[0].data.id,e=f.MainPanel.getLayout(),g=Ext.getCmp(b);f.currCardCmp=g;e.setActiveItem(b);g.onActive(function(i){(i)?f.lastCardNode=h.getLastSelected():f.goBack()})}}},goBack:function(){var a=this.navColumn.down("treepanel"),b=a.getSelectionModel();b.select(this.lastCardNode)},navCollapsed:function(){var c=this,d=c.patientPoolArea,b=c.Footer,a;if(b){a=b.down("dataview");b.setHeight(60);a.show()}c.navColumn.isCollapsed=true;d.hide()},navExpanded:function(){var c=this,d=c.patientPoolArea,b=c.Footer,a;if(b){a=b.down("dataview");b.setHeight(30);a.hide()}c.navColumn.isCollapsed=false;d.show()},getActivePanel:function(){return this.MainPanel.getLayout().getActiveItem()},liveSearchSelect:function(d,b){var c=this,a=b[0];if(a){Patient.currPatientSet({pid:a.get("pid")},function(){c.setPatient(a.get("pid"),a.get("fullname"),function(){c.openPatientSummary()})})}},setPatient:function(b,a,d){var c=this;c.unsetPatient(function(){Patient.currPatientSet({pid:b},function(j,e){var i=e.result,h,g;if(i.readOnly){h=i.user+" "+i18n.is_currently_working_with+' "'+i.patient.name+'" '+i18n["in"]+' "'+i.area+'" '+i18n.area+".<br>"+i18n.override_read_mode_will_remove_the_patient_from_previous_user+".<br>"+i18n.do_you_would_like_to_override_read_mode;g=i.user+" "+i18n.is_currently_working_with+' "'+i.patient.name+'" '+i18n["in"]+' "'+i.area+'" '+i18n.area+".<br>";Ext.Msg.show({title:i18n.wait+"!!!",msg:i.overrideReadOnly?h:g,buttons:i.overrideReadOnly?Ext.Msg.YESNO:Ext.Msg.OK,icon:Ext.MessageBox.WARNING,fn:function(k){f(k!="yes")}})}else{f(false)}function f(k){c.patient={pid:i.patient.pid,name:i.patient.name,sex:i.patient.sex,dob:i.patient.dob,age:i.patient.age,priority:i.patient.priority,readOnly:k,eid:null};c.patientBtn.update({pid:i.patient.pid,name:i.patient.name});c.patientBtn.addCls(i.patient.priority);c.patientBtn.enable();if(c.patientOpenVisitsBtn){c.patientOpenVisitsBtn.enable()}if(c.patientCreateEncounterBtn){c.patientCreateEncounterBtn.enable()}if(c.patientCloseCurrEncounterBtn){c.patientCloseCurrEncounterBtn.enable()}if(c.patientChargeBtn){c.patientChargeBtn.enable()}if(c.patientCheckOutBtn){c.patientCheckOutBtn.enable()}if(typeof d=="function"){d(c.patient)}}})})},unsetPatient:function(b){var a=this;Patient.currPatientUnset(function(){a.currEncounterId=null;a.patient={pid:null,name:null,sex:null,dob:null,age:null,eid:null,priority:null,readOnly:false};a.patientButtonRemoveCls();if(typeof b=="function"){b(true)}else{if(a.patientCreateEncounterBtn){a.patientCreateEncounterBtn.disable()}if(a.patientOpenVisitsBtn){a.patientOpenVisitsBtn.disable()}if(a.patientCloseCurrEncounterBtn){a.patientCloseCurrEncounterBtn.disable()}if(a.patientChargeBtn){a.patientChargeBtn.disable()}if(a.patientCheckOutBtn){a.patientCheckOutBtn.disable()}a.patientBtn.disable();a.patientBtn.update({pid:"record number",name:i18n.no_patient_selected})}})},patientButtonRemoveCls:function(){var a=this;a.patientBtn.removeCls("Minimal");a.patientBtn.removeCls("Delayed");a.patientBtn.removeCls("Immediate");a.patientBtn.removeCls("Expectant");a.patientBtn.removeCls("Deceased")},showMiframe:function(a){var b=this,c=a.action;b.winSupport.remove(b.miframe);b.winSupport.add(b.miframe=Ext.create("App.classes.ManagedIframe",{src:c}));b.winSupport.show()},msg:function(d,c){if(!this.msgCt){this.msgCt=Ext.core.DomHelper.insertFirst(document.body,{id:"msg-div"},true)}this.msgCt.alignTo(document,"t-t");var b=Ext.String.format.apply(String,Array.prototype.slice.call(arguments,1)),a=Ext.core.DomHelper.append(this.msgCt,{html:'<div class="msg"><h3>'+d+"</h3><p>"+b+"</p></div>"},true);a.slideIn("t").pause(3000).ghost("t",{remove:true})},checkSession:function(){authProcedures.ckAuth(function(b,a){if(!a.result.authorized){window.location="./"}})},patientBtnTpl:function(){return Ext.create("Ext.XTemplate",'<div class="patient_btn  {priority}">','<div class="patient_btn_img"><img src="resources/images/icons/user_32.png"></div>','<div class="patient_btn_info">','<div class="patient_btn_name">{name}</div>','<div class="patient_btn_record">( {pid} )</div>',"</div>","</div>")},patientBtnRender:function(a){this.unsetPatient();this.initializePatientPoolDragZone(a)},getPatientsInPoolArea:function(){var c=this,b=c.patientPoolArea,a=35;this.patientPoolStore.load({callback:function(d){if(d.length>=1){for(var e=0;e<d.length;e++){a=a+45}}else{a=25}if(c.navColumn.collapsed===false&&!c.navColumn.isCollapsingOrExpanding){a=(a>300)?300:a;b.down("dataview").refresh();b.setHeight(a)}}});this.ppdz.reloadStores()},cancelAutoLogout:function(){var a=this;a.el.unmask();a.LogoutTask.stop(a.LogoutTaskTimer);a.logoutWarinigWindow.destroy();delete a.logoutWarinigWindow;App.classes.ActivityMonitor.start()},startAutoLogout:function(){var a=this;a.logoutWarinigWindow=Ext.create("Ext.Container",{floating:true,cls:"logout-warning-window",html:"Logging Out in...",seconds:10}).show();app.el.mask();if(!a.LogoutTask){a.LogoutTask=new Ext.util.TaskRunner()}if(!a.LogoutTaskTimer){a.LogoutTaskTimer=a.LogoutTask.start({scope:a,run:a.logoutCounter,interval:1000})}else{a.LogoutTask.start(a.LogoutTaskTimer)}},logoutCounter:function(){var b=this,a=b.logoutWarinigWindow.seconds-1;if(a<=0){b.logoutWarinigWindow.update("Logging Out... Bye! Bye!");b.appLogout(true)}else{b.logoutWarinigWindow.update("Logging Out in "+a+"sec");b.logoutWarinigWindow.seconds=a;say("Logging Out in "+a+"sec")}},appLogout:function(b){var a=this;if(b===true){a.setTask(false);authProcedures.unAuth(function(){window.location="./"})}else{Ext.Msg.show({title:i18n.please_confirm+"...",msg:i18n.are_you_sure_to_quit+" GaiaEHR?",icon:Ext.MessageBox.QUESTION,buttons:Ext.Msg.YESNO,fn:function(c){if(c=="yes"){authProcedures.unAuth(function(){a.setTask(false);window.location="./"})}}})}},initializePatientPoolDragZone:function(a){a.dragZone=Ext.create("Ext.dd.DragZone",a.getEl(),{ddGroup:"patientPoolAreas",getDragData:function(){var b=app.patientBtn.el.dom,c;if(app.currCardCmp!=app.ppdz){app.MainPanel.getLayout().setActiveItem(app.ppdz)}app.navColumn.down("treepanel").getSelectionModel().deselectAll();if(b){c=b.cloneNode(true);c.id=Ext.id();return a.dragData={copy:true,sourceEl:b,repairXY:Ext.fly(b).getXY(),ddel:c,records:[a.data],patient:true}}return false},getRepairXY:function(){app.goBack();return this.dragData.repairXY}})},initializeOpenEncounterDragZone:function(a){a.dragZone=Ext.create("Ext.dd.DragZone",a.getEl(),{ddGroup:"patient",newGroupReset:true,b4MouseDown:function(d){if(this.newGroupReset){var c=d.getTarget(a.itemSelector,10),b=a.getRecord(c).data;this.removeFromGroup(this.ddGroup);say("initializeOpenEncounterDragZone | patientData:");say(b);if(b.floorPlanId!=null&&b.patientZoneId==null){app.navigateTo("panelAreaFloorPlan");this.ddGroup="patientPoolAreas"}else{this.ddGroup="patient";app.MainPanel.el.mask(i18n.drop_here_to_open+' <strong>"'+a.getRecord(c).data.name+'"</strong> '+i18n.current_encounter)}this.addToGroup(this.ddGroup);this.newGroupReset=false}this.autoOffset(d.getPageX(),d.getPageY())},endDrag:function(b){this.newGroupReset=true},getDragData:function(f){var c=f.getTarget(a.itemSelector,10),g,b=a.getRecord(c).data;if(c){g=c.cloneNode(true);g.id=Ext.id();return a.dragData={sourceEl:c,repairXY:Ext.fly(c).getXY(),ddel:g,patientData:b}}return false},getRepairXY:function(){app.MainPanel.el.unmask();this.newGroupReset=true;return this.dragData.repairXY}})},onDocumentView:function(b){var a=this;if(a.documentViewWindow){a.DocumentViewerWindow.remove(a.documentViewWindow)}a.DocumentViewerWindow.add(a.documentViewWindow=Ext.create("App.classes.ManagedIframe",{src:b}));a.DocumentViewerWindow.show()},initializeOpenEncounterDropZone:function(a){var b=this;a.dropZone=Ext.create("Ext.dd.DropZone",a.getEl(),{ddGroup:"patient",notifyOver:function(c,f,d){return Ext.dd.DropZone.prototype.dropAllowed},notifyDrop:function(c,f,d){app.MainPanel.el.unmask();b.setPatient(d.patientData.pid,d.patientData.name,function(){if(d.patientData.eid&&d.patientData.poolArea=="Check Out"){b.checkOutPatient(d.patientData.eid)}else{if(d.patientData.eid&&acl.access_encounters){b.openEncounter(d.patientData.eid)}else{if(d.patientData.floorPlanId==null){b.openPatientSummary()}}}})}})},appRender:function(){this.loadModules()},loadModules:function(){Modules.getEnabledModules(function(d,a){var b=a.result;for(var c=0;c<b.length;c++){say("Module "+b[c].dir+" loaded!");Ext.create("Modules."+b[c].dir+".Main")}})},removeAppMask:function(){Ext.get("mainapp-loading").remove();Ext.get("mainapp-loading-mask").fadeOut({remove:true})},beforeAppRender:function(){},getCurrPatient:function(){return this.patient.pid},getApp:function(){return this},setTask:function(b){var a=this;if(b){App.classes.ActivityMonitor.init({interval:a.activityMonitorInterval*1000,maxInactive:(1000*60*a.activityMonitorMaxInactive),verbose:true,isInactive:function(){a.startAutoLogout()}});Ext.TaskManager.start(a.cronTask);App.classes.ActivityMonitor.start()}else{Ext.TaskManager.stop(a.cronTask);App.classes.ActivityMonitor.stop()}},accessDenied:function(){Ext.Msg.show({title:"Oops!",msg:i18n.access_denied,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR})},alert:function(b,a){if(a=="error"){a=Ext.Msg.ERROR}else{if(a=="warning"){a=Ext.Msg.WARNING}else{if(a=="question"){a=Ext.Msg.QUESTION}else{a=Ext.Msg.INFO}}}Ext.Msg.show({title:"Oops!",msg:b,buttons:Ext.Msg.OK,icon:a})}});
